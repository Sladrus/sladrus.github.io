{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IGE = void 0;\nvar buffer_1 = require(\"buffer/\");\nvar Helpers = require(\"../Helpers\");\nvar _require = require(\"@cryptography/aes\"),\n  aes_ige = _require.IGE;\nvar IGENEW = /*#__PURE__*/function () {\n  function IGENEW(key, iv) {\n    _classCallCheck(this, IGENEW);\n    this.ige = new aes_ige(key, iv);\n  }\n  /**\r\n   * Decrypts the given text in 16-bytes blocks by using the given key and 32-bytes initialization vector\r\n   * @param cipherText {Buffer}\r\n   * @returns {Buffer}\r\n   */\n  _createClass(IGENEW, [{\n    key: \"decryptIge\",\n    value: function decryptIge(cipherText) {\n      return Helpers.convertToLittle(this.ige.decrypt(cipherText));\n    }\n    /**\r\n     * Encrypts the given text in 16-bytes blocks by using the given key and 32-bytes initialization vector\r\n     * @param plainText {Buffer}\r\n     * @returns {Buffer}\r\n     */\n  }, {\n    key: \"encryptIge\",\n    value: function encryptIge(plainText) {\n      var padding = plainText.length % 16;\n      if (padding) {\n        plainText = buffer_1.Buffer.concat([plainText, Helpers.generateRandomBytes(16 - padding)]);\n      }\n      return Helpers.convertToLittle(this.ige.encrypt(plainText));\n    }\n  }]);\n  return IGENEW;\n}();\nexports.IGE = IGENEW;","map":{"version":3,"names":["Object","defineProperty","exports","value","IGE","buffer_1","require","Helpers","aes_ige","IGENEW","key","iv","ige","cipherText","convertToLittle","decrypt","plainText","padding","length","Buffer","concat","generateRandomBytes","encrypt"],"sources":["C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/telegram/crypto/IGE.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.IGE = void 0;\r\nconst buffer_1 = require(\"buffer/\");\r\nconst Helpers = require(\"../Helpers\");\r\nconst { IGE: aes_ige } = require(\"@cryptography/aes\");\r\nclass IGENEW {\r\n    constructor(key, iv) {\r\n        this.ige = new aes_ige(key, iv);\r\n    }\r\n    /**\r\n     * Decrypts the given text in 16-bytes blocks by using the given key and 32-bytes initialization vector\r\n     * @param cipherText {Buffer}\r\n     * @returns {Buffer}\r\n     */\r\n    decryptIge(cipherText) {\r\n        return Helpers.convertToLittle(this.ige.decrypt(cipherText));\r\n    }\r\n    /**\r\n     * Encrypts the given text in 16-bytes blocks by using the given key and 32-bytes initialization vector\r\n     * @param plainText {Buffer}\r\n     * @returns {Buffer}\r\n     */\r\n    encryptIge(plainText) {\r\n        const padding = plainText.length % 16;\r\n        if (padding) {\r\n            plainText = buffer_1.Buffer.concat([\r\n                plainText,\r\n                Helpers.generateRandomBytes(16 - padding),\r\n            ]);\r\n        }\r\n        return Helpers.convertToLittle(this.ige.encrypt(plainText));\r\n    }\r\n}\r\nexports.IGE = IGENEW;\r\n"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AACbA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,GAAG,GAAG,KAAK,CAAC;AACpB,IAAMC,QAAQ,GAAGC,OAAO,CAAC,SAAS,CAAC;AACnC,IAAMC,OAAO,GAAGD,OAAO,CAAC,YAAY,CAAC;AACrC,eAAyBA,OAAO,CAAC,mBAAmB,CAAC;EAAxCE,OAAO,YAAZJ,GAAG;AAA2C,IAChDK,MAAM;EACR,gBAAYC,GAAG,EAAEC,EAAE,EAAE;IAAA;IACjB,IAAI,CAACC,GAAG,GAAG,IAAIJ,OAAO,CAACE,GAAG,EAAEC,EAAE,CAAC;EACnC;EACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,oBAAWE,UAAU,EAAE;MACnB,OAAON,OAAO,CAACO,eAAe,CAAC,IAAI,CAACF,GAAG,CAACG,OAAO,CAACF,UAAU,CAAC,CAAC;IAChE;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,oBAAWG,SAAS,EAAE;MAClB,IAAMC,OAAO,GAAGD,SAAS,CAACE,MAAM,GAAG,EAAE;MACrC,IAAID,OAAO,EAAE;QACTD,SAAS,GAAGX,QAAQ,CAACc,MAAM,CAACC,MAAM,CAAC,CAC/BJ,SAAS,EACTT,OAAO,CAACc,mBAAmB,CAAC,EAAE,GAAGJ,OAAO,CAAC,CAC5C,CAAC;MACN;MACA,OAAOV,OAAO,CAACO,eAAe,CAAC,IAAI,CAACF,GAAG,CAACU,OAAO,CAACN,SAAS,CAAC,CAAC;IAC/D;EAAC;EAAA;AAAA;AAELd,OAAO,CAACE,GAAG,GAAGK,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}