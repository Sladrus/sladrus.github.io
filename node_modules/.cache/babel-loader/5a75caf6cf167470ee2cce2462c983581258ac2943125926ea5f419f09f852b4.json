{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _possibleConstructorReturn = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\").default;\nvar _createClass = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _classCallCheck = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _inherits = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _wrapNativeSuper = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/wrapNativeSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BadMessageError = exports.CdnFileTamperedError = exports.SecurityError = exports.InvalidBufferError = exports.InvalidChecksumError = exports.TypeNotFoundError = exports.ReadCancelledError = void 0;\n/**\r\n * Occurs when a read operation was cancelled.\r\n */\nvar ReadCancelledError = /*#__PURE__*/function (_Error) {\n  _inherits(ReadCancelledError, _Error);\n  var _super = _createSuper(ReadCancelledError);\n  function ReadCancelledError() {\n    _classCallCheck(this, ReadCancelledError);\n    return _super.call(this, \"The read operation was cancelled.\");\n  }\n  return _createClass(ReadCancelledError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nexports.ReadCancelledError = ReadCancelledError;\n/**\r\n * Occurs when a type is not found, for example,\r\n * when trying to read a TLObject with an invalid constructor code.\r\n */\nvar TypeNotFoundError = /*#__PURE__*/function (_Error2) {\n  _inherits(TypeNotFoundError, _Error2);\n  var _super2 = _createSuper(TypeNotFoundError);\n  function TypeNotFoundError(invalidConstructorId, remaining) {\n    var _this;\n    _classCallCheck(this, TypeNotFoundError);\n    _this = _super2.call(this, \"Could not find a matching Constructor ID for the TLObject that was supposed to be\\n        read with ID \".concat(invalidConstructorId, \". Most likely, a TLObject was trying to be read when\\n         it should not be read. Remaining bytes: \").concat(remaining.length));\n    if (typeof alert !== \"undefined\") {\n      alert(\"Missing MTProto Entity: Please, make sure to add TL definition for ID \".concat(invalidConstructorId));\n    }\n    _this.invalidConstructorId = invalidConstructorId;\n    _this.remaining = remaining;\n    return _this;\n  }\n  return _createClass(TypeNotFoundError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nexports.TypeNotFoundError = TypeNotFoundError;\n/**\r\n * Occurs when using the TCP full mode and the checksum of a received\r\n * packet doesn't match the expected checksum.\r\n */\nvar InvalidChecksumError = /*#__PURE__*/function (_Error3) {\n  _inherits(InvalidChecksumError, _Error3);\n  var _super3 = _createSuper(InvalidChecksumError);\n  function InvalidChecksumError(checksum, validChecksum) {\n    var _this2;\n    _classCallCheck(this, InvalidChecksumError);\n    _this2 = _super3.call(this, \"Invalid checksum (\".concat(checksum, \" when \").concat(validChecksum, \" was expected). This packet should be skipped.\"));\n    _this2.checksum = checksum;\n    _this2.validChecksum = validChecksum;\n    return _this2;\n  }\n  return _createClass(InvalidChecksumError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nexports.InvalidChecksumError = InvalidChecksumError;\n/**\r\n * Occurs when the buffer is invalid, and may contain an HTTP error code.\r\n * For instance, 404 means \"forgotten/broken authorization key\", while\r\n */\nvar InvalidBufferError = /*#__PURE__*/function (_Error4) {\n  _inherits(InvalidBufferError, _Error4);\n  var _super4 = _createSuper(InvalidBufferError);\n  function InvalidBufferError(payload) {\n    var _this3;\n    _classCallCheck(this, InvalidBufferError);\n    var code = undefined;\n    if (payload.length === 4) {\n      code = -payload.readInt32LE(0);\n      _this3 = _super4.call(this, \"Invalid response buffer (HTTP code \".concat(code, \")\"));\n    } else {\n      _this3 = _super4.call(this, \"Invalid response buffer (too short \".concat(payload, \")\"));\n    }\n    _this3.code = code;\n    _this3.payload = payload;\n    return _possibleConstructorReturn(_this3);\n  }\n  return _createClass(InvalidBufferError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nexports.InvalidBufferError = InvalidBufferError;\n/**\r\n * Generic security error, mostly used when generating a new AuthKey.\r\n */\nvar SecurityError = /*#__PURE__*/function (_Error5) {\n  _inherits(SecurityError, _Error5);\n  var _super5 = _createSuper(SecurityError);\n  function SecurityError() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _classCallCheck(this, SecurityError);\n    if (!args.length) {\n      args = [\"A security check failed.\"];\n    }\n    return _super5.call.apply(_super5, [this].concat(_toConsumableArray(args)));\n  }\n  return _createClass(SecurityError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nexports.SecurityError = SecurityError;\n/**\r\n * Occurs when there's a hash mismatch between the decrypted CDN file\r\n * and its expected hash.\r\n */\nvar CdnFileTamperedError = /*#__PURE__*/function (_SecurityError) {\n  _inherits(CdnFileTamperedError, _SecurityError);\n  var _super6 = _createSuper(CdnFileTamperedError);\n  function CdnFileTamperedError() {\n    _classCallCheck(this, CdnFileTamperedError);\n    return _super6.call(this, \"The CDN file has been altered and its download cancelled.\");\n  }\n  return _createClass(CdnFileTamperedError);\n}(SecurityError);\nexports.CdnFileTamperedError = CdnFileTamperedError;\n/**\r\n * Occurs when handling a badMessageNotification\r\n */\nvar BadMessageError = /*#__PURE__*/function (_Error6) {\n  _inherits(BadMessageError, _Error6);\n  var _super7 = _createSuper(BadMessageError);\n  function BadMessageError(request, code) {\n    var _this4;\n    _classCallCheck(this, BadMessageError);\n    var errorMessage = BadMessageError.ErrorMessages[code] || \"Unknown error code (this should not happen): \".concat(code, \".\");\n    errorMessage += \"  Caused by \".concat(request.className);\n    _this4 = _super7.call(this, errorMessage);\n    _this4.errorMessage = errorMessage;\n    _this4.code = code;\n    return _this4;\n  }\n  return _createClass(BadMessageError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nexports.BadMessageError = BadMessageError;\nBadMessageError.ErrorMessages = {\n  16: \"msg_id too low (most likely, client time is wrong it would be worthwhile to \" + \"synchronize it using msg_id notifications and re-send the original message \" + \"with the “correct” msg_id or wrap it in a container with a new msg_id if the \" + \"original message had waited too long on the client to be transmitted).\",\n  17: \"msg_id too high (similar to the previous case, the client time has to be \" + \"synchronized, and the message re-sent with the correct msg_id).\",\n  18: \"Incorrect two lower order msg_id bits (the server expects client message msg_id \" + \"to be divisible by 4).\",\n  19: \"Container msg_id is the same as msg_id of a previously received message \" + \"(this must never happen).\",\n  20: \"Message too old, and it cannot be verified whether the server has received a \" + \"message with this msg_id or not.\",\n  32: \"msg_seqno too low (the server has already received a message with a lower \" + \"msg_id but with either a higher or an equal and odd seqno).\",\n  33: \"msg_seqno too high (similarly, there is a message with a higher msg_id but with \" + \"either a lower or an equal and odd seqno).\",\n  34: \"An even msg_seqno expected (irrelevant message), but odd received.\",\n  35: \"Odd msg_seqno expected (relevant message), but even received.\",\n  48: \"Incorrect server salt (in this case, the bad_server_salt response is received with \" + \"the correct salt, and the message is to be re-sent with it).\",\n  64: \"Invalid container.\"\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","BadMessageError","CdnFileTamperedError","SecurityError","InvalidBufferError","InvalidChecksumError","TypeNotFoundError","ReadCancelledError","Error","invalidConstructorId","remaining","length","alert","checksum","validChecksum","payload","code","undefined","readInt32LE","args","request","errorMessage","ErrorMessages","className"],"sources":["C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/telegram/errors/Common.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BadMessageError = exports.CdnFileTamperedError = exports.SecurityError = exports.InvalidBufferError = exports.InvalidChecksumError = exports.TypeNotFoundError = exports.ReadCancelledError = void 0;\r\n/**\r\n * Occurs when a read operation was cancelled.\r\n */\r\nclass ReadCancelledError extends Error {\r\n    constructor() {\r\n        super(\"The read operation was cancelled.\");\r\n    }\r\n}\r\nexports.ReadCancelledError = ReadCancelledError;\r\n/**\r\n * Occurs when a type is not found, for example,\r\n * when trying to read a TLObject with an invalid constructor code.\r\n */\r\nclass TypeNotFoundError extends Error {\r\n    constructor(invalidConstructorId, remaining) {\r\n        super(`Could not find a matching Constructor ID for the TLObject that was supposed to be\r\n        read with ID ${invalidConstructorId}. Most likely, a TLObject was trying to be read when\r\n         it should not be read. Remaining bytes: ${remaining.length}`);\r\n        if (typeof alert !== \"undefined\") {\r\n            alert(`Missing MTProto Entity: Please, make sure to add TL definition for ID ${invalidConstructorId}`);\r\n        }\r\n        this.invalidConstructorId = invalidConstructorId;\r\n        this.remaining = remaining;\r\n    }\r\n}\r\nexports.TypeNotFoundError = TypeNotFoundError;\r\n/**\r\n * Occurs when using the TCP full mode and the checksum of a received\r\n * packet doesn't match the expected checksum.\r\n */\r\nclass InvalidChecksumError extends Error {\r\n    constructor(checksum, validChecksum) {\r\n        super(`Invalid checksum (${checksum} when ${validChecksum} was expected). This packet should be skipped.`);\r\n        this.checksum = checksum;\r\n        this.validChecksum = validChecksum;\r\n    }\r\n}\r\nexports.InvalidChecksumError = InvalidChecksumError;\r\n/**\r\n * Occurs when the buffer is invalid, and may contain an HTTP error code.\r\n * For instance, 404 means \"forgotten/broken authorization key\", while\r\n */\r\nclass InvalidBufferError extends Error {\r\n    constructor(payload) {\r\n        let code = undefined;\r\n        if (payload.length === 4) {\r\n            code = -payload.readInt32LE(0);\r\n            super(`Invalid response buffer (HTTP code ${code})`);\r\n        }\r\n        else {\r\n            super(`Invalid response buffer (too short ${payload})`);\r\n        }\r\n        this.code = code;\r\n        this.payload = payload;\r\n    }\r\n}\r\nexports.InvalidBufferError = InvalidBufferError;\r\n/**\r\n * Generic security error, mostly used when generating a new AuthKey.\r\n */\r\nclass SecurityError extends Error {\r\n    constructor(...args) {\r\n        if (!args.length) {\r\n            args = [\"A security check failed.\"];\r\n        }\r\n        super(...args);\r\n    }\r\n}\r\nexports.SecurityError = SecurityError;\r\n/**\r\n * Occurs when there's a hash mismatch between the decrypted CDN file\r\n * and its expected hash.\r\n */\r\nclass CdnFileTamperedError extends SecurityError {\r\n    constructor() {\r\n        super(\"The CDN file has been altered and its download cancelled.\");\r\n    }\r\n}\r\nexports.CdnFileTamperedError = CdnFileTamperedError;\r\n/**\r\n * Occurs when handling a badMessageNotification\r\n */\r\nclass BadMessageError extends Error {\r\n    constructor(request, code) {\r\n        let errorMessage = BadMessageError.ErrorMessages[code] ||\r\n            `Unknown error code (this should not happen): ${code}.`;\r\n        errorMessage += `  Caused by ${request.className}`;\r\n        super(errorMessage);\r\n        this.errorMessage = errorMessage;\r\n        this.code = code;\r\n    }\r\n}\r\nexports.BadMessageError = BadMessageError;\r\nBadMessageError.ErrorMessages = {\r\n    16: \"msg_id too low (most likely, client time is wrong it would be worthwhile to \" +\r\n        \"synchronize it using msg_id notifications and re-send the original message \" +\r\n        \"with the “correct” msg_id or wrap it in a container with a new msg_id if the \" +\r\n        \"original message had waited too long on the client to be transmitted).\",\r\n    17: \"msg_id too high (similar to the previous case, the client time has to be \" +\r\n        \"synchronized, and the message re-sent with the correct msg_id).\",\r\n    18: \"Incorrect two lower order msg_id bits (the server expects client message msg_id \" +\r\n        \"to be divisible by 4).\",\r\n    19: \"Container msg_id is the same as msg_id of a previously received message \" +\r\n        \"(this must never happen).\",\r\n    20: \"Message too old, and it cannot be verified whether the server has received a \" +\r\n        \"message with this msg_id or not.\",\r\n    32: \"msg_seqno too low (the server has already received a message with a lower \" +\r\n        \"msg_id but with either a higher or an equal and odd seqno).\",\r\n    33: \"msg_seqno too high (similarly, there is a message with a higher msg_id but with \" +\r\n        \"either a lower or an equal and odd seqno).\",\r\n    34: \"An even msg_seqno expected (irrelevant message), but odd received.\",\r\n    35: \"Odd msg_seqno expected (relevant message), but even received.\",\r\n    48: \"Incorrect server salt (in this case, the bad_server_salt response is received with \" +\r\n        \"the correct salt, and the message is to be re-sent with it).\",\r\n    64: \"Invalid container.\",\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}