{"ast":null,"code":"\"use strict\";\n\nvar _inherits = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _regeneratorRuntime = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObfuscatedConnection = exports.PacketCodec = exports.Connection = void 0;\nvar extensions_1 = require(\"../../extensions\");\nvar real_cancellable_promise_1 = require(\"real-cancellable-promise\");\n/**\r\n * The `Connection` class is a wrapper around ``asyncio.open_connection``.\r\n *\r\n * Subclasses will implement different transport modes as atomic operations,\r\n * which this class eases doing since the exposed interface simply puts and\r\n * gets complete data payloads to and from queues.\r\n *\r\n * The only error that will raise from send and receive methods is\r\n * ``ConnectionError``, which will raise when attempting to send if\r\n * the client is disconnected (includes remote disconnections).\r\n */\nvar Connection = /*#__PURE__*/function () {\n  function Connection(_ref) {\n    var ip = _ref.ip,\n      port = _ref.port,\n      dcId = _ref.dcId,\n      loggers = _ref.loggers,\n      proxy = _ref.proxy,\n      socket = _ref.socket,\n      testServers = _ref.testServers;\n    _classCallCheck(this, Connection);\n    this._ip = ip;\n    this._port = port;\n    this._dcId = dcId;\n    this._log = loggers;\n    this._proxy = proxy;\n    this._connected = false;\n    this._sendTask = undefined;\n    this._recvTask = undefined;\n    this._codec = undefined;\n    this._obfuscation = undefined; // TcpObfuscated and MTProxy\n    this._sendArray = new extensions_1.AsyncQueue();\n    this._recvArray = new extensions_1.AsyncQueue();\n    this.socket = new socket(proxy);\n    this._testServers = testServers;\n  }\n  _createClass(Connection, [{\n    key: \"_connect\",\n    value: function () {\n      var _connect2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this._log.debug(\"Connecting\");\n              this._codec = new this.PacketCodecClass(this);\n              _context.next = 4;\n              return this.socket.connect(this._port, this._ip, this._testServers);\n            case 4:\n              this._log.debug(\"Finished connecting\");\n              // await this.socket.connect({host: this._ip, port: this._port});\n              _context.next = 7;\n              return this._initConn();\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function _connect() {\n        return _connect2.apply(this, arguments);\n      }\n      return _connect;\n    }()\n  }, {\n    key: \"connect\",\n    value: function () {\n      var _connect3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this._connect();\n            case 2:\n              this._connected = true;\n              this._sendTask = this._sendLoop();\n              this._recvTask = this._recvLoop();\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function connect() {\n        return _connect3.apply(this, arguments);\n      }\n      return connect;\n    }()\n  }, {\n    key: \"_cancelLoops\",\n    value: function _cancelLoops() {\n      this.recvCancel.cancel();\n      this.sendCancel.cancel();\n    }\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              this._connected = false;\n              this._cancelLoops();\n              _context3.prev = 2;\n              _context3.next = 5;\n              return this.socket.close();\n            case 5:\n              _context3.next = 10;\n              break;\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](2);\n              this._log.error(\"error while closing socket connection\");\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[2, 7]]);\n      }));\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n      return disconnect;\n    }()\n  }, {\n    key: \"send\",\n    value: function () {\n      var _send2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(data) {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (this._connected) {\n                _context4.next = 2;\n                break;\n              }\n              throw new Error(\"Not connected\");\n            case 2:\n              _context4.next = 4;\n              return this._sendArray.push(data);\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function send(_x) {\n        return _send2.apply(this, arguments);\n      }\n      return send;\n    }()\n  }, {\n    key: \"recv\",\n    value: function () {\n      var _recv2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!this._connected) {\n                _context5.next = 8;\n                break;\n              }\n              _context5.next = 3;\n              return this._recvArray.pop();\n            case 3:\n              result = _context5.sent;\n              if (!(result && result.length)) {\n                _context5.next = 6;\n                break;\n              }\n              return _context5.abrupt(\"return\", result);\n            case 6:\n              _context5.next = 0;\n              break;\n            case 8:\n              throw new Error(\"Not connected\");\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function recv() {\n        return _recv2.apply(this, arguments);\n      }\n      return recv;\n    }()\n  }, {\n    key: \"_sendLoop\",\n    value: function () {\n      var _sendLoop2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var data;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n            case 1:\n              if (!this._connected) {\n                _context6.next = 12;\n                break;\n              }\n              this.sendCancel = (0, real_cancellable_promise_1.pseudoCancellable)(this._sendArray.pop());\n              _context6.next = 5;\n              return this.sendCancel;\n            case 5:\n              data = _context6.sent;\n              if (data) {\n                _context6.next = 8;\n                break;\n              }\n              return _context6.abrupt(\"continue\", 1);\n            case 8:\n              _context6.next = 10;\n              return this._send(data);\n            case 10:\n              _context6.next = 1;\n              break;\n            case 12:\n              _context6.next = 21;\n              break;\n            case 14:\n              _context6.prev = 14;\n              _context6.t0 = _context6[\"catch\"](0);\n              if (!(_context6.t0 instanceof real_cancellable_promise_1.Cancellation)) {\n                _context6.next = 18;\n                break;\n              }\n              return _context6.abrupt(\"return\");\n            case 18:\n              this._log.info(\"The server closed the connection while sending\");\n              _context6.next = 21;\n              return this.disconnect();\n            case 21:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[0, 14]]);\n      }));\n      function _sendLoop() {\n        return _sendLoop2.apply(this, arguments);\n      }\n      return _sendLoop;\n    }()\n  }, {\n    key: \"_recvLoop\",\n    value: function () {\n      var _recvLoop2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var data;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!this._connected) {\n                _context7.next = 29;\n                break;\n              }\n              _context7.prev = 1;\n              this.recvCancel = (0, real_cancellable_promise_1.pseudoCancellable)(this._recv());\n              _context7.next = 5;\n              return this.recvCancel;\n            case 5:\n              data = _context7.sent;\n              _context7.next = 19;\n              break;\n            case 8:\n              _context7.prev = 8;\n              _context7.t0 = _context7[\"catch\"](1);\n              if (!(_context7.t0 instanceof real_cancellable_promise_1.Cancellation)) {\n                _context7.next = 12;\n                break;\n              }\n              return _context7.abrupt(\"return\");\n            case 12:\n              this._log.info(\"The server closed the connection\");\n              _context7.next = 15;\n              return this.disconnect();\n            case 15:\n              if (this._recvArray._queue.length) {\n                _context7.next = 18;\n                break;\n              }\n              _context7.next = 18;\n              return this._recvArray.push(undefined);\n            case 18:\n              return _context7.abrupt(\"break\", 29);\n            case 19:\n              _context7.prev = 19;\n              _context7.next = 22;\n              return this._recvArray.push(data);\n            case 22:\n              _context7.next = 27;\n              break;\n            case 24:\n              _context7.prev = 24;\n              _context7.t1 = _context7[\"catch\"](19);\n              return _context7.abrupt(\"break\", 29);\n            case 27:\n              _context7.next = 0;\n              break;\n            case 29:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[1, 8], [19, 24]]);\n      }));\n      function _recvLoop() {\n        return _recvLoop2.apply(this, arguments);\n      }\n      return _recvLoop;\n    }()\n  }, {\n    key: \"_initConn\",\n    value: function () {\n      var _initConn2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              if (!this._codec.tag) {\n                _context8.next = 3;\n                break;\n              }\n              _context8.next = 3;\n              return this.socket.write(this._codec.tag);\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function _initConn() {\n        return _initConn2.apply(this, arguments);\n      }\n      return _initConn;\n    }()\n  }, {\n    key: \"_send\",\n    value: function () {\n      var _send3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(data) {\n        var encodedPacket;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              encodedPacket = this._codec.encodePacket(data);\n              this.socket.write(encodedPacket);\n            case 2:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function _send(_x2) {\n        return _send3.apply(this, arguments);\n      }\n      return _send;\n    }()\n  }, {\n    key: \"_recv\",\n    value: function () {\n      var _recv3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return this._codec.readPacket(this.socket);\n            case 2:\n              return _context10.abrupt(\"return\", _context10.sent);\n            case 3:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function _recv() {\n        return _recv3.apply(this, arguments);\n      }\n      return _recv;\n    }()\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this._ip, \":\").concat(this._port, \"/\").concat(this.constructor.name.replace(\"Connection\", \"\"));\n    }\n  }]);\n  return Connection;\n}();\nexports.Connection = Connection;\nvar ObfuscatedConnection = /*#__PURE__*/function (_Connection) {\n  _inherits(ObfuscatedConnection, _Connection);\n  var _super = _createSuper(ObfuscatedConnection);\n  function ObfuscatedConnection() {\n    var _this;\n    _classCallCheck(this, ObfuscatedConnection);\n    _this = _super.apply(this, arguments);\n    _this.ObfuscatedIO = undefined;\n    return _this;\n  }\n  _createClass(ObfuscatedConnection, [{\n    key: \"_initConn\",\n    value: function () {\n      var _initConn3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              this._obfuscation = new this.ObfuscatedIO(this);\n              _context11.next = 3;\n              return this._obfuscation.initHeader();\n            case 3:\n              this.socket.write(this._obfuscation.header);\n            case 4:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n      function _initConn() {\n        return _initConn3.apply(this, arguments);\n      }\n      return _initConn;\n    }()\n  }, {\n    key: \"_send\",\n    value: function () {\n      var _send4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(data) {\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              this._obfuscation.write(this._codec.encodePacket(data));\n            case 1:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, this);\n      }));\n      function _send(_x3) {\n        return _send4.apply(this, arguments);\n      }\n      return _send;\n    }()\n  }, {\n    key: \"_recv\",\n    value: function () {\n      var _recv4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.next = 2;\n              return this._codec.readPacket(this._obfuscation);\n            case 2:\n              return _context13.abrupt(\"return\", _context13.sent);\n            case 3:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, this);\n      }));\n      function _recv() {\n        return _recv4.apply(this, arguments);\n      }\n      return _recv;\n    }()\n  }]);\n  return ObfuscatedConnection;\n}(Connection);\nexports.ObfuscatedConnection = ObfuscatedConnection;\nvar PacketCodec = /*#__PURE__*/function () {\n  function PacketCodec(connection) {\n    _classCallCheck(this, PacketCodec);\n    this._conn = connection;\n  }\n  _createClass(PacketCodec, [{\n    key: \"encodePacket\",\n    value: function encodePacket(data) {\n      throw new Error(\"Not Implemented\");\n      // Override\n    }\n  }, {\n    key: \"readPacket\",\n    value: function () {\n      var _readPacket = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(reader) {\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              throw new Error(\"Not Implemented\");\n            case 1:\n            case \"end\":\n              return _context14.stop();\n          }\n        }, _callee14);\n      }));\n      function readPacket(_x4) {\n        return _readPacket.apply(this, arguments);\n      }\n      return readPacket;\n    }()\n  }]);\n  return PacketCodec;\n}();\nexports.PacketCodec = PacketCodec;","map":{"version":3,"names":["Object","defineProperty","exports","value","ObfuscatedConnection","PacketCodec","Connection","extensions_1","require","real_cancellable_promise_1","ip","port","dcId","loggers","proxy","socket","testServers","_ip","_port","_dcId","_log","_proxy","_connected","_sendTask","undefined","_recvTask","_codec","_obfuscation","_sendArray","AsyncQueue","_recvArray","_testServers","debug","PacketCodecClass","connect","_initConn","_connect","_sendLoop","_recvLoop","recvCancel","cancel","sendCancel","_cancelLoops","close","error","data","Error","push","pop","result","length","pseudoCancellable","_send","Cancellation","info","disconnect","_recv","_queue","tag","write","encodedPacket","encodePacket","readPacket","constructor","name","replace","arguments","ObfuscatedIO","initHeader","header","connection","_conn","reader"],"sources":["C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/telegram/network/connection/Connection.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ObfuscatedConnection = exports.PacketCodec = exports.Connection = void 0;\r\nconst extensions_1 = require(\"../../extensions\");\r\nconst real_cancellable_promise_1 = require(\"real-cancellable-promise\");\r\n/**\r\n * The `Connection` class is a wrapper around ``asyncio.open_connection``.\r\n *\r\n * Subclasses will implement different transport modes as atomic operations,\r\n * which this class eases doing since the exposed interface simply puts and\r\n * gets complete data payloads to and from queues.\r\n *\r\n * The only error that will raise from send and receive methods is\r\n * ``ConnectionError``, which will raise when attempting to send if\r\n * the client is disconnected (includes remote disconnections).\r\n */\r\nclass Connection {\r\n    constructor({ ip, port, dcId, loggers, proxy, socket, testServers, }) {\r\n        this._ip = ip;\r\n        this._port = port;\r\n        this._dcId = dcId;\r\n        this._log = loggers;\r\n        this._proxy = proxy;\r\n        this._connected = false;\r\n        this._sendTask = undefined;\r\n        this._recvTask = undefined;\r\n        this._codec = undefined;\r\n        this._obfuscation = undefined; // TcpObfuscated and MTProxy\r\n        this._sendArray = new extensions_1.AsyncQueue();\r\n        this._recvArray = new extensions_1.AsyncQueue();\r\n        this.socket = new socket(proxy);\r\n        this._testServers = testServers;\r\n    }\r\n    async _connect() {\r\n        this._log.debug(\"Connecting\");\r\n        this._codec = new this.PacketCodecClass(this);\r\n        await this.socket.connect(this._port, this._ip, this._testServers);\r\n        this._log.debug(\"Finished connecting\");\r\n        // await this.socket.connect({host: this._ip, port: this._port});\r\n        await this._initConn();\r\n    }\r\n    async connect() {\r\n        await this._connect();\r\n        this._connected = true;\r\n        this._sendTask = this._sendLoop();\r\n        this._recvTask = this._recvLoop();\r\n    }\r\n    _cancelLoops() {\r\n        this.recvCancel.cancel();\r\n        this.sendCancel.cancel();\r\n    }\r\n    async disconnect() {\r\n        this._connected = false;\r\n        this._cancelLoops();\r\n        try {\r\n            await this.socket.close();\r\n        }\r\n        catch (e) {\r\n            this._log.error(\"error while closing socket connection\");\r\n        }\r\n    }\r\n    async send(data) {\r\n        if (!this._connected) {\r\n            throw new Error(\"Not connected\");\r\n        }\r\n        await this._sendArray.push(data);\r\n    }\r\n    async recv() {\r\n        while (this._connected) {\r\n            const result = await this._recvArray.pop();\r\n            if (result && result.length) {\r\n                return result;\r\n            }\r\n        }\r\n        throw new Error(\"Not connected\");\r\n    }\r\n    async _sendLoop() {\r\n        try {\r\n            while (this._connected) {\r\n                this.sendCancel = (0, real_cancellable_promise_1.pseudoCancellable)(this._sendArray.pop());\r\n                const data = await this.sendCancel;\r\n                if (!data) {\r\n                    continue;\r\n                }\r\n                await this._send(data);\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (e instanceof real_cancellable_promise_1.Cancellation) {\r\n                return;\r\n            }\r\n            this._log.info(\"The server closed the connection while sending\");\r\n            await this.disconnect();\r\n        }\r\n    }\r\n    async _recvLoop() {\r\n        let data;\r\n        while (this._connected) {\r\n            try {\r\n                this.recvCancel = (0, real_cancellable_promise_1.pseudoCancellable)(this._recv());\r\n                data = await this.recvCancel;\r\n            }\r\n            catch (e) {\r\n                if (e instanceof real_cancellable_promise_1.Cancellation) {\r\n                    return;\r\n                }\r\n                this._log.info(\"The server closed the connection\");\r\n                await this.disconnect();\r\n                if (!this._recvArray._queue.length) {\r\n                    await this._recvArray.push(undefined);\r\n                }\r\n                break;\r\n            }\r\n            try {\r\n                await this._recvArray.push(data);\r\n            }\r\n            catch (e) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    async _initConn() {\r\n        if (this._codec.tag) {\r\n            await this.socket.write(this._codec.tag);\r\n        }\r\n    }\r\n    async _send(data) {\r\n        const encodedPacket = this._codec.encodePacket(data);\r\n        this.socket.write(encodedPacket);\r\n    }\r\n    async _recv() {\r\n        return await this._codec.readPacket(this.socket);\r\n    }\r\n    toString() {\r\n        return `${this._ip}:${this._port}/${this.constructor.name.replace(\"Connection\", \"\")}`;\r\n    }\r\n}\r\nexports.Connection = Connection;\r\nclass ObfuscatedConnection extends Connection {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.ObfuscatedIO = undefined;\r\n    }\r\n    async _initConn() {\r\n        this._obfuscation = new this.ObfuscatedIO(this);\r\n        await this._obfuscation.initHeader();\r\n        this.socket.write(this._obfuscation.header);\r\n    }\r\n    async _send(data) {\r\n        this._obfuscation.write(this._codec.encodePacket(data));\r\n    }\r\n    async _recv() {\r\n        return await this._codec.readPacket(this._obfuscation);\r\n    }\r\n}\r\nexports.ObfuscatedConnection = ObfuscatedConnection;\r\nclass PacketCodec {\r\n    constructor(connection) {\r\n        this._conn = connection;\r\n    }\r\n    encodePacket(data) {\r\n        throw new Error(\"Not Implemented\");\r\n        // Override\r\n    }\r\n    async readPacket(reader) {\r\n        // override\r\n        throw new Error(\"Not Implemented\");\r\n    }\r\n}\r\nexports.PacketCodec = PacketCodec;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}