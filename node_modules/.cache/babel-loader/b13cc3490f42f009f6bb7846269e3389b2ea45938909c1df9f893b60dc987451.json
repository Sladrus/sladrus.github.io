{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createHash = exports.pbkdf2Sync = exports.Hash = exports.randomBytes = exports.createCipheriv = exports.createDecipheriv = exports.CTR = exports.Counter = void 0;\nvar buffer_1 = require(\"buffer/\");\nvar aes_1 = __importDefault(require(\"@cryptography/aes\"));\nvar converters_1 = require(\"./converters\");\nvar words_1 = require(\"./words\");\nvar Counter = /*#__PURE__*/function () {\n  function Counter(initialValue) {\n    _classCallCheck(this, Counter);\n    this._counter = buffer_1.Buffer.from(initialValue);\n  }\n  _createClass(Counter, [{\n    key: \"increment\",\n    value: function increment() {\n      for (var i = 15; i >= 0; i--) {\n        if (this._counter[i] === 255) {\n          this._counter[i] = 0;\n        } else {\n          this._counter[i]++;\n          break;\n        }\n      }\n    }\n  }]);\n  return Counter;\n}();\nexports.Counter = Counter;\nvar CTR = /*#__PURE__*/function () {\n  function CTR(key, counter) {\n    _classCallCheck(this, CTR);\n    if (!(counter instanceof Counter)) {\n      counter = new Counter(counter);\n    }\n    this._counter = counter;\n    this._remainingCounter = undefined;\n    this._remainingCounterIndex = 16;\n    this._aes = new aes_1.default((0, words_1.getWords)(key));\n  }\n  _createClass(CTR, [{\n    key: \"update\",\n    value: function update(plainText) {\n      return this.encrypt(plainText);\n    }\n  }, {\n    key: \"encrypt\",\n    value: function encrypt(plainText) {\n      var encrypted = buffer_1.Buffer.from(plainText);\n      for (var i = 0; i < encrypted.length; i++) {\n        if (this._remainingCounterIndex === 16) {\n          this._remainingCounter = buffer_1.Buffer.from((0, converters_1.i2ab)(this._aes.encrypt((0, converters_1.ab2i)(this._counter._counter))));\n          this._remainingCounterIndex = 0;\n          this._counter.increment();\n        }\n        if (this._remainingCounter) {\n          encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n      }\n      return encrypted;\n    }\n  }]);\n  return CTR;\n}();\nexports.CTR = CTR;\n// endregion\nfunction createDecipheriv(algorithm, key, iv) {\n  if (algorithm.includes(\"ECB\")) {\n    throw new Error(\"Not supported\");\n  } else {\n    return new CTR(key, iv);\n  }\n}\nexports.createDecipheriv = createDecipheriv;\nfunction createCipheriv(algorithm, key, iv) {\n  if (algorithm.includes(\"ECB\")) {\n    throw new Error(\"Not supported\");\n  } else {\n    return new CTR(key, iv);\n  }\n}\nexports.createCipheriv = createCipheriv;\nfunction randomBytes(count) {\n  var bytes = new Uint8Array(count);\n  crypto.getRandomValues(bytes);\n  return bytes;\n}\nexports.randomBytes = randomBytes;\nvar Hash = /*#__PURE__*/function () {\n  function Hash(algorithm) {\n    _classCallCheck(this, Hash);\n    this.algorithm = algorithm;\n  }\n  _createClass(Hash, [{\n    key: \"update\",\n    value: function update(data) {\n      //We shouldn't be needing new Uint8Array but it doesn't\n      //work without it\n      this.data = new Uint8Array(data);\n    }\n  }, {\n    key: \"digest\",\n    value: function () {\n      var _digest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!this.data) {\n                _context.next = 15;\n                break;\n              }\n              if (!(this.algorithm === \"sha1\")) {\n                _context.next = 9;\n                break;\n              }\n              _context.t0 = buffer_1.Buffer;\n              _context.next = 5;\n              return self.crypto.subtle.digest(\"SHA-1\", this.data);\n            case 5:\n              _context.t1 = _context.sent;\n              return _context.abrupt(\"return\", _context.t0.from.call(_context.t0, _context.t1));\n            case 9:\n              if (!(this.algorithm === \"sha256\")) {\n                _context.next = 15;\n                break;\n              }\n              _context.t2 = buffer_1.Buffer;\n              _context.next = 13;\n              return self.crypto.subtle.digest(\"SHA-256\", this.data);\n            case 13:\n              _context.t3 = _context.sent;\n              return _context.abrupt(\"return\", _context.t2.from.call(_context.t2, _context.t3));\n            case 15:\n              return _context.abrupt(\"return\", buffer_1.Buffer.alloc(0));\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function digest() {\n        return _digest.apply(this, arguments);\n      }\n      return digest;\n    }()\n  }]);\n  return Hash;\n}();\nexports.Hash = Hash;\nfunction pbkdf2Sync(_x, _x2, _x3) {\n  return _pbkdf2Sync.apply(this, arguments);\n}\nfunction _pbkdf2Sync() {\n  _pbkdf2Sync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(password, salt, iterations) {\n    var passwordKey;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return crypto.subtle.importKey(\"raw\", password, {\n            name: \"PBKDF2\"\n          }, false, [\"deriveBits\"]);\n        case 2:\n          passwordKey = _context2.sent;\n          _context2.t0 = buffer_1.Buffer;\n          _context2.next = 6;\n          return crypto.subtle.deriveBits({\n            name: \"PBKDF2\",\n            hash: \"SHA-512\",\n            salt: salt,\n            iterations: iterations\n          }, passwordKey, 512);\n        case 6:\n          _context2.t1 = _context2.sent;\n          return _context2.abrupt(\"return\", _context2.t0.from.call(_context2.t0, _context2.t1));\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _pbkdf2Sync.apply(this, arguments);\n}\nexports.pbkdf2Sync = pbkdf2Sync;\nfunction createHash(algorithm) {\n  return new Hash(algorithm);\n}\nexports.createHash = createHash;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","createHash","pbkdf2Sync","Hash","randomBytes","createCipheriv","createDecipheriv","CTR","Counter","buffer_1","require","aes_1","converters_1","words_1","initialValue","_counter","Buffer","from","i","key","counter","_remainingCounter","undefined","_remainingCounterIndex","_aes","default","getWords","plainText","encrypt","encrypted","length","i2ab","ab2i","increment","algorithm","iv","includes","Error","count","bytes","Uint8Array","crypto","getRandomValues","data","self","subtle","digest","alloc","password","salt","iterations","importKey","name","passwordKey","deriveBits","hash"],"sources":["C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/telegram/crypto/crypto.js"],"sourcesContent":["\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createHash = exports.pbkdf2Sync = exports.Hash = exports.randomBytes = exports.createCipheriv = exports.createDecipheriv = exports.CTR = exports.Counter = void 0;\r\nconst buffer_1 = require(\"buffer/\");\r\nconst aes_1 = __importDefault(require(\"@cryptography/aes\"));\r\nconst converters_1 = require(\"./converters\");\r\nconst words_1 = require(\"./words\");\r\nclass Counter {\r\n    constructor(initialValue) {\r\n        this._counter = buffer_1.Buffer.from(initialValue);\r\n    }\r\n    increment() {\r\n        for (let i = 15; i >= 0; i--) {\r\n            if (this._counter[i] === 255) {\r\n                this._counter[i] = 0;\r\n            }\r\n            else {\r\n                this._counter[i]++;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.Counter = Counter;\r\nclass CTR {\r\n    constructor(key, counter) {\r\n        if (!(counter instanceof Counter)) {\r\n            counter = new Counter(counter);\r\n        }\r\n        this._counter = counter;\r\n        this._remainingCounter = undefined;\r\n        this._remainingCounterIndex = 16;\r\n        this._aes = new aes_1.default((0, words_1.getWords)(key));\r\n    }\r\n    update(plainText) {\r\n        return this.encrypt(plainText);\r\n    }\r\n    encrypt(plainText) {\r\n        const encrypted = buffer_1.Buffer.from(plainText);\r\n        for (let i = 0; i < encrypted.length; i++) {\r\n            if (this._remainingCounterIndex === 16) {\r\n                this._remainingCounter = buffer_1.Buffer.from((0, converters_1.i2ab)(this._aes.encrypt((0, converters_1.ab2i)(this._counter._counter))));\r\n                this._remainingCounterIndex = 0;\r\n                this._counter.increment();\r\n            }\r\n            if (this._remainingCounter) {\r\n                encrypted[i] ^=\r\n                    this._remainingCounter[this._remainingCounterIndex++];\r\n            }\r\n        }\r\n        return encrypted;\r\n    }\r\n}\r\nexports.CTR = CTR;\r\n// endregion\r\nfunction createDecipheriv(algorithm, key, iv) {\r\n    if (algorithm.includes(\"ECB\")) {\r\n        throw new Error(\"Not supported\");\r\n    }\r\n    else {\r\n        return new CTR(key, iv);\r\n    }\r\n}\r\nexports.createDecipheriv = createDecipheriv;\r\nfunction createCipheriv(algorithm, key, iv) {\r\n    if (algorithm.includes(\"ECB\")) {\r\n        throw new Error(\"Not supported\");\r\n    }\r\n    else {\r\n        return new CTR(key, iv);\r\n    }\r\n}\r\nexports.createCipheriv = createCipheriv;\r\nfunction randomBytes(count) {\r\n    const bytes = new Uint8Array(count);\r\n    crypto.getRandomValues(bytes);\r\n    return bytes;\r\n}\r\nexports.randomBytes = randomBytes;\r\nclass Hash {\r\n    constructor(algorithm) {\r\n        this.algorithm = algorithm;\r\n    }\r\n    update(data) {\r\n        //We shouldn't be needing new Uint8Array but it doesn't\r\n        //work without it\r\n        this.data = new Uint8Array(data);\r\n    }\r\n    async digest() {\r\n        if (this.data) {\r\n            if (this.algorithm === \"sha1\") {\r\n                return buffer_1.Buffer.from(await self.crypto.subtle.digest(\"SHA-1\", this.data));\r\n            }\r\n            else if (this.algorithm === \"sha256\") {\r\n                return buffer_1.Buffer.from(await self.crypto.subtle.digest(\"SHA-256\", this.data));\r\n            }\r\n        }\r\n        return buffer_1.Buffer.alloc(0);\r\n    }\r\n}\r\nexports.Hash = Hash;\r\nasync function pbkdf2Sync(password, salt, iterations, ...args) {\r\n    const passwordKey = await crypto.subtle.importKey(\"raw\", password, { name: \"PBKDF2\" }, false, [\"deriveBits\"]);\r\n    return buffer_1.Buffer.from(await crypto.subtle.deriveBits({\r\n        name: \"PBKDF2\",\r\n        hash: \"SHA-512\",\r\n        salt,\r\n        iterations,\r\n    }, passwordKey, 512));\r\n}\r\nexports.pbkdf2Sync = pbkdf2Sync;\r\nfunction createHash(algorithm) {\r\n    return new Hash(algorithm);\r\n}\r\nexports.createHash = createHash;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}