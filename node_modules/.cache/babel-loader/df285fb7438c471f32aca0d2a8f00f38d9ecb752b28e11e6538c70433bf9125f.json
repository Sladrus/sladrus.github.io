{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _regeneratorRuntime = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _createClass = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _classCallCheck = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sendFile = exports._sendAlbum = exports._fileToMedia = exports.uploadFile = exports.CustomFile = void 0;\nvar buffer_1 = require(\"buffer/\");\nvar tl_1 = require(\"../tl\");\nvar Helpers_1 = require(\"../Helpers\");\nvar Utils_1 = require(\"../Utils\");\nvar path_1 = __importDefault(require(\"./path\"));\nvar fs_1 = require(\"./fs\");\nvar index_1 = require(\"../index\");\nvar messageParse_1 = require(\"./messageParse\");\nvar messages_1 = require(\"./messages\");\nvar big_integer_1 = __importDefault(require(\"big-integer\"));\n/**\r\n * A custom file class that mimics the browser's File class.<br/>\r\n * You should use this whenever you want to upload a file.\r\n */\nvar CustomFile = /*#__PURE__*/_createClass(function CustomFile(name, size, path, buffer) {\n  _classCallCheck(this, CustomFile);\n  this.name = name;\n  this.size = size;\n  this.path = path;\n  this.buffer = buffer;\n});\nexports.CustomFile = CustomFile;\nvar CustomBuffer = /*#__PURE__*/function () {\n  function CustomBuffer(options) {\n    _classCallCheck(this, CustomBuffer);\n    this.options = options;\n    if (!options.buffer && !options.filePath) {\n      throw new Error(\"Either one of `buffer` or `filePath` should be specified\");\n    }\n  }\n  _createClass(CustomBuffer, [{\n    key: \"slice\",\n    value: function () {\n      var _slice = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(begin, end) {\n        var _this$options, buffer, filePath, buffSize, buff, fHandle;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this$options = this.options, buffer = _this$options.buffer, filePath = _this$options.filePath;\n              if (!buffer) {\n                _context.next = 5;\n                break;\n              }\n              return _context.abrupt(\"return\", buffer.slice(begin, end));\n            case 5:\n              if (!filePath) {\n                _context.next = 16;\n                break;\n              }\n              buffSize = end - begin;\n              buff = buffer_1.Buffer.alloc(buffSize);\n              _context.next = 10;\n              return fs_1.promises.open(filePath, \"r\");\n            case 10:\n              fHandle = _context.sent;\n              _context.next = 13;\n              return fHandle.read(buff, 0, buffSize, begin);\n            case 13:\n              _context.next = 15;\n              return fHandle.close();\n            case 15:\n              return _context.abrupt(\"return\", buffer_1.Buffer.from(buff));\n            case 16:\n              return _context.abrupt(\"return\", buffer_1.Buffer.alloc(0));\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function slice(_x, _x2) {\n        return _slice.apply(this, arguments);\n      }\n      return slice;\n    }()\n  }]);\n  return CustomBuffer;\n}();\nvar KB_TO_BYTES = 1024;\nvar LARGE_FILE_THRESHOLD = 10 * 1024 * 1024;\nvar UPLOAD_TIMEOUT = 15 * 1000;\nvar DISCONNECT_SLEEP = 1000;\nvar BUFFER_SIZE_2GB = Math.pow(2, 31);\nfunction getFileBuffer(_x3, _x4, _x5) {\n  return _getFileBuffer.apply(this, arguments);\n}\n/** @hidden */\nfunction _getFileBuffer() {\n  _getFileBuffer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(file, fileSize, maxBufferSize) {\n    var options;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          options = {};\n          if (!(fileSize > maxBufferSize && file instanceof CustomFile)) {\n            _context2.next = 5;\n            break;\n          }\n          options.filePath = file.path;\n          _context2.next = 10;\n          break;\n        case 5:\n          _context2.t0 = buffer_1.Buffer;\n          _context2.next = 8;\n          return fileToBuffer(file);\n        case 8:\n          _context2.t1 = _context2.sent;\n          options.buffer = _context2.t0.from.call(_context2.t0, _context2.t1);\n        case 10:\n          return _context2.abrupt(\"return\", new CustomBuffer(options));\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _getFileBuffer.apply(this, arguments);\n}\nfunction uploadFile(_x6, _x7) {\n  return _uploadFile.apply(this, arguments);\n}\nfunction _uploadFile() {\n  _uploadFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(client, fileParams) {\n    var file, onProgress, workers, name, size, fileId, isLarge, partSize, partCount, buffer, progress, i, sendingParts, end, j, bytes;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          file = fileParams.file, onProgress = fileParams.onProgress;\n          workers = fileParams.workers;\n          name = file.name, size = file.size;\n          fileId = (0, Helpers_1.readBigIntFromBuffer)((0, Helpers_1.generateRandomBytes)(8), true, true);\n          isLarge = size > LARGE_FILE_THRESHOLD;\n          partSize = (0, Utils_1.getAppropriatedPartSize)((0, big_integer_1.default)(size)) * KB_TO_BYTES;\n          partCount = Math.floor((size + partSize - 1) / partSize);\n          _context4.next = 9;\n          return getFileBuffer(file, size, fileParams.maxBufferSize || BUFFER_SIZE_2GB - 1);\n        case 9:\n          buffer = _context4.sent;\n          _context4.next = 12;\n          return client.getSender(client.session.dcId);\n        case 12:\n          if (!workers || !size) {\n            workers = 1;\n          }\n          if (workers >= partCount) {\n            workers = partCount;\n          }\n          progress = 0;\n          if (onProgress) {\n            onProgress(progress);\n          }\n          i = 0;\n        case 17:\n          if (!(i < partCount)) {\n            _context4.next = 35;\n            break;\n          }\n          sendingParts = [];\n          end = i + workers;\n          if (end > partCount) {\n            end = partCount;\n          }\n          j = i;\n        case 22:\n          if (!(j < end)) {\n            _context4.next = 30;\n            break;\n          }\n          _context4.next = 25;\n          return buffer.slice(j * partSize, (j + 1) * partSize);\n        case 25:\n          bytes = _context4.sent;\n          // eslint-disable-next-line no-loop-func\n          sendingParts.push(function () {\n            var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(jMemo, bytesMemo) {\n              var sender;\n              return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                while (1) switch (_context3.prev = _context3.next) {\n                  case 0:\n                    if (!true) {\n                      _context3.next = 31;\n                      break;\n                    }\n                    sender = void 0;\n                    _context3.prev = 2;\n                    _context3.next = 5;\n                    return client.getSender(client.session.dcId);\n                  case 5:\n                    sender = _context3.sent;\n                    _context3.next = 8;\n                    return sender.send(isLarge ? new tl_1.Api.upload.SaveBigFilePart({\n                      fileId: fileId,\n                      filePart: jMemo,\n                      fileTotalParts: partCount,\n                      bytes: bytesMemo\n                    }) : new tl_1.Api.upload.SaveFilePart({\n                      fileId: fileId,\n                      filePart: jMemo,\n                      bytes: bytesMemo\n                    }));\n                  case 8:\n                    _context3.next = 23;\n                    break;\n                  case 10:\n                    _context3.prev = 10;\n                    _context3.t0 = _context3[\"catch\"](2);\n                    if (!(sender && !sender.isConnected())) {\n                      _context3.next = 18;\n                      break;\n                    }\n                    _context3.next = 15;\n                    return (0, Helpers_1.sleep)(DISCONNECT_SLEEP);\n                  case 15:\n                    return _context3.abrupt(\"continue\", 0);\n                  case 18:\n                    if (!(_context3.t0 instanceof index_1.errors.FloodWaitError)) {\n                      _context3.next = 22;\n                      break;\n                    }\n                    _context3.next = 21;\n                    return (0, Helpers_1.sleep)(_context3.t0.seconds * 1000);\n                  case 21:\n                    return _context3.abrupt(\"continue\", 0);\n                  case 22:\n                    throw _context3.t0;\n                  case 23:\n                    if (!onProgress) {\n                      _context3.next = 28;\n                      break;\n                    }\n                    if (!onProgress.isCanceled) {\n                      _context3.next = 26;\n                      break;\n                    }\n                    throw new Error(\"USER_CANCELED\");\n                  case 26:\n                    progress += 1 / partCount;\n                    onProgress(progress);\n                  case 28:\n                    return _context3.abrupt(\"break\", 31);\n                  case 31:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }, _callee3, null, [[2, 10]]);\n            }));\n            return function (_x16, _x17) {\n              return _ref4.apply(this, arguments);\n            };\n          }()(j, bytes));\n        case 27:\n          j++;\n          _context4.next = 22;\n          break;\n        case 30:\n          _context4.next = 32;\n          return Promise.all(sendingParts);\n        case 32:\n          i += workers;\n          _context4.next = 17;\n          break;\n        case 35:\n          return _context4.abrupt(\"return\", isLarge ? new tl_1.Api.InputFileBig({\n            id: fileId,\n            parts: partCount,\n            name: name\n          }) : new tl_1.Api.InputFile({\n            id: fileId,\n            parts: partCount,\n            name: name,\n            md5Checksum: \"\" // This is not a \"flag\", so not sure if we can make it optional.\n          }));\n        case 36:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return _uploadFile.apply(this, arguments);\n}\nexports.uploadFile = uploadFile;\n/** @hidden */\nfunction _fileToMedia(_x8, _x9) {\n  return _fileToMedia2.apply(this, arguments);\n}\nfunction _fileToMedia2() {\n  _fileToMedia2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(client, _ref) {\n    var file, forceDocument, fileSize, progressCallback, attributes, thumb, _ref$voiceNote, voiceNote, _ref$videoNote, videoNote, _ref$supportsStreamin, supportsStreaming, mimeType, asImage, _ref$workers, workers, isImage, media, fileHandle, createdFile, name, res, uploadedThumb, _name;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          file = _ref.file, forceDocument = _ref.forceDocument, fileSize = _ref.fileSize, progressCallback = _ref.progressCallback, attributes = _ref.attributes, thumb = _ref.thumb, _ref$voiceNote = _ref.voiceNote, voiceNote = _ref$voiceNote === void 0 ? false : _ref$voiceNote, _ref$videoNote = _ref.videoNote, videoNote = _ref$videoNote === void 0 ? false : _ref$videoNote, _ref$supportsStreamin = _ref.supportsStreaming, supportsStreaming = _ref$supportsStreamin === void 0 ? false : _ref$supportsStreamin, mimeType = _ref.mimeType, asImage = _ref.asImage, _ref$workers = _ref.workers, workers = _ref$workers === void 0 ? 1 : _ref$workers;\n          if (file) {\n            _context5.next = 3;\n            break;\n          }\n          return _context5.abrupt(\"return\", {\n            fileHandle: undefined,\n            media: undefined,\n            image: undefined\n          });\n        case 3:\n          isImage = index_1.utils.isImage(file);\n          if (asImage == undefined) {\n            asImage = isImage && !forceDocument;\n          }\n          if (!(typeof file == \"object\" && !buffer_1.Buffer.isBuffer(file) && !(file instanceof tl_1.Api.InputFile) && !(file instanceof tl_1.Api.InputFileBig) && !(file instanceof CustomFile) && !(\"read\" in file))) {\n            _context5.next = 13;\n            break;\n          }\n          _context5.prev = 6;\n          return _context5.abrupt(\"return\", {\n            fileHandle: undefined,\n            media: index_1.utils.getInputMedia(file, {\n              isPhoto: asImage,\n              attributes: attributes,\n              forceDocument: forceDocument,\n              voiceNote: voiceNote,\n              videoNote: videoNote,\n              supportsStreaming: supportsStreaming\n            }),\n            image: asImage\n          });\n        case 10:\n          _context5.prev = 10;\n          _context5.t0 = _context5[\"catch\"](6);\n          return _context5.abrupt(\"return\", {\n            fileHandle: undefined,\n            media: undefined,\n            image: isImage\n          });\n        case 13:\n          if (!(file instanceof tl_1.Api.InputFile || file instanceof tl_1.Api.InputFileBig)) {\n            _context5.next = 17;\n            break;\n          }\n          fileHandle = file;\n          _context5.next = 46;\n          break;\n        case 17:\n          if (!(typeof file == \"string\" && (file.startsWith(\"https://\") || file.startsWith(\"http://\")))) {\n            _context5.next = 21;\n            break;\n          }\n          if (asImage) {\n            media = new tl_1.Api.InputMediaPhotoExternal({\n              url: file\n            });\n          } else {\n            media = new tl_1.Api.InputMediaDocumentExternal({\n              url: file\n            });\n          }\n          _context5.next = 46;\n          break;\n        case 21:\n          _context5.t1 = !(typeof file == \"string\");\n          if (_context5.t1) {\n            _context5.next = 26;\n            break;\n          }\n          _context5.next = 25;\n          return fs_1.promises.lstat(file);\n        case 25:\n          _context5.t1 = _context5.sent.isFile();\n        case 26:\n          if (!_context5.t1) {\n            _context5.next = 45;\n            break;\n          }\n          if (!(typeof file == \"string\")) {\n            _context5.next = 37;\n            break;\n          }\n          _context5.t2 = CustomFile;\n          _context5.t3 = path_1.default.basename(file);\n          _context5.next = 32;\n          return fs_1.promises.stat(file);\n        case 32:\n          _context5.t4 = _context5.sent.size;\n          _context5.t5 = file;\n          createdFile = new _context5.t2(_context5.t3, _context5.t4, _context5.t5);\n          _context5.next = 38;\n          break;\n        case 37:\n          if (typeof File !== \"undefined\" && file instanceof File || file instanceof CustomFile) {\n            createdFile = file;\n          } else {\n            if (\"name\" in file) {\n              // @ts-ignore\n              name = file.name;\n            } else {\n              name = \"unnamed\";\n            }\n            if (buffer_1.Buffer.isBuffer(file)) {\n              createdFile = new CustomFile(name, file.length, \"\", file);\n            }\n          }\n        case 38:\n          if (createdFile) {\n            _context5.next = 40;\n            break;\n          }\n          throw new Error(\"Could not create file from \".concat(JSON.stringify(file)));\n        case 40:\n          _context5.next = 42;\n          return uploadFile(client, {\n            file: createdFile,\n            onProgress: progressCallback,\n            workers: workers\n          });\n        case 42:\n          fileHandle = _context5.sent;\n          _context5.next = 46;\n          break;\n        case 45:\n          throw new Error(\"\\\"Not a valid path nor a url \".concat(file));\n        case 46:\n          if (!(media != undefined)) {\n            _context5.next = 49;\n            break;\n          }\n          _context5.next = 81;\n          break;\n        case 49:\n          if (!(fileHandle == undefined)) {\n            _context5.next = 53;\n            break;\n          }\n          throw new Error(\"Failed to convert \".concat(file, \" to media. Not an existing file or an HTTP URL\"));\n        case 53:\n          if (!asImage) {\n            _context5.next = 57;\n            break;\n          }\n          media = new tl_1.Api.InputMediaUploadedPhoto({\n            file: fileHandle\n          });\n          _context5.next = 81;\n          break;\n        case 57:\n          // @ts-ignore\n          res = index_1.utils.getAttributes(file, {\n            mimeType: mimeType,\n            attributes: attributes,\n            forceDocument: forceDocument && !isImage,\n            voiceNote: voiceNote,\n            videoNote: videoNote,\n            supportsStreaming: supportsStreaming,\n            thumb: thumb\n          });\n          attributes = res.attrs;\n          mimeType = res.mimeType;\n          if (thumb) {\n            _context5.next = 64;\n            break;\n          }\n          uploadedThumb = undefined;\n          _context5.next = 80;\n          break;\n        case 64:\n          if (!(typeof thumb == \"string\")) {\n            _context5.next = 74;\n            break;\n          }\n          _context5.t6 = CustomFile;\n          _context5.t7 = path_1.default.basename(thumb);\n          _context5.next = 69;\n          return fs_1.promises.stat(thumb);\n        case 69:\n          _context5.t8 = _context5.sent.size;\n          _context5.t9 = thumb;\n          uploadedThumb = new _context5.t6(_context5.t7, _context5.t8, _context5.t9);\n          _context5.next = 75;\n          break;\n        case 74:\n          if (typeof File !== \"undefined\" && thumb instanceof File) {\n            uploadedThumb = thumb;\n          } else {\n            if (\"name\" in thumb) {\n              _name = thumb.name;\n            } else {\n              _name = \"unnamed\";\n            }\n            if (buffer_1.Buffer.isBuffer(thumb)) {\n              uploadedThumb = new CustomFile(_name, thumb.length, \"\", thumb);\n            }\n          }\n        case 75:\n          if (uploadedThumb) {\n            _context5.next = 77;\n            break;\n          }\n          throw new Error(\"Could not create file from \".concat(file));\n        case 77:\n          _context5.next = 79;\n          return uploadFile(client, {\n            file: uploadedThumb,\n            workers: 1\n          });\n        case 79:\n          uploadedThumb = _context5.sent;\n        case 80:\n          media = new tl_1.Api.InputMediaUploadedDocument({\n            file: fileHandle,\n            mimeType: mimeType,\n            attributes: attributes,\n            thumb: uploadedThumb,\n            forceFile: forceDocument && !isImage\n          });\n        case 81:\n          return _context5.abrupt(\"return\", {\n            fileHandle: fileHandle,\n            media: media,\n            image: asImage\n          });\n        case 82:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[6, 10]]);\n  }));\n  return _fileToMedia2.apply(this, arguments);\n}\nexports._fileToMedia = _fileToMedia;\n/** @hidden */\nfunction _sendAlbum(_x10, _x11, _x12) {\n  return _sendAlbum2.apply(this, arguments);\n}\nfunction _sendAlbum2() {\n  _sendAlbum2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(client, entity, _ref2) {\n    var file, caption, _ref2$forceDocument, forceDocument, fileSize, _ref2$clearDraft, clearDraft, progressCallback, replyTo, attributes, thumb, parseMode, _ref2$voiceNote, voiceNote, _ref2$videoNote, videoNote, silent, _ref2$supportsStreami, supportsStreaming, scheduleDate, _ref2$workers, workers, noforwards, commentTo, files, captions, _iterator, _step, c, discussionData, albumFiles, _iterator2, _step2, _file, _yield$_fileToMedia, fileHandle, media, image, r, _r, text, msgEntities, _captions$shift, _captions$shift2, result, randomIds;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          file = _ref2.file, caption = _ref2.caption, _ref2$forceDocument = _ref2.forceDocument, forceDocument = _ref2$forceDocument === void 0 ? false : _ref2$forceDocument, fileSize = _ref2.fileSize, _ref2$clearDraft = _ref2.clearDraft, clearDraft = _ref2$clearDraft === void 0 ? false : _ref2$clearDraft, progressCallback = _ref2.progressCallback, replyTo = _ref2.replyTo, attributes = _ref2.attributes, thumb = _ref2.thumb, parseMode = _ref2.parseMode, _ref2$voiceNote = _ref2.voiceNote, voiceNote = _ref2$voiceNote === void 0 ? false : _ref2$voiceNote, _ref2$videoNote = _ref2.videoNote, videoNote = _ref2$videoNote === void 0 ? false : _ref2$videoNote, silent = _ref2.silent, _ref2$supportsStreami = _ref2.supportsStreaming, supportsStreaming = _ref2$supportsStreami === void 0 ? false : _ref2$supportsStreami, scheduleDate = _ref2.scheduleDate, _ref2$workers = _ref2.workers, workers = _ref2$workers === void 0 ? 1 : _ref2$workers, noforwards = _ref2.noforwards, commentTo = _ref2.commentTo;\n          _context6.next = 3;\n          return client.getInputEntity(entity);\n        case 3:\n          entity = _context6.sent;\n          files = [];\n          if (!Array.isArray(file)) {\n            files = [file];\n          } else {\n            files = file;\n          }\n          if (!Array.isArray(caption)) {\n            if (!caption) {\n              caption = \"\";\n            }\n            caption = [caption];\n          }\n          captions = [];\n          _iterator = _createForOfIteratorHelper(caption);\n          _context6.prev = 9;\n          _iterator.s();\n        case 11:\n          if ((_step = _iterator.n()).done) {\n            _context6.next = 20;\n            break;\n          }\n          c = _step.value;\n          _context6.t0 = captions;\n          _context6.next = 16;\n          return (0, messageParse_1._parseMessageText)(client, c, parseMode);\n        case 16:\n          _context6.t1 = _context6.sent;\n          _context6.t0.push.call(_context6.t0, _context6.t1);\n        case 18:\n          _context6.next = 11;\n          break;\n        case 20:\n          _context6.next = 25;\n          break;\n        case 22:\n          _context6.prev = 22;\n          _context6.t2 = _context6[\"catch\"](9);\n          _iterator.e(_context6.t2);\n        case 25:\n          _context6.prev = 25;\n          _iterator.f();\n          return _context6.finish(25);\n        case 28:\n          if (!(commentTo != undefined)) {\n            _context6.next = 36;\n            break;\n          }\n          _context6.next = 31;\n          return (0, messages_1.getCommentData)(client, entity, commentTo);\n        case 31:\n          discussionData = _context6.sent;\n          entity = discussionData.entity;\n          replyTo = discussionData.replyTo;\n          _context6.next = 37;\n          break;\n        case 36:\n          replyTo = index_1.utils.getMessageId(replyTo);\n        case 37:\n          albumFiles = [];\n          _iterator2 = _createForOfIteratorHelper(files);\n          _context6.prev = 39;\n          _iterator2.s();\n        case 41:\n          if ((_step2 = _iterator2.n()).done) {\n            _context6.next = 67;\n            break;\n          }\n          _file = _step2.value;\n          _context6.next = 45;\n          return _fileToMedia(client, {\n            file: _file,\n            forceDocument: forceDocument,\n            fileSize: fileSize,\n            progressCallback: progressCallback,\n            attributes: attributes,\n            thumb: thumb,\n            voiceNote: voiceNote,\n            videoNote: videoNote,\n            supportsStreaming: supportsStreaming,\n            workers: workers\n          });\n        case 45:\n          _yield$_fileToMedia = _context6.sent;\n          fileHandle = _yield$_fileToMedia.fileHandle;\n          media = _yield$_fileToMedia.media;\n          image = _yield$_fileToMedia.image;\n          if (!(media instanceof tl_1.Api.InputMediaUploadedPhoto || media instanceof tl_1.Api.InputMediaPhotoExternal)) {\n            _context6.next = 56;\n            break;\n          }\n          _context6.next = 52;\n          return client.invoke(new tl_1.Api.messages.UploadMedia({\n            peer: entity,\n            media: media\n          }));\n        case 52:\n          r = _context6.sent;\n          if (r instanceof tl_1.Api.MessageMediaPhoto) {\n            media = (0, Utils_1.getInputMedia)(r.photo);\n          }\n          _context6.next = 61;\n          break;\n        case 56:\n          if (!(media instanceof tl_1.Api.InputMediaUploadedDocument)) {\n            _context6.next = 61;\n            break;\n          }\n          _context6.next = 59;\n          return client.invoke(new tl_1.Api.messages.UploadMedia({\n            peer: entity,\n            media: media\n          }));\n        case 59:\n          _r = _context6.sent;\n          if (_r instanceof tl_1.Api.MessageMediaDocument) {\n            media = (0, Utils_1.getInputMedia)(_r.document);\n          }\n        case 61:\n          text = \"\";\n          msgEntities = [];\n          if (captions.length) {\n            _captions$shift = captions.shift();\n            _captions$shift2 = _slicedToArray(_captions$shift, 2);\n            text = _captions$shift2[0];\n            msgEntities = _captions$shift2[1];\n          }\n          albumFiles.push(new tl_1.Api.InputSingleMedia({\n            media: media,\n            message: text,\n            entities: msgEntities\n          }));\n        case 65:\n          _context6.next = 41;\n          break;\n        case 67:\n          _context6.next = 72;\n          break;\n        case 69:\n          _context6.prev = 69;\n          _context6.t3 = _context6[\"catch\"](39);\n          _iterator2.e(_context6.t3);\n        case 72:\n          _context6.prev = 72;\n          _iterator2.f();\n          return _context6.finish(72);\n        case 75:\n          _context6.next = 77;\n          return client.invoke(new tl_1.Api.messages.SendMultiMedia({\n            peer: entity,\n            replyToMsgId: replyTo,\n            multiMedia: albumFiles,\n            silent: silent,\n            scheduleDate: scheduleDate,\n            clearDraft: clearDraft,\n            noforwards: noforwards\n          }));\n        case 77:\n          result = _context6.sent;\n          randomIds = albumFiles.map(function (m) {\n            return m.randomId;\n          });\n          return _context6.abrupt(\"return\", client._getResponseMessage(randomIds, result, entity));\n        case 80:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6, null, [[9, 22, 25, 28], [39, 69, 72, 75]]);\n  }));\n  return _sendAlbum2.apply(this, arguments);\n}\nexports._sendAlbum = _sendAlbum;\n/** @hidden */\nfunction sendFile(_x13, _x14, _x15) {\n  return _sendFile.apply(this, arguments);\n}\nfunction _sendFile() {\n  _sendFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(client, entity, _ref3) {\n    var file, caption, _ref3$forceDocument, forceDocument, fileSize, _ref3$clearDraft, clearDraft, progressCallback, replyTo, attributes, thumb, parseMode, formattingEntities, _ref3$voiceNote, voiceNote, _ref3$videoNote, videoNote, buttons, silent, _ref3$supportsStreami, supportsStreaming, scheduleDate, _ref3$workers, workers, noforwards, commentTo, discussionData, msgEntities, _yield, _yield2, _yield$_fileToMedia2, fileHandle, media, image, markup, request, result;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          file = _ref3.file, caption = _ref3.caption, _ref3$forceDocument = _ref3.forceDocument, forceDocument = _ref3$forceDocument === void 0 ? false : _ref3$forceDocument, fileSize = _ref3.fileSize, _ref3$clearDraft = _ref3.clearDraft, clearDraft = _ref3$clearDraft === void 0 ? false : _ref3$clearDraft, progressCallback = _ref3.progressCallback, replyTo = _ref3.replyTo, attributes = _ref3.attributes, thumb = _ref3.thumb, parseMode = _ref3.parseMode, formattingEntities = _ref3.formattingEntities, _ref3$voiceNote = _ref3.voiceNote, voiceNote = _ref3$voiceNote === void 0 ? false : _ref3$voiceNote, _ref3$videoNote = _ref3.videoNote, videoNote = _ref3$videoNote === void 0 ? false : _ref3$videoNote, buttons = _ref3.buttons, silent = _ref3.silent, _ref3$supportsStreami = _ref3.supportsStreaming, supportsStreaming = _ref3$supportsStreami === void 0 ? false : _ref3$supportsStreami, scheduleDate = _ref3.scheduleDate, _ref3$workers = _ref3.workers, workers = _ref3$workers === void 0 ? 1 : _ref3$workers, noforwards = _ref3.noforwards, commentTo = _ref3.commentTo;\n          if (file) {\n            _context7.next = 3;\n            break;\n          }\n          throw new Error(\"You need to specify a file\");\n        case 3:\n          if (!caption) {\n            caption = \"\";\n          }\n          _context7.next = 6;\n          return client.getInputEntity(entity);\n        case 6:\n          entity = _context7.sent;\n          if (!(commentTo != undefined)) {\n            _context7.next = 15;\n            break;\n          }\n          _context7.next = 10;\n          return (0, messages_1.getCommentData)(client, entity, commentTo);\n        case 10:\n          discussionData = _context7.sent;\n          entity = discussionData.entity;\n          replyTo = discussionData.replyTo;\n          _context7.next = 16;\n          break;\n        case 15:\n          replyTo = index_1.utils.getMessageId(replyTo);\n        case 16:\n          if (!Array.isArray(file)) {\n            _context7.next = 20;\n            break;\n          }\n          _context7.next = 19;\n          return _sendAlbum(client, entity, {\n            file: file,\n            caption: caption,\n            replyTo: replyTo,\n            parseMode: parseMode,\n            silent: silent,\n            scheduleDate: scheduleDate,\n            supportsStreaming: supportsStreaming,\n            clearDraft: clearDraft,\n            forceDocument: forceDocument,\n            noforwards: noforwards\n          });\n        case 19:\n          return _context7.abrupt(\"return\", _context7.sent);\n        case 20:\n          if (Array.isArray(caption)) {\n            caption = caption[0] || \"\";\n          }\n          if (!(formattingEntities != undefined)) {\n            _context7.next = 25;\n            break;\n          }\n          msgEntities = formattingEntities;\n          _context7.next = 31;\n          break;\n        case 25:\n          _context7.next = 27;\n          return (0, messageParse_1._parseMessageText)(client, caption, parseMode);\n        case 27:\n          _yield = _context7.sent;\n          _yield2 = _slicedToArray(_yield, 2);\n          caption = _yield2[0];\n          msgEntities = _yield2[1];\n        case 31:\n          _context7.next = 33;\n          return _fileToMedia(client, {\n            file: file,\n            forceDocument: forceDocument,\n            fileSize: fileSize,\n            progressCallback: progressCallback,\n            attributes: attributes,\n            thumb: thumb,\n            voiceNote: voiceNote,\n            videoNote: videoNote,\n            supportsStreaming: supportsStreaming,\n            workers: workers\n          });\n        case 33:\n          _yield$_fileToMedia2 = _context7.sent;\n          fileHandle = _yield$_fileToMedia2.fileHandle;\n          media = _yield$_fileToMedia2.media;\n          image = _yield$_fileToMedia2.image;\n          if (!(media == undefined)) {\n            _context7.next = 39;\n            break;\n          }\n          throw new Error(\"Cannot use \".concat(file, \" as file.\"));\n        case 39:\n          markup = client.buildReplyMarkup(buttons);\n          request = new tl_1.Api.messages.SendMedia({\n            peer: entity,\n            media: media,\n            replyToMsgId: replyTo,\n            message: caption,\n            entities: msgEntities,\n            replyMarkup: markup,\n            silent: silent,\n            scheduleDate: scheduleDate,\n            clearDraft: clearDraft,\n            noforwards: noforwards\n          });\n          _context7.next = 43;\n          return client.invoke(request);\n        case 43:\n          result = _context7.sent;\n          return _context7.abrupt(\"return\", client._getResponseMessage(request, result, entity));\n        case 45:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  }));\n  return _sendFile.apply(this, arguments);\n}\nexports.sendFile = sendFile;\nfunction fileToBuffer(file) {\n  if (typeof File !== \"undefined\" && file instanceof File) {\n    return new Response(file).arrayBuffer();\n  } else if (file instanceof CustomFile) {\n    if (file.buffer != undefined) {\n      return file.buffer;\n    } else {\n      return fs_1.promises.readFile(file.path);\n    }\n  } else {\n    throw new Error(\"Could not create buffer from file \" + file);\n  }\n}","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","sendFile","_sendAlbum","_fileToMedia","uploadFile","CustomFile","buffer_1","require","tl_1","Helpers_1","Utils_1","path_1","fs_1","index_1","messageParse_1","messages_1","big_integer_1","name","size","path","buffer","CustomBuffer","options","filePath","Error","begin","end","slice","buffSize","buff","Buffer","alloc","promises","open","fHandle","read","close","from","KB_TO_BYTES","LARGE_FILE_THRESHOLD","UPLOAD_TIMEOUT","DISCONNECT_SLEEP","BUFFER_SIZE_2GB","getFileBuffer","file","fileSize","maxBufferSize","fileToBuffer","client","fileParams","onProgress","workers","fileId","readBigIntFromBuffer","generateRandomBytes","isLarge","partSize","getAppropriatedPartSize","default","partCount","Math","floor","getSender","session","dcId","progress","i","sendingParts","j","bytes","push","jMemo","bytesMemo","sender","send","Api","upload","SaveBigFilePart","filePart","fileTotalParts","SaveFilePart","isConnected","sleep","errors","FloodWaitError","seconds","isCanceled","Promise","all","InputFileBig","id","parts","InputFile","md5Checksum","forceDocument","progressCallback","attributes","thumb","voiceNote","videoNote","supportsStreaming","mimeType","asImage","fileHandle","undefined","media","image","isImage","utils","isBuffer","getInputMedia","isPhoto","startsWith","InputMediaPhotoExternal","url","InputMediaDocumentExternal","lstat","isFile","basename","stat","createdFile","File","length","JSON","stringify","InputMediaUploadedPhoto","res","getAttributes","attrs","uploadedThumb","InputMediaUploadedDocument","forceFile","entity","caption","clearDraft","replyTo","parseMode","silent","scheduleDate","noforwards","commentTo","getInputEntity","files","Array","isArray","captions","c","_parseMessageText","getCommentData","discussionData","getMessageId","albumFiles","invoke","messages","UploadMedia","peer","r","MessageMediaPhoto","photo","MessageMediaDocument","document","text","msgEntities","shift","InputSingleMedia","message","entities","SendMultiMedia","replyToMsgId","multiMedia","result","randomIds","map","m","randomId","_getResponseMessage","formattingEntities","buttons","markup","buildReplyMarkup","request","SendMedia","replyMarkup","Response","arrayBuffer","readFile"],"sources":["C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/telegram/client/uploads.js"],"sourcesContent":["\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.sendFile = exports._sendAlbum = exports._fileToMedia = exports.uploadFile = exports.CustomFile = void 0;\r\nconst buffer_1 = require(\"buffer/\");\r\nconst tl_1 = require(\"../tl\");\r\nconst Helpers_1 = require(\"../Helpers\");\r\nconst Utils_1 = require(\"../Utils\");\r\nconst path_1 = __importDefault(require(\"./path\"));\r\nconst fs_1 = require(\"./fs\");\r\nconst index_1 = require(\"../index\");\r\nconst messageParse_1 = require(\"./messageParse\");\r\nconst messages_1 = require(\"./messages\");\r\nconst big_integer_1 = __importDefault(require(\"big-integer\"));\r\n/**\r\n * A custom file class that mimics the browser's File class.<br/>\r\n * You should use this whenever you want to upload a file.\r\n */\r\nclass CustomFile {\r\n    constructor(name, size, path, buffer) {\r\n        this.name = name;\r\n        this.size = size;\r\n        this.path = path;\r\n        this.buffer = buffer;\r\n    }\r\n}\r\nexports.CustomFile = CustomFile;\r\nclass CustomBuffer {\r\n    constructor(options) {\r\n        this.options = options;\r\n        if (!options.buffer && !options.filePath) {\r\n            throw new Error(\"Either one of `buffer` or `filePath` should be specified\");\r\n        }\r\n    }\r\n    async slice(begin, end) {\r\n        const { buffer, filePath } = this.options;\r\n        if (buffer) {\r\n            return buffer.slice(begin, end);\r\n        }\r\n        else if (filePath) {\r\n            const buffSize = end - begin;\r\n            const buff = buffer_1.Buffer.alloc(buffSize);\r\n            const fHandle = await fs_1.promises.open(filePath, \"r\");\r\n            await fHandle.read(buff, 0, buffSize, begin);\r\n            await fHandle.close();\r\n            return buffer_1.Buffer.from(buff);\r\n        }\r\n        return buffer_1.Buffer.alloc(0);\r\n    }\r\n}\r\nconst KB_TO_BYTES = 1024;\r\nconst LARGE_FILE_THRESHOLD = 10 * 1024 * 1024;\r\nconst UPLOAD_TIMEOUT = 15 * 1000;\r\nconst DISCONNECT_SLEEP = 1000;\r\nconst BUFFER_SIZE_2GB = 2 ** 31;\r\nasync function getFileBuffer(file, fileSize, maxBufferSize) {\r\n    const options = {};\r\n    if (fileSize > maxBufferSize && file instanceof CustomFile) {\r\n        options.filePath = file.path;\r\n    }\r\n    else {\r\n        options.buffer = buffer_1.Buffer.from(await fileToBuffer(file));\r\n    }\r\n    return new CustomBuffer(options);\r\n}\r\n/** @hidden */\r\nasync function uploadFile(client, fileParams) {\r\n    const { file, onProgress } = fileParams;\r\n    let { workers } = fileParams;\r\n    const { name, size } = file;\r\n    const fileId = (0, Helpers_1.readBigIntFromBuffer)((0, Helpers_1.generateRandomBytes)(8), true, true);\r\n    const isLarge = size > LARGE_FILE_THRESHOLD;\r\n    const partSize = (0, Utils_1.getAppropriatedPartSize)((0, big_integer_1.default)(size)) * KB_TO_BYTES;\r\n    const partCount = Math.floor((size + partSize - 1) / partSize);\r\n    const buffer = await getFileBuffer(file, size, fileParams.maxBufferSize || BUFFER_SIZE_2GB - 1);\r\n    // Make sure a new sender can be created before starting upload\r\n    await client.getSender(client.session.dcId);\r\n    if (!workers || !size) {\r\n        workers = 1;\r\n    }\r\n    if (workers >= partCount) {\r\n        workers = partCount;\r\n    }\r\n    let progress = 0;\r\n    if (onProgress) {\r\n        onProgress(progress);\r\n    }\r\n    for (let i = 0; i < partCount; i += workers) {\r\n        const sendingParts = [];\r\n        let end = i + workers;\r\n        if (end > partCount) {\r\n            end = partCount;\r\n        }\r\n        for (let j = i; j < end; j++) {\r\n            const bytes = await buffer.slice(j * partSize, (j + 1) * partSize);\r\n            // eslint-disable-next-line no-loop-func\r\n            sendingParts.push((async (jMemo, bytesMemo) => {\r\n                while (true) {\r\n                    let sender;\r\n                    try {\r\n                        // We always upload from the DC we are in\r\n                        sender = await client.getSender(client.session.dcId);\r\n                        await sender.send(isLarge\r\n                            ? new tl_1.Api.upload.SaveBigFilePart({\r\n                                fileId,\r\n                                filePart: jMemo,\r\n                                fileTotalParts: partCount,\r\n                                bytes: bytesMemo,\r\n                            })\r\n                            : new tl_1.Api.upload.SaveFilePart({\r\n                                fileId,\r\n                                filePart: jMemo,\r\n                                bytes: bytesMemo,\r\n                            }));\r\n                    }\r\n                    catch (err) {\r\n                        if (sender && !sender.isConnected()) {\r\n                            await (0, Helpers_1.sleep)(DISCONNECT_SLEEP);\r\n                            continue;\r\n                        }\r\n                        else if (err instanceof index_1.errors.FloodWaitError) {\r\n                            await (0, Helpers_1.sleep)(err.seconds * 1000);\r\n                            continue;\r\n                        }\r\n                        throw err;\r\n                    }\r\n                    if (onProgress) {\r\n                        if (onProgress.isCanceled) {\r\n                            throw new Error(\"USER_CANCELED\");\r\n                        }\r\n                        progress += 1 / partCount;\r\n                        onProgress(progress);\r\n                    }\r\n                    break;\r\n                }\r\n            })(j, bytes));\r\n        }\r\n        await Promise.all(sendingParts);\r\n    }\r\n    return isLarge\r\n        ? new tl_1.Api.InputFileBig({\r\n            id: fileId,\r\n            parts: partCount,\r\n            name,\r\n        })\r\n        : new tl_1.Api.InputFile({\r\n            id: fileId,\r\n            parts: partCount,\r\n            name,\r\n            md5Checksum: \"\", // This is not a \"flag\", so not sure if we can make it optional.\r\n        });\r\n}\r\nexports.uploadFile = uploadFile;\r\n/** @hidden */\r\nasync function _fileToMedia(client, { file, forceDocument, fileSize, progressCallback, attributes, thumb, voiceNote = false, videoNote = false, supportsStreaming = false, mimeType, asImage, workers = 1, }) {\r\n    if (!file) {\r\n        return { fileHandle: undefined, media: undefined, image: undefined };\r\n    }\r\n    const isImage = index_1.utils.isImage(file);\r\n    if (asImage == undefined) {\r\n        asImage = isImage && !forceDocument;\r\n    }\r\n    if (typeof file == \"object\" &&\r\n        !buffer_1.Buffer.isBuffer(file) &&\r\n        !(file instanceof tl_1.Api.InputFile) &&\r\n        !(file instanceof tl_1.Api.InputFileBig) &&\r\n        !(file instanceof CustomFile) &&\r\n        !(\"read\" in file)) {\r\n        try {\r\n            return {\r\n                fileHandle: undefined,\r\n                media: index_1.utils.getInputMedia(file, {\r\n                    isPhoto: asImage,\r\n                    attributes: attributes,\r\n                    forceDocument: forceDocument,\r\n                    voiceNote: voiceNote,\r\n                    videoNote: videoNote,\r\n                    supportsStreaming: supportsStreaming,\r\n                }),\r\n                image: asImage,\r\n            };\r\n        }\r\n        catch (e) {\r\n            return {\r\n                fileHandle: undefined,\r\n                media: undefined,\r\n                image: isImage,\r\n            };\r\n        }\r\n    }\r\n    let media;\r\n    let fileHandle;\r\n    let createdFile;\r\n    if (file instanceof tl_1.Api.InputFile || file instanceof tl_1.Api.InputFileBig) {\r\n        fileHandle = file;\r\n    }\r\n    else if (typeof file == \"string\" &&\r\n        (file.startsWith(\"https://\") || file.startsWith(\"http://\"))) {\r\n        if (asImage) {\r\n            media = new tl_1.Api.InputMediaPhotoExternal({ url: file });\r\n        }\r\n        else {\r\n            media = new tl_1.Api.InputMediaDocumentExternal({ url: file });\r\n        }\r\n    }\r\n    else if (!(typeof file == \"string\") || (await fs_1.promises.lstat(file)).isFile()) {\r\n        if (typeof file == \"string\") {\r\n            createdFile = new CustomFile(path_1.default.basename(file), (await fs_1.promises.stat(file)).size, file);\r\n        }\r\n        else if ((typeof File !== \"undefined\" && file instanceof File) ||\r\n            file instanceof CustomFile) {\r\n            createdFile = file;\r\n        }\r\n        else {\r\n            let name;\r\n            if (\"name\" in file) {\r\n                // @ts-ignore\r\n                name = file.name;\r\n            }\r\n            else {\r\n                name = \"unnamed\";\r\n            }\r\n            if (buffer_1.Buffer.isBuffer(file)) {\r\n                createdFile = new CustomFile(name, file.length, \"\", file);\r\n            }\r\n        }\r\n        if (!createdFile) {\r\n            throw new Error(`Could not create file from ${JSON.stringify(file)}`);\r\n        }\r\n        fileHandle = await uploadFile(client, {\r\n            file: createdFile,\r\n            onProgress: progressCallback,\r\n            workers: workers,\r\n        });\r\n    }\r\n    else {\r\n        throw new Error(`\"Not a valid path nor a url ${file}`);\r\n    }\r\n    if (media != undefined) {\r\n    }\r\n    else if (fileHandle == undefined) {\r\n        throw new Error(`Failed to convert ${file} to media. Not an existing file or an HTTP URL`);\r\n    }\r\n    else if (asImage) {\r\n        media = new tl_1.Api.InputMediaUploadedPhoto({\r\n            file: fileHandle,\r\n        });\r\n    }\r\n    else {\r\n        // @ts-ignore\r\n        let res = index_1.utils.getAttributes(file, {\r\n            mimeType: mimeType,\r\n            attributes: attributes,\r\n            forceDocument: forceDocument && !isImage,\r\n            voiceNote: voiceNote,\r\n            videoNote: videoNote,\r\n            supportsStreaming: supportsStreaming,\r\n            thumb: thumb,\r\n        });\r\n        attributes = res.attrs;\r\n        mimeType = res.mimeType;\r\n        let uploadedThumb;\r\n        if (!thumb) {\r\n            uploadedThumb = undefined;\r\n        }\r\n        else {\r\n            // todo refactor\r\n            if (typeof thumb == \"string\") {\r\n                uploadedThumb = new CustomFile(path_1.default.basename(thumb), (await fs_1.promises.stat(thumb)).size, thumb);\r\n            }\r\n            else if (typeof File !== \"undefined\" && thumb instanceof File) {\r\n                uploadedThumb = thumb;\r\n            }\r\n            else {\r\n                let name;\r\n                if (\"name\" in thumb) {\r\n                    name = thumb.name;\r\n                }\r\n                else {\r\n                    name = \"unnamed\";\r\n                }\r\n                if (buffer_1.Buffer.isBuffer(thumb)) {\r\n                    uploadedThumb = new CustomFile(name, thumb.length, \"\", thumb);\r\n                }\r\n            }\r\n            if (!uploadedThumb) {\r\n                throw new Error(`Could not create file from ${file}`);\r\n            }\r\n            uploadedThumb = await uploadFile(client, {\r\n                file: uploadedThumb,\r\n                workers: 1,\r\n            });\r\n        }\r\n        media = new tl_1.Api.InputMediaUploadedDocument({\r\n            file: fileHandle,\r\n            mimeType: mimeType,\r\n            attributes: attributes,\r\n            thumb: uploadedThumb,\r\n            forceFile: forceDocument && !isImage,\r\n        });\r\n    }\r\n    return {\r\n        fileHandle: fileHandle,\r\n        media: media,\r\n        image: asImage,\r\n    };\r\n}\r\nexports._fileToMedia = _fileToMedia;\r\n/** @hidden */\r\nasync function _sendAlbum(client, entity, { file, caption, forceDocument = false, fileSize, clearDraft = false, progressCallback, replyTo, attributes, thumb, parseMode, voiceNote = false, videoNote = false, silent, supportsStreaming = false, scheduleDate, workers = 1, noforwards, commentTo, }) {\r\n    entity = await client.getInputEntity(entity);\r\n    let files = [];\r\n    if (!Array.isArray(file)) {\r\n        files = [file];\r\n    }\r\n    else {\r\n        files = file;\r\n    }\r\n    if (!Array.isArray(caption)) {\r\n        if (!caption) {\r\n            caption = \"\";\r\n        }\r\n        caption = [caption];\r\n    }\r\n    const captions = [];\r\n    for (const c of caption) {\r\n        captions.push(await (0, messageParse_1._parseMessageText)(client, c, parseMode));\r\n    }\r\n    if (commentTo != undefined) {\r\n        const discussionData = await (0, messages_1.getCommentData)(client, entity, commentTo);\r\n        entity = discussionData.entity;\r\n        replyTo = discussionData.replyTo;\r\n    }\r\n    else {\r\n        replyTo = index_1.utils.getMessageId(replyTo);\r\n    }\r\n    const albumFiles = [];\r\n    for (const file of files) {\r\n        let { fileHandle, media, image } = await _fileToMedia(client, {\r\n            file: file,\r\n            forceDocument: forceDocument,\r\n            fileSize: fileSize,\r\n            progressCallback: progressCallback,\r\n            attributes: attributes,\r\n            thumb: thumb,\r\n            voiceNote: voiceNote,\r\n            videoNote: videoNote,\r\n            supportsStreaming: supportsStreaming,\r\n            workers: workers,\r\n        });\r\n        if (media instanceof tl_1.Api.InputMediaUploadedPhoto ||\r\n            media instanceof tl_1.Api.InputMediaPhotoExternal) {\r\n            const r = await client.invoke(new tl_1.Api.messages.UploadMedia({\r\n                peer: entity,\r\n                media,\r\n            }));\r\n            if (r instanceof tl_1.Api.MessageMediaPhoto) {\r\n                media = (0, Utils_1.getInputMedia)(r.photo);\r\n            }\r\n        }\r\n        else if (media instanceof tl_1.Api.InputMediaUploadedDocument) {\r\n            const r = await client.invoke(new tl_1.Api.messages.UploadMedia({\r\n                peer: entity,\r\n                media,\r\n            }));\r\n            if (r instanceof tl_1.Api.MessageMediaDocument) {\r\n                media = (0, Utils_1.getInputMedia)(r.document);\r\n            }\r\n        }\r\n        let text = \"\";\r\n        let msgEntities = [];\r\n        if (captions.length) {\r\n            [text, msgEntities] = captions.shift();\r\n        }\r\n        albumFiles.push(new tl_1.Api.InputSingleMedia({\r\n            media: media,\r\n            message: text,\r\n            entities: msgEntities,\r\n        }));\r\n    }\r\n    const result = await client.invoke(new tl_1.Api.messages.SendMultiMedia({\r\n        peer: entity,\r\n        replyToMsgId: replyTo,\r\n        multiMedia: albumFiles,\r\n        silent: silent,\r\n        scheduleDate: scheduleDate,\r\n        clearDraft: clearDraft,\r\n        noforwards: noforwards,\r\n    }));\r\n    const randomIds = albumFiles.map((m) => m.randomId);\r\n    return client._getResponseMessage(randomIds, result, entity);\r\n}\r\nexports._sendAlbum = _sendAlbum;\r\n/** @hidden */\r\nasync function sendFile(client, entity, { file, caption, forceDocument = false, fileSize, clearDraft = false, progressCallback, replyTo, attributes, thumb, parseMode, formattingEntities, voiceNote = false, videoNote = false, buttons, silent, supportsStreaming = false, scheduleDate, workers = 1, noforwards, commentTo, }) {\r\n    if (!file) {\r\n        throw new Error(\"You need to specify a file\");\r\n    }\r\n    if (!caption) {\r\n        caption = \"\";\r\n    }\r\n    entity = await client.getInputEntity(entity);\r\n    if (commentTo != undefined) {\r\n        const discussionData = await (0, messages_1.getCommentData)(client, entity, commentTo);\r\n        entity = discussionData.entity;\r\n        replyTo = discussionData.replyTo;\r\n    }\r\n    else {\r\n        replyTo = index_1.utils.getMessageId(replyTo);\r\n    }\r\n    if (Array.isArray(file)) {\r\n        return await _sendAlbum(client, entity, {\r\n            file: file,\r\n            caption: caption,\r\n            replyTo: replyTo,\r\n            parseMode: parseMode,\r\n            silent: silent,\r\n            scheduleDate: scheduleDate,\r\n            supportsStreaming: supportsStreaming,\r\n            clearDraft: clearDraft,\r\n            forceDocument: forceDocument,\r\n            noforwards: noforwards,\r\n        });\r\n    }\r\n    if (Array.isArray(caption)) {\r\n        caption = caption[0] || \"\";\r\n    }\r\n    let msgEntities;\r\n    if (formattingEntities != undefined) {\r\n        msgEntities = formattingEntities;\r\n    }\r\n    else {\r\n        [caption, msgEntities] = await (0, messageParse_1._parseMessageText)(client, caption, parseMode);\r\n    }\r\n    const { fileHandle, media, image } = await _fileToMedia(client, {\r\n        file: file,\r\n        forceDocument: forceDocument,\r\n        fileSize: fileSize,\r\n        progressCallback: progressCallback,\r\n        attributes: attributes,\r\n        thumb: thumb,\r\n        voiceNote: voiceNote,\r\n        videoNote: videoNote,\r\n        supportsStreaming: supportsStreaming,\r\n        workers: workers,\r\n    });\r\n    if (media == undefined) {\r\n        throw new Error(`Cannot use ${file} as file.`);\r\n    }\r\n    const markup = client.buildReplyMarkup(buttons);\r\n    const request = new tl_1.Api.messages.SendMedia({\r\n        peer: entity,\r\n        media: media,\r\n        replyToMsgId: replyTo,\r\n        message: caption,\r\n        entities: msgEntities,\r\n        replyMarkup: markup,\r\n        silent: silent,\r\n        scheduleDate: scheduleDate,\r\n        clearDraft: clearDraft,\r\n        noforwards: noforwards,\r\n    });\r\n    const result = await client.invoke(request);\r\n    return client._getResponseMessage(request, result, entity);\r\n}\r\nexports.sendFile = sendFile;\r\nfunction fileToBuffer(file) {\r\n    if (typeof File !== \"undefined\" && file instanceof File) {\r\n        return new Response(file).arrayBuffer();\r\n    }\r\n    else if (file instanceof CustomFile) {\r\n        if (file.buffer != undefined) {\r\n            return file.buffer;\r\n        }\r\n        else {\r\n            return fs_1.promises.readFile(file.path);\r\n        }\r\n    }\r\n    else {\r\n        throw new Error(\"Could not create buffer from file \" + file);\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}