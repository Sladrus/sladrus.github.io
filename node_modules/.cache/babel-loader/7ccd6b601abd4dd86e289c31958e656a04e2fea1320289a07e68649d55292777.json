{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _regeneratorRuntime = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _slicedToArray = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _classCallCheck = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CustomMessage = void 0;\nvar senderGetter_1 = require(\"./senderGetter\");\nvar api_1 = require(\"../api\");\nvar chatGetter_1 = require(\"./chatGetter\");\nvar utils = __importStar(require(\"../../Utils\"));\nvar forward_1 = require(\"./forward\");\nvar file_1 = require(\"./file\");\nvar Helpers_1 = require(\"../../Helpers\");\nvar users_1 = require(\"../../client/users\");\nvar Logger_1 = require(\"../../extensions/Logger\");\nvar messageButton_1 = require(\"./messageButton\");\nvar inspect_1 = require(\"../../inspect\");\n/**\r\n * This custom class aggregates both {@link Api.Message} and {@link Api.MessageService} to ease accessing their members.<br/>\r\n * <br/>\r\n * Remember that this class implements {@link ChatGetter} and {@link SenderGetter}<br/>\r\n * which means you have access to all their sender and chat properties and methods.\r\n */\nvar CustomMessage = /*#__PURE__*/function (_senderGetter_1$Sende, _inspect_1$inspect$cu) {\n  _inherits(CustomMessage, _senderGetter_1$Sende);\n  var _super = _createSuper(CustomMessage);\n  function CustomMessage(args) {\n    var _this;\n    _classCallCheck(this, CustomMessage);\n    _this = _super.call(this);\n    _this.init(args);\n    return _this;\n  }\n  _createClass(CustomMessage, [{\n    key: _inspect_1$inspect$cu,\n    value: function value() {\n      return (0, Helpers_1.betterConsoleLog)(this);\n    }\n  }, {\n    key: \"init\",\n    value: function init(_ref) {\n      var id = _ref.id,\n        _ref$peerId = _ref.peerId,\n        peerId = _ref$peerId === void 0 ? undefined : _ref$peerId,\n        _ref$date = _ref.date,\n        date = _ref$date === void 0 ? undefined : _ref$date,\n        _ref$out = _ref.out,\n        out = _ref$out === void 0 ? undefined : _ref$out,\n        _ref$mentioned = _ref.mentioned,\n        mentioned = _ref$mentioned === void 0 ? undefined : _ref$mentioned,\n        _ref$mediaUnread = _ref.mediaUnread,\n        mediaUnread = _ref$mediaUnread === void 0 ? undefined : _ref$mediaUnread,\n        _ref$silent = _ref.silent,\n        silent = _ref$silent === void 0 ? undefined : _ref$silent,\n        _ref$post = _ref.post,\n        post = _ref$post === void 0 ? undefined : _ref$post,\n        _ref$fromId = _ref.fromId,\n        fromId = _ref$fromId === void 0 ? undefined : _ref$fromId,\n        _ref$replyTo = _ref.replyTo,\n        replyTo = _ref$replyTo === void 0 ? undefined : _ref$replyTo,\n        _ref$message = _ref.message,\n        message = _ref$message === void 0 ? undefined : _ref$message,\n        _ref$fwdFrom = _ref.fwdFrom,\n        fwdFrom = _ref$fwdFrom === void 0 ? undefined : _ref$fwdFrom,\n        _ref$viaBotId = _ref.viaBotId,\n        viaBotId = _ref$viaBotId === void 0 ? undefined : _ref$viaBotId,\n        _ref$media = _ref.media,\n        media = _ref$media === void 0 ? undefined : _ref$media,\n        _ref$replyMarkup = _ref.replyMarkup,\n        replyMarkup = _ref$replyMarkup === void 0 ? undefined : _ref$replyMarkup,\n        _ref$entities = _ref.entities,\n        entities = _ref$entities === void 0 ? undefined : _ref$entities,\n        _ref$views = _ref.views,\n        views = _ref$views === void 0 ? undefined : _ref$views,\n        _ref$editDate = _ref.editDate,\n        editDate = _ref$editDate === void 0 ? undefined : _ref$editDate,\n        _ref$postAuthor = _ref.postAuthor,\n        postAuthor = _ref$postAuthor === void 0 ? undefined : _ref$postAuthor,\n        _ref$groupedId = _ref.groupedId,\n        groupedId = _ref$groupedId === void 0 ? undefined : _ref$groupedId,\n        _ref$fromScheduled = _ref.fromScheduled,\n        fromScheduled = _ref$fromScheduled === void 0 ? undefined : _ref$fromScheduled,\n        _ref$legacy = _ref.legacy,\n        legacy = _ref$legacy === void 0 ? undefined : _ref$legacy,\n        _ref$editHide = _ref.editHide,\n        editHide = _ref$editHide === void 0 ? undefined : _ref$editHide,\n        _ref$pinned = _ref.pinned,\n        pinned = _ref$pinned === void 0 ? undefined : _ref$pinned,\n        _ref$restrictionReaso = _ref.restrictionReason,\n        restrictionReason = _ref$restrictionReaso === void 0 ? undefined : _ref$restrictionReaso,\n        _ref$forwards = _ref.forwards,\n        forwards = _ref$forwards === void 0 ? undefined : _ref$forwards,\n        _ref$replies = _ref.replies,\n        replies = _ref$replies === void 0 ? undefined : _ref$replies,\n        _ref$action = _ref.action,\n        action = _ref$action === void 0 ? undefined : _ref$action,\n        _ref$reactions = _ref.reactions,\n        reactions = _ref$reactions === void 0 ? undefined : _ref$reactions,\n        _ref$noforwards = _ref.noforwards,\n        noforwards = _ref$noforwards === void 0 ? undefined : _ref$noforwards,\n        _ref$ttlPeriod = _ref.ttlPeriod,\n        ttlPeriod = _ref$ttlPeriod === void 0 ? undefined : _ref$ttlPeriod,\n        _ref$_entities = _ref._entities,\n        _entities = _ref$_entities === void 0 ? new Map() : _ref$_entities;\n      if (!id) throw new Error(\"id is a required attribute for Message\");\n      var senderId = undefined;\n      if (fromId) {\n        senderId = utils.getPeerId(fromId);\n      } else if (peerId) {\n        if (post || !out && peerId instanceof api_1.Api.PeerUser) {\n          senderId = utils.getPeerId(peerId);\n        }\n      }\n      // Common properties to all messages\n      this._entities = _entities;\n      this.out = out;\n      this.mentioned = mentioned;\n      this.mediaUnread = mediaUnread;\n      this.silent = silent;\n      this.post = post;\n      this.post = post;\n      this.fromScheduled = fromScheduled;\n      this.legacy = legacy;\n      this.editHide = editHide;\n      this.ttlPeriod = ttlPeriod;\n      this.id = id;\n      this.fromId = fromId;\n      this.peerId = peerId;\n      this.fwdFrom = fwdFrom;\n      this.viaBotId = viaBotId;\n      this.replyTo = replyTo;\n      this.date = date;\n      this.message = message;\n      this.media = media instanceof api_1.Api.MessageMediaEmpty ? media : undefined;\n      this.replyMarkup = replyMarkup;\n      this.entities = entities;\n      this.views = views;\n      this.forwards = forwards;\n      this.replies = replies;\n      this.editDate = editDate;\n      this.pinned = pinned;\n      this.postAuthor = postAuthor;\n      this.groupedId = groupedId;\n      this.restrictionReason = restrictionReason;\n      this.action = action;\n      this.noforwards = noforwards;\n      this.reactions = reactions;\n      this._client = undefined;\n      this._text = undefined;\n      this._file = undefined;\n      this._replyMessage = undefined;\n      this._buttons = undefined;\n      this._buttonsFlat = undefined;\n      this._buttonsCount = 0;\n      this._viaBot = undefined;\n      this._viaInputBot = undefined;\n      this._actionEntities = undefined;\n      // Note: these calls would reset the client\n      chatGetter_1.ChatGetter.initChatClass(this, {\n        chatPeer: peerId,\n        broadcast: post\n      });\n      senderGetter_1.SenderGetter.initSenderClass(this, {\n        senderId: senderId ? (0, Helpers_1.returnBigInt)(senderId) : undefined\n      });\n      this._forward = undefined;\n    }\n  }, {\n    key: \"_finishInit\",\n    value: function _finishInit(client, entities, inputChat) {\n      this._client = client;\n      var cache = client._entityCache;\n      if (this.senderId) {\n        var _utils$_getEntityPair = utils._getEntityPair(this.senderId.toString(), entities, cache);\n        var _utils$_getEntityPair2 = _slicedToArray(_utils$_getEntityPair, 2);\n        this._sender = _utils$_getEntityPair2[0];\n        this._inputSender = _utils$_getEntityPair2[1];\n      }\n      if (this.chatId) {\n        var _utils$_getEntityPair3 = utils._getEntityPair(this.chatId.toString(), entities, cache);\n        var _utils$_getEntityPair4 = _slicedToArray(_utils$_getEntityPair3, 2);\n        this._chat = _utils$_getEntityPair4[0];\n        this._inputChat = _utils$_getEntityPair4[1];\n      }\n      if (inputChat) {\n        // This has priority\n        this._inputChat = inputChat;\n      }\n      if (this.viaBotId) {\n        var _utils$_getEntityPair5 = utils._getEntityPair(this.viaBotId.toString(), entities, cache);\n        var _utils$_getEntityPair6 = _slicedToArray(_utils$_getEntityPair5, 2);\n        this._viaBot = _utils$_getEntityPair6[0];\n        this._viaInputBot = _utils$_getEntityPair6[1];\n      }\n      if (this.fwdFrom) {\n        this._forward = new forward_1.Forward(this._client, this.fwdFrom, entities);\n      }\n      if (this.action) {\n        if (this.action instanceof api_1.Api.MessageActionChatAddUser || this.action instanceof api_1.Api.MessageActionChatCreate) {\n          this._actionEntities = this.action.users.map(function (i) {\n            return entities.get(i.toString());\n          });\n        } else if (this.action instanceof api_1.Api.MessageActionChatDeleteUser) {\n          this._actionEntities = [entities.get(this.action.userId.toString())];\n        } else if (this.action instanceof api_1.Api.MessageActionChatJoinedByLink) {\n          this._actionEntities = [entities.get(utils.getPeerId(new api_1.Api.PeerChannel({\n            channelId: this.action.inviterId\n          })))];\n        } else if (this.action instanceof api_1.Api.MessageActionChannelMigrateFrom) {\n          this._actionEntities = [entities.get(utils.getPeerId(new api_1.Api.PeerChat({\n            chatId: this.action.chatId\n          })))];\n        }\n      }\n    }\n  }, {\n    key: \"client\",\n    get: function get() {\n      return this._client;\n    }\n  }, {\n    key: \"text\",\n    get: function get() {\n      if (this._text === undefined && this._client) {\n        if (!this._client.parseMode) {\n          this._text = this.message;\n        } else {\n          this._text = this._client.parseMode.unparse(this.message || \"\", this.entities || []);\n        }\n      }\n      return this._text || \"\";\n    }\n  }, {\n    key: \"text\",\n    set: function set(value) {\n      this._text = value;\n      if (this._client && this._client.parseMode) {\n        var _this$_client$parseMo = this._client.parseMode.parse(value);\n        var _this$_client$parseMo2 = _slicedToArray(_this$_client$parseMo, 2);\n        this.message = _this$_client$parseMo2[0];\n        this.entities = _this$_client$parseMo2[1];\n      } else {\n        this.message = value;\n        this.entities = [];\n      }\n    }\n  }, {\n    key: \"rawText\",\n    get: function get() {\n      return this.message || \"\";\n    }\n    /**\r\n     * @param {string} value\r\n     */\n  }, {\n    key: \"rawText\",\n    set: function set(value) {\n      this.message = value;\n      this.entities = [];\n      this._text = \"\";\n    }\n  }, {\n    key: \"isReply\",\n    get: function get() {\n      return !!this.replyTo;\n    }\n  }, {\n    key: \"forward\",\n    get: function get() {\n      return this._forward;\n    }\n  }, {\n    key: \"_refetchSender\",\n    value: function () {\n      var _refetchSender2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this._reloadMessage();\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function _refetchSender() {\n        return _refetchSender2.apply(this, arguments);\n      }\n      return _refetchSender;\n    }()\n    /**\r\n     * Re-fetches this message to reload the sender and chat entities,\r\n     * along with their input versions.\r\n     * @private\r\n     */\n  }, {\n    key: \"_reloadMessage\",\n    value: function () {\n      var _reloadMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var msg, chat, temp;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (this._client) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              msg = undefined;\n              _context2.prev = 3;\n              if (!this.isChannel) {\n                _context2.next = 10;\n                break;\n              }\n              _context2.next = 7;\n              return this.getInputChat();\n            case 7:\n              _context2.t0 = _context2.sent;\n              _context2.next = 11;\n              break;\n            case 10:\n              _context2.t0 = undefined;\n            case 11:\n              chat = _context2.t0;\n              _context2.next = 14;\n              return this._client.getMessages(chat, {\n                ids: this.id\n              });\n            case 14:\n              temp = _context2.sent;\n              if (temp) {\n                msg = temp[0];\n              }\n              _context2.next = 22;\n              break;\n            case 18:\n              _context2.prev = 18;\n              _context2.t1 = _context2[\"catch\"](3);\n              this._client._log.error(\"Got error while trying to finish init message with id \" + this.id);\n              if (this._client._log.canSend(Logger_1.LogLevel.ERROR)) {\n                console.error(_context2.t1);\n              }\n            case 22:\n              if (!(msg == undefined)) {\n                _context2.next = 24;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 24:\n              this._sender = msg._sender;\n              this._inputSender = msg._inputSender;\n              this._chat = msg._chat;\n              this._inputChat = msg._inputChat;\n              this._viaBot = msg._viaBot;\n              this._viaInputBot = msg._viaInputBot;\n              this._forward = msg._forward;\n              this._actionEntities = msg._actionEntities;\n            case 32:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[3, 18]]);\n      }));\n      function _reloadMessage() {\n        return _reloadMessage2.apply(this, arguments);\n      }\n      return _reloadMessage;\n    }()\n    /**\r\n     * Returns a list of lists of `MessageButton <MessageButton>`, if any.\r\n     * Otherwise, it returns `undefined`.\r\n     */\n  }, {\n    key: \"buttons\",\n    get: function get() {\n      if (!this._buttons && this.replyMarkup) {\n        if (!this.inputChat) {\n          return;\n        }\n        try {\n          var bot = this._neededMarkupBot();\n          this._setButtons(this.inputChat, bot);\n        } catch (e) {\n          return;\n        }\n      }\n      return this._buttons;\n    }\n    /**\r\n     * Returns `buttons` when that property fails (this is rarely needed).\r\n     */\n  }, {\n    key: \"getButtons\",\n    value: function () {\n      var _getButtons = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var chat, bot;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(!this.buttons && this.replyMarkup)) {\n                _context3.next = 16;\n                break;\n              }\n              _context3.next = 3;\n              return this.getInputChat();\n            case 3:\n              chat = _context3.sent;\n              if (chat) {\n                _context3.next = 6;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 6:\n              _context3.prev = 6;\n              bot = this._neededMarkupBot();\n              _context3.next = 15;\n              break;\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](6);\n              _context3.next = 14;\n              return this._reloadMessage();\n            case 14:\n              bot = this._neededMarkupBot();\n            case 15:\n              this._setButtons(chat, bot);\n            case 16:\n              return _context3.abrupt(\"return\", this._buttons);\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[6, 10]]);\n      }));\n      function getButtons() {\n        return _getButtons.apply(this, arguments);\n      }\n      return getButtons;\n    }()\n  }, {\n    key: \"buttonCount\",\n    get: function get() {\n      if (!this._buttonsCount) {\n        if (this.replyMarkup instanceof api_1.Api.ReplyInlineMarkup || this.replyMarkup instanceof api_1.Api.ReplyKeyboardMarkup) {\n          this._buttonsCount = this.replyMarkup.rows.map(function (r) {\n            return r.buttons.length;\n          }).reduce(function (a, b) {\n            return a + b;\n          }, 0);\n        } else {\n          this._buttonsCount = 0;\n        }\n      }\n      return this._buttonsCount;\n    }\n  }, {\n    key: \"file\",\n    get: function get() {\n      if (!this._file) {\n        var media = this.photo || this.document;\n        if (media) {\n          this._file = new file_1.File(media);\n        }\n      }\n      return this._file;\n    }\n  }, {\n    key: \"photo\",\n    get: function get() {\n      if (this.media instanceof api_1.Api.MessageMediaPhoto) {\n        if (this.media.photo instanceof api_1.Api.Photo) return this.media.photo;\n      } else if (this.action instanceof api_1.Api.MessageActionChatEditPhoto) {\n        return this.action.photo;\n      } else {\n        return this.webPreview && this.webPreview.photo instanceof api_1.Api.Photo ? this.webPreview.photo : undefined;\n      }\n      return undefined;\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      if (this.media instanceof api_1.Api.MessageMediaDocument) {\n        if (this.media.document instanceof api_1.Api.Document) return this.media.document;\n      } else {\n        var web = this.webPreview;\n        return web && web.document instanceof api_1.Api.Document ? web.document : undefined;\n      }\n      return undefined;\n    }\n  }, {\n    key: \"webPreview\",\n    get: function get() {\n      if (this.media instanceof api_1.Api.MessageMediaWebPage) {\n        if (this.media.webpage instanceof api_1.Api.WebPage) return this.media.webpage;\n      }\n    }\n  }, {\n    key: \"audio\",\n    get: function get() {\n      return this._documentByAttribute(api_1.Api.DocumentAttributeAudio, function (attr) {\n        return !attr.voice;\n      });\n    }\n  }, {\n    key: \"voice\",\n    get: function get() {\n      return this._documentByAttribute(api_1.Api.DocumentAttributeAudio, function (attr) {\n        return !!attr.voice;\n      });\n    }\n  }, {\n    key: \"video\",\n    get: function get() {\n      return this._documentByAttribute(api_1.Api.DocumentAttributeVideo);\n    }\n  }, {\n    key: \"videoNote\",\n    get: function get() {\n      return this._documentByAttribute(api_1.Api.DocumentAttributeVideo, function (attr) {\n        return !!attr.roundMessage;\n      });\n    }\n  }, {\n    key: \"gif\",\n    get: function get() {\n      return this._documentByAttribute(api_1.Api.DocumentAttributeAnimated);\n    }\n  }, {\n    key: \"sticker\",\n    get: function get() {\n      return this._documentByAttribute(api_1.Api.DocumentAttributeSticker);\n    }\n  }, {\n    key: \"contact\",\n    get: function get() {\n      if (this.media instanceof api_1.Api.MessageMediaContact) {\n        return this.media;\n      }\n    }\n  }, {\n    key: \"game\",\n    get: function get() {\n      if (this.media instanceof api_1.Api.MessageMediaGame) {\n        return this.media.game;\n      }\n    }\n  }, {\n    key: \"geo\",\n    get: function get() {\n      if (this.media instanceof api_1.Api.MessageMediaGeo || this.media instanceof api_1.Api.MessageMediaGeoLive || this.media instanceof api_1.Api.MessageMediaVenue) {\n        return this.media.geo;\n      }\n    }\n  }, {\n    key: \"invoice\",\n    get: function get() {\n      if (this.media instanceof api_1.Api.MessageMediaInvoice) {\n        return this.media;\n      }\n    }\n  }, {\n    key: \"poll\",\n    get: function get() {\n      if (this.media instanceof api_1.Api.MessageMediaPoll) {\n        return this.media;\n      }\n    }\n  }, {\n    key: \"venue\",\n    get: function get() {\n      if (this.media instanceof api_1.Api.MessageMediaVenue) {\n        return this.media;\n      }\n    }\n  }, {\n    key: \"dice\",\n    get: function get() {\n      if (this.media instanceof api_1.Api.MessageMediaDice) {\n        return this.media;\n      }\n    }\n  }, {\n    key: \"actionEntities\",\n    get: function get() {\n      return this._actionEntities;\n    }\n  }, {\n    key: \"viaBot\",\n    get: function get() {\n      return this._viaBot;\n    }\n  }, {\n    key: \"viaInputBot\",\n    get: function get() {\n      return this._viaInputBot;\n    }\n  }, {\n    key: \"replyToMsgId\",\n    get: function get() {\n      var _a;\n      return (_a = this.replyTo) === null || _a === void 0 ? void 0 : _a.replyToMsgId;\n    }\n  }, {\n    key: \"toId\",\n    get: function get() {\n      if (this._client && !this.out && this.isPrivate) {\n        return new api_1.Api.PeerUser({\n          userId: (0, users_1._selfId)(this._client)\n        });\n      }\n      return this.peerId;\n    }\n  }, {\n    key: \"getEntitiesText\",\n    value: function getEntitiesText(cls) {\n      var ent = this.entities;\n      if (!ent || ent.length == 0) return;\n      if (cls) {\n        ent = ent.filter(function (v) {\n          return v instanceof cls;\n        });\n      }\n      var texts = utils.getInnerText(this.message || \"\", ent);\n      var zip = function zip(rows) {\n        return rows[0].map(function (_, c) {\n          return rows.map(function (row) {\n            return row[c];\n          });\n        });\n      };\n      return zip([ent, texts]);\n    }\n  }, {\n    key: \"getReplyMessage\",\n    value: function () {\n      var _getReplyMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(!this._replyMessage && this._client)) {\n                _context4.next = 20;\n                break;\n              }\n              if (this.replyTo) {\n                _context4.next = 3;\n                break;\n              }\n              return _context4.abrupt(\"return\", undefined);\n            case 3:\n              _context4.t0 = this._client;\n              if (!this.isChannel) {\n                _context4.next = 10;\n                break;\n              }\n              _context4.next = 7;\n              return this.getInputChat();\n            case 7:\n              _context4.t1 = _context4.sent;\n              _context4.next = 11;\n              break;\n            case 10:\n              _context4.t1 = undefined;\n            case 11:\n              _context4.t2 = _context4.t1;\n              _context4.t3 = {\n                ids: new api_1.Api.InputMessageReplyTo({\n                  id: this.id\n                })\n              };\n              _context4.next = 15;\n              return _context4.t0.getMessages.call(_context4.t0, _context4.t2, _context4.t3);\n            case 15:\n              this._replyMessage = _context4.sent[0];\n              if (this._replyMessage) {\n                _context4.next = 20;\n                break;\n              }\n              _context4.next = 19;\n              return this._client.getMessages(this.isChannel ? this._inputChat : undefined, {\n                ids: this.replyToMsgId\n              });\n            case 19:\n              this._replyMessage = _context4.sent[0];\n            case 20:\n              return _context4.abrupt(\"return\", this._replyMessage);\n            case 21:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function getReplyMessage() {\n        return _getReplyMessage.apply(this, arguments);\n      }\n      return getReplyMessage;\n    }()\n  }, {\n    key: \"respond\",\n    value: function () {\n      var _respond = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(params) {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!this._client) {\n                _context5.next = 7;\n                break;\n              }\n              _context5.t0 = this._client;\n              _context5.next = 4;\n              return this.getInputChat();\n            case 4:\n              _context5.t1 = _context5.sent;\n              _context5.t2 = params;\n              return _context5.abrupt(\"return\", _context5.t0.sendMessage.call(_context5.t0, _context5.t1, _context5.t2));\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function respond(_x) {\n        return _respond.apply(this, arguments);\n      }\n      return respond;\n    }()\n  }, {\n    key: \"reply\",\n    value: function () {\n      var _reply = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(params) {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!this._client) {\n                _context6.next = 8;\n                break;\n              }\n              params.replyTo = this.id;\n              _context6.t0 = this._client;\n              _context6.next = 5;\n              return this.getInputChat();\n            case 5:\n              _context6.t1 = _context6.sent;\n              _context6.t2 = params;\n              return _context6.abrupt(\"return\", _context6.t0.sendMessage.call(_context6.t0, _context6.t1, _context6.t2));\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function reply(_x2) {\n        return _reply.apply(this, arguments);\n      }\n      return reply;\n    }()\n  }, {\n    key: \"forwardTo\",\n    value: function () {\n      var _forwardTo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(entity) {\n        var params;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!this._client) {\n                _context7.next = 10;\n                break;\n              }\n              _context7.next = 3;\n              return this._client.getInputEntity(entity);\n            case 3:\n              entity = _context7.sent;\n              _context7.t0 = [this.id];\n              _context7.next = 7;\n              return this.getInputChat();\n            case 7:\n              _context7.t1 = _context7.sent;\n              params = {\n                messages: _context7.t0,\n                fromPeer: _context7.t1\n              };\n              return _context7.abrupt(\"return\", this._client.forwardMessages(entity, params));\n            case 10:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function forwardTo(_x3) {\n        return _forwardTo.apply(this, arguments);\n      }\n      return forwardTo;\n    }()\n  }, {\n    key: \"edit\",\n    value: function () {\n      var _edit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(params) {\n        var param;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              param = params;\n              if (!(this.fwdFrom || !this.out || !this._client)) {\n                _context8.next = 3;\n                break;\n              }\n              return _context8.abrupt(\"return\", undefined);\n            case 3:\n              if (param.linkPreview == undefined) {\n                param.linkPreview = !!this.webPreview;\n              }\n              if (param.buttons == undefined) {\n                param.buttons = this.replyMarkup;\n              }\n              param.message = this.id;\n              _context8.t0 = this._client;\n              _context8.next = 9;\n              return this.getInputChat();\n            case 9:\n              _context8.t1 = _context8.sent;\n              _context8.t2 = param;\n              return _context8.abrupt(\"return\", _context8.t0.editMessage.call(_context8.t0, _context8.t1, _context8.t2));\n            case 12:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function edit(_x4) {\n        return _edit.apply(this, arguments);\n      }\n      return edit;\n    }()\n  }, {\n    key: \"delete\",\n    value: function () {\n      var _delete2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var _ref2,\n          revoke,\n          _args9 = arguments;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _ref2 = _args9.length > 0 && _args9[0] !== undefined ? _args9[0] : {\n                revoke: false\n              }, revoke = _ref2.revoke;\n              if (!this._client) {\n                _context9.next = 9;\n                break;\n              }\n              _context9.t0 = this._client;\n              _context9.next = 5;\n              return this.getInputChat();\n            case 5:\n              _context9.t1 = _context9.sent;\n              _context9.t2 = [this.id];\n              _context9.t3 = {\n                revoke: revoke\n              };\n              return _context9.abrupt(\"return\", _context9.t0.deleteMessages.call(_context9.t0, _context9.t1, _context9.t2, _context9.t3));\n            case 9:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function _delete() {\n        return _delete2.apply(this, arguments);\n      }\n      return _delete;\n    }()\n  }, {\n    key: \"pin\",\n    value: function () {\n      var _pin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(params) {\n        var entity;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              if (!this._client) {\n                _context10.next = 7;\n                break;\n              }\n              _context10.next = 3;\n              return this.getInputChat();\n            case 3:\n              entity = _context10.sent;\n              if (!(entity === undefined)) {\n                _context10.next = 6;\n                break;\n              }\n              throw Error(\"Failed to pin message due to cannot get input chat.\");\n            case 6:\n              return _context10.abrupt(\"return\", this._client.pinMessage(entity, this.id, params));\n            case 7:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function pin(_x5) {\n        return _pin.apply(this, arguments);\n      }\n      return pin;\n    }()\n  }, {\n    key: \"unpin\",\n    value: function () {\n      var _unpin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(params) {\n        var entity;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              if (!this._client) {\n                _context11.next = 7;\n                break;\n              }\n              _context11.next = 3;\n              return this.getInputChat();\n            case 3:\n              entity = _context11.sent;\n              if (!(entity === undefined)) {\n                _context11.next = 6;\n                break;\n              }\n              throw Error(\"Failed to unpin message due to cannot get input chat.\");\n            case 6:\n              return _context11.abrupt(\"return\", this._client.unpinMessage(entity, this.id, params));\n            case 7:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n      function unpin(_x6) {\n        return _unpin.apply(this, arguments);\n      }\n      return unpin;\n    }()\n  }, {\n    key: \"downloadMedia\",\n    value: function () {\n      var _downloadMedia = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(params) {\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              if (!this._client) {\n                _context12.next = 2;\n                break;\n              }\n              return _context12.abrupt(\"return\", this._client.downloadMedia(this, params || {}));\n            case 2:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, this);\n      }));\n      function downloadMedia(_x7) {\n        return _downloadMedia.apply(this, arguments);\n      }\n      return downloadMedia;\n    }()\n  }, {\n    key: \"markAsRead\",\n    value: function () {\n      var _markAsRead = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {\n        var entity;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              if (!this._client) {\n                _context13.next = 7;\n                break;\n              }\n              _context13.next = 3;\n              return this.getInputChat();\n            case 3:\n              entity = _context13.sent;\n              if (!(entity === undefined)) {\n                _context13.next = 6;\n                break;\n              }\n              throw Error(\"Failed to mark message id \".concat(this.id, \" as read due to cannot get input chat.\"));\n            case 6:\n              return _context13.abrupt(\"return\", this._client.markAsRead(entity, this.id));\n            case 7:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, this);\n      }));\n      function markAsRead() {\n        return _markAsRead.apply(this, arguments);\n      }\n      return markAsRead;\n    }()\n  }, {\n    key: \"click\",\n    value: function () {\n      var _click = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(_ref3) {\n        var i, j, text, filter, data, sharePhone, shareGeo, password, chat, _button, findPoll, options, findButton, button;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              findButton = function _findButton(self) {\n                if (!self._buttonsFlat || !self._buttons) {\n                  return;\n                }\n                if (Array.isArray(i)) {\n                  i = i[0];\n                }\n                if (text != undefined) {\n                  if (typeof text == \"function\") {\n                    var _iterator4 = _createForOfIteratorHelper(self._buttonsFlat),\n                      _step4;\n                    try {\n                      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                        var _button2 = _step4.value;\n                        if (text(_button2.text)) {\n                          return _button2;\n                        }\n                      }\n                    } catch (err) {\n                      _iterator4.e(err);\n                    } finally {\n                      _iterator4.f();\n                    }\n                  } else {\n                    var _iterator5 = _createForOfIteratorHelper(self._buttonsFlat),\n                      _step5;\n                    try {\n                      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                        var _button3 = _step5.value;\n                        if (_button3.text == text) {\n                          return _button3;\n                        }\n                      }\n                    } catch (err) {\n                      _iterator5.e(err);\n                    } finally {\n                      _iterator5.f();\n                    }\n                  }\n                  return;\n                }\n                if (filter != undefined) {\n                  var _iterator6 = _createForOfIteratorHelper(self._buttonsFlat),\n                    _step6;\n                  try {\n                    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                      var _button4 = _step6.value;\n                      if (filter(_button4)) {\n                        return _button4;\n                      }\n                    }\n                  } catch (err) {\n                    _iterator6.e(err);\n                  } finally {\n                    _iterator6.f();\n                  }\n                  return;\n                }\n                if (i == undefined) {\n                  i = 0;\n                }\n                if (j == undefined) {\n                  return self._buttonsFlat[i];\n                } else {\n                  return self._buttons[i][j];\n                }\n              };\n              i = _ref3.i, j = _ref3.j, text = _ref3.text, filter = _ref3.filter, data = _ref3.data, sharePhone = _ref3.sharePhone, shareGeo = _ref3.shareGeo, password = _ref3.password;\n              if (this.client) {\n                _context14.next = 4;\n                break;\n              }\n              return _context14.abrupt(\"return\");\n            case 4:\n              if (!data) {\n                _context14.next = 14;\n                break;\n              }\n              _context14.next = 7;\n              return this.getInputChat();\n            case 7:\n              chat = _context14.sent;\n              if (chat) {\n                _context14.next = 10;\n                break;\n              }\n              return _context14.abrupt(\"return\");\n            case 10:\n              _button = new api_1.Api.KeyboardButtonCallback({\n                text: \"\",\n                data: data\n              });\n              _context14.next = 13;\n              return new messageButton_1.MessageButton(this.client, _button, chat, undefined, this.id).click({\n                sharePhone: sharePhone,\n                shareGeo: shareGeo,\n                password: password\n              });\n            case 13:\n              return _context14.abrupt(\"return\", _context14.sent);\n            case 14:\n              if (!this.poll) {\n                _context14.next = 20;\n                break;\n              }\n              findPoll = function findPoll(answers) {\n                if (i != undefined) {\n                  if (Array.isArray(i)) {\n                    var corrects = [];\n                    for (var x = 0; x < i.length; x++) {\n                      corrects.push(answers[x].option);\n                    }\n                    return corrects;\n                  }\n                  return [answers[i].option];\n                }\n                if (text != undefined) {\n                  if (typeof text == \"function\") {\n                    var _iterator = _createForOfIteratorHelper(answers),\n                      _step;\n                    try {\n                      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                        var answer = _step.value;\n                        if (text(answer.text)) {\n                          return [answer.option];\n                        }\n                      }\n                    } catch (err) {\n                      _iterator.e(err);\n                    } finally {\n                      _iterator.f();\n                    }\n                  } else {\n                    var _iterator2 = _createForOfIteratorHelper(answers),\n                      _step2;\n                    try {\n                      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                        var _answer = _step2.value;\n                        if (_answer.text == text) {\n                          return [_answer.option];\n                        }\n                      }\n                    } catch (err) {\n                      _iterator2.e(err);\n                    } finally {\n                      _iterator2.f();\n                    }\n                  }\n                  return;\n                }\n                if (filter != undefined) {\n                  var _iterator3 = _createForOfIteratorHelper(answers),\n                    _step3;\n                  try {\n                    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                      var _answer2 = _step3.value;\n                      if (filter(_answer2)) {\n                        return [_answer2.option];\n                      }\n                    }\n                  } catch (err) {\n                    _iterator3.e(err);\n                  } finally {\n                    _iterator3.f();\n                  }\n                  return;\n                }\n              };\n              options = findPoll(this.poll.poll.answers) || [];\n              _context14.next = 19;\n              return this.client.invoke(new api_1.Api.messages.SendVote({\n                peer: this.inputChat,\n                msgId: this.id,\n                options: options\n              }));\n            case 19:\n              return _context14.abrupt(\"return\", _context14.sent);\n            case 20:\n              _context14.next = 22;\n              return this.getButtons();\n            case 22:\n              if (_context14.sent) {\n                _context14.next = 24;\n                break;\n              }\n              return _context14.abrupt(\"return\");\n            case 24:\n              button = findButton(this);\n              if (!button) {\n                _context14.next = 29;\n                break;\n              }\n              _context14.next = 28;\n              return button.click({\n                sharePhone: sharePhone,\n                shareGeo: shareGeo,\n                password: password\n              });\n            case 28:\n              return _context14.abrupt(\"return\", _context14.sent);\n            case 29:\n            case \"end\":\n              return _context14.stop();\n          }\n        }, _callee14, this);\n      }));\n      function click(_x8) {\n        return _click.apply(this, arguments);\n      }\n      return click;\n    }()\n    /**\r\n     * Helper methods to set the buttons given the input sender and chat.\r\n     */\n  }, {\n    key: \"_setButtons\",\n    value: function _setButtons(chat, bot) {\n      if (this.client && (this.replyMarkup instanceof api_1.Api.ReplyInlineMarkup || this.replyMarkup instanceof api_1.Api.ReplyKeyboardMarkup)) {\n        this._buttons = [];\n        this._buttonsFlat = [];\n        var _iterator7 = _createForOfIteratorHelper(this.replyMarkup.rows),\n          _step7;\n        try {\n          for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n            var row = _step7.value;\n            var tmp = [];\n            var _iterator8 = _createForOfIteratorHelper(row.buttons),\n              _step8;\n            try {\n              for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                var button = _step8.value;\n                var btn = new messageButton_1.MessageButton(this.client, button, chat, bot, this.id);\n                tmp.push(btn);\n                this._buttonsFlat.push(btn);\n              }\n            } catch (err) {\n              _iterator8.e(err);\n            } finally {\n              _iterator8.f();\n            }\n            this._buttons.push(tmp);\n          }\n        } catch (err) {\n          _iterator7.e(err);\n        } finally {\n          _iterator7.f();\n        }\n      }\n    }\n    /**\r\n     *Returns the input peer of the bot that's needed for the reply markup.\r\n       This is necessary for `KeyboardButtonSwitchInline` since we need\r\n     to know what bot we want to start. Raises ``Error`` if the bot\r\n     cannot be found but is needed. Returns `None` if it's not needed.\r\n     */\n  }, {\n    key: \"_neededMarkupBot\",\n    value: function _neededMarkupBot() {\n      if (!this.client || this.replyMarkup == undefined) {\n        return;\n      }\n      if (!(this.replyMarkup instanceof api_1.Api.ReplyInlineMarkup || this.replyMarkup instanceof api_1.Api.ReplyKeyboardMarkup)) {\n        return;\n      }\n      var _iterator9 = _createForOfIteratorHelper(this.replyMarkup.rows),\n        _step9;\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var row = _step9.value;\n          var _iterator10 = _createForOfIteratorHelper(row.buttons),\n            _step10;\n          try {\n            for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n              var button = _step10.value;\n              if (button instanceof api_1.Api.KeyboardButtonSwitchInline) {\n                if (button.samePeer || !this.viaBotId) {\n                  var bot = this._inputSender;\n                  if (!bot) throw new Error(\"No input sender\");\n                  return bot;\n                } else {\n                  var ent = this.client._entityCache.get(this.viaBotId);\n                  if (!ent) throw new Error(\"No input sender\");\n                  return ent;\n                }\n              }\n            }\n          } catch (err) {\n            _iterator10.e(err);\n          } finally {\n            _iterator10.f();\n          }\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n    }\n    // TODO fix this\n  }, {\n    key: \"_documentByAttribute\",\n    value: function _documentByAttribute(kind, condition) {\n      var doc = this.document;\n      if (doc) {\n        var _iterator11 = _createForOfIteratorHelper(doc.attributes),\n          _step11;\n        try {\n          for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n            var attr = _step11.value;\n            if (attr instanceof kind) {\n              if (condition == undefined || typeof condition == \"function\" && condition(attr)) {\n                return doc;\n              }\n              return undefined;\n            }\n          }\n        } catch (err) {\n          _iterator11.e(err);\n        } finally {\n          _iterator11.f();\n        }\n      }\n    }\n  }]);\n  return CustomMessage;\n}(senderGetter_1.SenderGetter, inspect_1.inspect.custom);\nexports.CustomMessage = CustomMessage;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","CustomMessage","senderGetter_1","require","api_1","chatGetter_1","utils","forward_1","file_1","Helpers_1","users_1","Logger_1","messageButton_1","inspect_1","args","init","betterConsoleLog","id","peerId","date","out","mentioned","mediaUnread","silent","post","fromId","replyTo","message","fwdFrom","viaBotId","media","replyMarkup","entities","views","editDate","postAuthor","groupedId","fromScheduled","legacy","editHide","pinned","restrictionReason","forwards","replies","action","reactions","noforwards","ttlPeriod","_entities","Map","Error","senderId","getPeerId","Api","PeerUser","MessageMediaEmpty","_client","_text","_file","_replyMessage","_buttons","_buttonsFlat","_buttonsCount","_viaBot","_viaInputBot","_actionEntities","ChatGetter","initChatClass","chatPeer","broadcast","SenderGetter","initSenderClass","returnBigInt","_forward","client","inputChat","cache","_entityCache","_getEntityPair","toString","_sender","_inputSender","chatId","_chat","_inputChat","Forward","MessageActionChatAddUser","MessageActionChatCreate","users","map","i","MessageActionChatDeleteUser","userId","MessageActionChatJoinedByLink","PeerChannel","channelId","inviterId","MessageActionChannelMigrateFrom","PeerChat","parseMode","unparse","parse","_reloadMessage","msg","isChannel","getInputChat","chat","getMessages","ids","temp","_log","error","canSend","LogLevel","ERROR","console","bot","_neededMarkupBot","_setButtons","e","buttons","ReplyInlineMarkup","ReplyKeyboardMarkup","rows","r","length","reduce","a","b","photo","document","File","MessageMediaPhoto","Photo","MessageActionChatEditPhoto","webPreview","MessageMediaDocument","Document","web","MessageMediaWebPage","webpage","WebPage","_documentByAttribute","DocumentAttributeAudio","attr","voice","DocumentAttributeVideo","roundMessage","DocumentAttributeAnimated","DocumentAttributeSticker","MessageMediaContact","MessageMediaGame","game","MessageMediaGeo","MessageMediaGeoLive","MessageMediaVenue","geo","MessageMediaInvoice","MessageMediaPoll","MessageMediaDice","_a","replyToMsgId","isPrivate","_selfId","cls","ent","filter","texts","getInnerText","zip","_","c","row","InputMessageReplyTo","params","sendMessage","entity","getInputEntity","messages","fromPeer","forwardMessages","param","linkPreview","editMessage","revoke","deleteMessages","pinMessage","unpinMessage","downloadMedia","markAsRead","findButton","self","Array","isArray","text","button","j","data","sharePhone","shareGeo","password","KeyboardButtonCallback","MessageButton","click","poll","findPoll","answers","corrects","x","push","option","answer","options","invoke","SendVote","peer","msgId","getButtons","tmp","btn","KeyboardButtonSwitchInline","samePeer","kind","condition","doc","attributes","inspect","custom"],"sources":["C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/telegram/tl/custom/message.js"],"sourcesContent":["\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CustomMessage = void 0;\r\nconst senderGetter_1 = require(\"./senderGetter\");\r\nconst api_1 = require(\"../api\");\r\nconst chatGetter_1 = require(\"./chatGetter\");\r\nconst utils = __importStar(require(\"../../Utils\"));\r\nconst forward_1 = require(\"./forward\");\r\nconst file_1 = require(\"./file\");\r\nconst Helpers_1 = require(\"../../Helpers\");\r\nconst users_1 = require(\"../../client/users\");\r\nconst Logger_1 = require(\"../../extensions/Logger\");\r\nconst messageButton_1 = require(\"./messageButton\");\r\nconst inspect_1 = require(\"../../inspect\");\r\n/**\r\n * This custom class aggregates both {@link Api.Message} and {@link Api.MessageService} to ease accessing their members.<br/>\r\n * <br/>\r\n * Remember that this class implements {@link ChatGetter} and {@link SenderGetter}<br/>\r\n * which means you have access to all their sender and chat properties and methods.\r\n */\r\nclass CustomMessage extends senderGetter_1.SenderGetter {\r\n    constructor(args) {\r\n        super();\r\n        this.init(args);\r\n    }\r\n    [inspect_1.inspect.custom]() {\r\n        return (0, Helpers_1.betterConsoleLog)(this);\r\n    }\r\n    init({ id, peerId = undefined, date = undefined, out = undefined, mentioned = undefined, mediaUnread = undefined, silent = undefined, post = undefined, fromId = undefined, replyTo = undefined, message = undefined, fwdFrom = undefined, viaBotId = undefined, media = undefined, replyMarkup = undefined, entities = undefined, views = undefined, editDate = undefined, postAuthor = undefined, groupedId = undefined, fromScheduled = undefined, legacy = undefined, editHide = undefined, pinned = undefined, restrictionReason = undefined, forwards = undefined, replies = undefined, action = undefined, reactions = undefined, noforwards = undefined, ttlPeriod = undefined, _entities = new Map(), }) {\r\n        if (!id)\r\n            throw new Error(\"id is a required attribute for Message\");\r\n        let senderId = undefined;\r\n        if (fromId) {\r\n            senderId = utils.getPeerId(fromId);\r\n        }\r\n        else if (peerId) {\r\n            if (post || (!out && peerId instanceof api_1.Api.PeerUser)) {\r\n                senderId = utils.getPeerId(peerId);\r\n            }\r\n        }\r\n        // Common properties to all messages\r\n        this._entities = _entities;\r\n        this.out = out;\r\n        this.mentioned = mentioned;\r\n        this.mediaUnread = mediaUnread;\r\n        this.silent = silent;\r\n        this.post = post;\r\n        this.post = post;\r\n        this.fromScheduled = fromScheduled;\r\n        this.legacy = legacy;\r\n        this.editHide = editHide;\r\n        this.ttlPeriod = ttlPeriod;\r\n        this.id = id;\r\n        this.fromId = fromId;\r\n        this.peerId = peerId;\r\n        this.fwdFrom = fwdFrom;\r\n        this.viaBotId = viaBotId;\r\n        this.replyTo = replyTo;\r\n        this.date = date;\r\n        this.message = message;\r\n        this.media = media instanceof api_1.Api.MessageMediaEmpty ? media : undefined;\r\n        this.replyMarkup = replyMarkup;\r\n        this.entities = entities;\r\n        this.views = views;\r\n        this.forwards = forwards;\r\n        this.replies = replies;\r\n        this.editDate = editDate;\r\n        this.pinned = pinned;\r\n        this.postAuthor = postAuthor;\r\n        this.groupedId = groupedId;\r\n        this.restrictionReason = restrictionReason;\r\n        this.action = action;\r\n        this.noforwards = noforwards;\r\n        this.reactions = reactions;\r\n        this._client = undefined;\r\n        this._text = undefined;\r\n        this._file = undefined;\r\n        this._replyMessage = undefined;\r\n        this._buttons = undefined;\r\n        this._buttonsFlat = undefined;\r\n        this._buttonsCount = 0;\r\n        this._viaBot = undefined;\r\n        this._viaInputBot = undefined;\r\n        this._actionEntities = undefined;\r\n        // Note: these calls would reset the client\r\n        chatGetter_1.ChatGetter.initChatClass(this, { chatPeer: peerId, broadcast: post });\r\n        senderGetter_1.SenderGetter.initSenderClass(this, {\r\n            senderId: senderId ? (0, Helpers_1.returnBigInt)(senderId) : undefined,\r\n        });\r\n        this._forward = undefined;\r\n    }\r\n    _finishInit(client, entities, inputChat) {\r\n        this._client = client;\r\n        const cache = client._entityCache;\r\n        if (this.senderId) {\r\n            [this._sender, this._inputSender] = utils._getEntityPair(this.senderId.toString(), entities, cache);\r\n        }\r\n        if (this.chatId) {\r\n            [this._chat, this._inputChat] = utils._getEntityPair(this.chatId.toString(), entities, cache);\r\n        }\r\n        if (inputChat) {\r\n            // This has priority\r\n            this._inputChat = inputChat;\r\n        }\r\n        if (this.viaBotId) {\r\n            [this._viaBot, this._viaInputBot] = utils._getEntityPair(this.viaBotId.toString(), entities, cache);\r\n        }\r\n        if (this.fwdFrom) {\r\n            this._forward = new forward_1.Forward(this._client, this.fwdFrom, entities);\r\n        }\r\n        if (this.action) {\r\n            if (this.action instanceof api_1.Api.MessageActionChatAddUser ||\r\n                this.action instanceof api_1.Api.MessageActionChatCreate) {\r\n                this._actionEntities = this.action.users.map((i) => entities.get(i.toString()));\r\n            }\r\n            else if (this.action instanceof api_1.Api.MessageActionChatDeleteUser) {\r\n                this._actionEntities = [\r\n                    entities.get(this.action.userId.toString()),\r\n                ];\r\n            }\r\n            else if (this.action instanceof api_1.Api.MessageActionChatJoinedByLink) {\r\n                this._actionEntities = [\r\n                    entities.get(utils.getPeerId(new api_1.Api.PeerChannel({\r\n                        channelId: this.action.inviterId,\r\n                    }))),\r\n                ];\r\n            }\r\n            else if (this.action instanceof api_1.Api.MessageActionChannelMigrateFrom) {\r\n                this._actionEntities = [\r\n                    entities.get(utils.getPeerId(new api_1.Api.PeerChat({ chatId: this.action.chatId }))),\r\n                ];\r\n            }\r\n        }\r\n    }\r\n    get client() {\r\n        return this._client;\r\n    }\r\n    get text() {\r\n        if (this._text === undefined && this._client) {\r\n            if (!this._client.parseMode) {\r\n                this._text = this.message;\r\n            }\r\n            else {\r\n                this._text = this._client.parseMode.unparse(this.message || \"\", this.entities || []);\r\n            }\r\n        }\r\n        return this._text || \"\";\r\n    }\r\n    set text(value) {\r\n        this._text = value;\r\n        if (this._client && this._client.parseMode) {\r\n            [this.message, this.entities] = this._client.parseMode.parse(value);\r\n        }\r\n        else {\r\n            this.message = value;\r\n            this.entities = [];\r\n        }\r\n    }\r\n    get rawText() {\r\n        return this.message || \"\";\r\n    }\r\n    /**\r\n     * @param {string} value\r\n     */\r\n    set rawText(value) {\r\n        this.message = value;\r\n        this.entities = [];\r\n        this._text = \"\";\r\n    }\r\n    get isReply() {\r\n        return !!this.replyTo;\r\n    }\r\n    get forward() {\r\n        return this._forward;\r\n    }\r\n    async _refetchSender() {\r\n        await this._reloadMessage();\r\n    }\r\n    /**\r\n     * Re-fetches this message to reload the sender and chat entities,\r\n     * along with their input versions.\r\n     * @private\r\n     */\r\n    async _reloadMessage() {\r\n        if (!this._client)\r\n            return;\r\n        let msg = undefined;\r\n        try {\r\n            const chat = this.isChannel ? await this.getInputChat() : undefined;\r\n            let temp = await this._client.getMessages(chat, { ids: this.id });\r\n            if (temp) {\r\n                msg = temp[0];\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._client._log.error(\"Got error while trying to finish init message with id \" +\r\n                this.id);\r\n            if (this._client._log.canSend(Logger_1.LogLevel.ERROR)) {\r\n                console.error(e);\r\n            }\r\n        }\r\n        if (msg == undefined)\r\n            return;\r\n        this._sender = msg._sender;\r\n        this._inputSender = msg._inputSender;\r\n        this._chat = msg._chat;\r\n        this._inputChat = msg._inputChat;\r\n        this._viaBot = msg._viaBot;\r\n        this._viaInputBot = msg._viaInputBot;\r\n        this._forward = msg._forward;\r\n        this._actionEntities = msg._actionEntities;\r\n    }\r\n    /**\r\n     * Returns a list of lists of `MessageButton <MessageButton>`, if any.\r\n     * Otherwise, it returns `undefined`.\r\n     */\r\n    get buttons() {\r\n        if (!this._buttons && this.replyMarkup) {\r\n            if (!this.inputChat) {\r\n                return;\r\n            }\r\n            try {\r\n                const bot = this._neededMarkupBot();\r\n                this._setButtons(this.inputChat, bot);\r\n            }\r\n            catch (e) {\r\n                return;\r\n            }\r\n        }\r\n        return this._buttons;\r\n    }\r\n    /**\r\n     * Returns `buttons` when that property fails (this is rarely needed).\r\n     */\r\n    async getButtons() {\r\n        if (!this.buttons && this.replyMarkup) {\r\n            const chat = await this.getInputChat();\r\n            if (!chat)\r\n                return;\r\n            let bot;\r\n            try {\r\n                bot = this._neededMarkupBot();\r\n            }\r\n            catch (e) {\r\n                await this._reloadMessage();\r\n                bot = this._neededMarkupBot();\r\n            }\r\n            this._setButtons(chat, bot);\r\n        }\r\n        return this._buttons;\r\n    }\r\n    get buttonCount() {\r\n        if (!this._buttonsCount) {\r\n            if (this.replyMarkup instanceof api_1.Api.ReplyInlineMarkup ||\r\n                this.replyMarkup instanceof api_1.Api.ReplyKeyboardMarkup) {\r\n                this._buttonsCount = this.replyMarkup.rows\r\n                    .map((r) => r.buttons.length)\r\n                    .reduce(function (a, b) {\r\n                    return a + b;\r\n                }, 0);\r\n            }\r\n            else {\r\n                this._buttonsCount = 0;\r\n            }\r\n        }\r\n        return this._buttonsCount;\r\n    }\r\n    get file() {\r\n        if (!this._file) {\r\n            const media = this.photo || this.document;\r\n            if (media) {\r\n                this._file = new file_1.File(media);\r\n            }\r\n        }\r\n        return this._file;\r\n    }\r\n    get photo() {\r\n        if (this.media instanceof api_1.Api.MessageMediaPhoto) {\r\n            if (this.media.photo instanceof api_1.Api.Photo)\r\n                return this.media.photo;\r\n        }\r\n        else if (this.action instanceof api_1.Api.MessageActionChatEditPhoto) {\r\n            return this.action.photo;\r\n        }\r\n        else {\r\n            return this.webPreview && this.webPreview.photo instanceof api_1.Api.Photo\r\n                ? this.webPreview.photo\r\n                : undefined;\r\n        }\r\n        return undefined;\r\n    }\r\n    get document() {\r\n        if (this.media instanceof api_1.Api.MessageMediaDocument) {\r\n            if (this.media.document instanceof api_1.Api.Document)\r\n                return this.media.document;\r\n        }\r\n        else {\r\n            const web = this.webPreview;\r\n            return web && web.document instanceof api_1.Api.Document\r\n                ? web.document\r\n                : undefined;\r\n        }\r\n        return undefined;\r\n    }\r\n    get webPreview() {\r\n        if (this.media instanceof api_1.Api.MessageMediaWebPage) {\r\n            if (this.media.webpage instanceof api_1.Api.WebPage)\r\n                return this.media.webpage;\r\n        }\r\n    }\r\n    get audio() {\r\n        return this._documentByAttribute(api_1.Api.DocumentAttributeAudio, (attr) => !attr.voice);\r\n    }\r\n    get voice() {\r\n        return this._documentByAttribute(api_1.Api.DocumentAttributeAudio, (attr) => !!attr.voice);\r\n    }\r\n    get video() {\r\n        return this._documentByAttribute(api_1.Api.DocumentAttributeVideo);\r\n    }\r\n    get videoNote() {\r\n        return this._documentByAttribute(api_1.Api.DocumentAttributeVideo, (attr) => !!attr.roundMessage);\r\n    }\r\n    get gif() {\r\n        return this._documentByAttribute(api_1.Api.DocumentAttributeAnimated);\r\n    }\r\n    get sticker() {\r\n        return this._documentByAttribute(api_1.Api.DocumentAttributeSticker);\r\n    }\r\n    get contact() {\r\n        if (this.media instanceof api_1.Api.MessageMediaContact) {\r\n            return this.media;\r\n        }\r\n    }\r\n    get game() {\r\n        if (this.media instanceof api_1.Api.MessageMediaGame) {\r\n            return this.media.game;\r\n        }\r\n    }\r\n    get geo() {\r\n        if (this.media instanceof api_1.Api.MessageMediaGeo ||\r\n            this.media instanceof api_1.Api.MessageMediaGeoLive ||\r\n            this.media instanceof api_1.Api.MessageMediaVenue) {\r\n            return this.media.geo;\r\n        }\r\n    }\r\n    get invoice() {\r\n        if (this.media instanceof api_1.Api.MessageMediaInvoice) {\r\n            return this.media;\r\n        }\r\n    }\r\n    get poll() {\r\n        if (this.media instanceof api_1.Api.MessageMediaPoll) {\r\n            return this.media;\r\n        }\r\n    }\r\n    get venue() {\r\n        if (this.media instanceof api_1.Api.MessageMediaVenue) {\r\n            return this.media;\r\n        }\r\n    }\r\n    get dice() {\r\n        if (this.media instanceof api_1.Api.MessageMediaDice) {\r\n            return this.media;\r\n        }\r\n    }\r\n    get actionEntities() {\r\n        return this._actionEntities;\r\n    }\r\n    get viaBot() {\r\n        return this._viaBot;\r\n    }\r\n    get viaInputBot() {\r\n        return this._viaInputBot;\r\n    }\r\n    get replyToMsgId() {\r\n        var _a;\r\n        return (_a = this.replyTo) === null || _a === void 0 ? void 0 : _a.replyToMsgId;\r\n    }\r\n    get toId() {\r\n        if (this._client && !this.out && this.isPrivate) {\r\n            return new api_1.Api.PeerUser({\r\n                userId: (0, users_1._selfId)(this._client),\r\n            });\r\n        }\r\n        return this.peerId;\r\n    }\r\n    getEntitiesText(cls) {\r\n        let ent = this.entities;\r\n        if (!ent || ent.length == 0)\r\n            return;\r\n        if (cls) {\r\n            ent = ent.filter((v) => v instanceof cls);\r\n        }\r\n        const texts = utils.getInnerText(this.message || \"\", ent);\r\n        const zip = (rows) => rows[0].map((_, c) => rows.map((row) => row[c]));\r\n        return zip([ent, texts]);\r\n    }\r\n    async getReplyMessage() {\r\n        if (!this._replyMessage && this._client) {\r\n            if (!this.replyTo)\r\n                return undefined;\r\n            // Bots cannot access other bots' messages by their ID.\r\n            // However they can access them through replies...\r\n            this._replyMessage = (await this._client.getMessages(this.isChannel ? await this.getInputChat() : undefined, {\r\n                ids: new api_1.Api.InputMessageReplyTo({ id: this.id }),\r\n            }))[0];\r\n            if (!this._replyMessage) {\r\n                // ...unless the current message got deleted.\r\n                //\r\n                // If that's the case, give it a second chance accessing\r\n                // directly by its ID.\r\n                this._replyMessage = (await this._client.getMessages(this.isChannel ? this._inputChat : undefined, {\r\n                    ids: this.replyToMsgId,\r\n                }))[0];\r\n            }\r\n        }\r\n        return this._replyMessage;\r\n    }\r\n    async respond(params) {\r\n        if (this._client) {\r\n            return this._client.sendMessage((await this.getInputChat()), params);\r\n        }\r\n    }\r\n    async reply(params) {\r\n        if (this._client) {\r\n            params.replyTo = this.id;\r\n            return this._client.sendMessage((await this.getInputChat()), params);\r\n        }\r\n    }\r\n    async forwardTo(entity) {\r\n        if (this._client) {\r\n            entity = await this._client.getInputEntity(entity);\r\n            const params = {\r\n                messages: [this.id],\r\n                fromPeer: (await this.getInputChat()),\r\n            };\r\n            return this._client.forwardMessages(entity, params);\r\n        }\r\n    }\r\n    async edit(params) {\r\n        const param = params;\r\n        if (this.fwdFrom || !this.out || !this._client)\r\n            return undefined;\r\n        if (param.linkPreview == undefined) {\r\n            param.linkPreview = !!this.webPreview;\r\n        }\r\n        if (param.buttons == undefined) {\r\n            param.buttons = this.replyMarkup;\r\n        }\r\n        param.message = this.id;\r\n        return this._client.editMessage((await this.getInputChat()), param);\r\n    }\r\n    async delete({ revoke } = { revoke: false }) {\r\n        if (this._client) {\r\n            return this._client.deleteMessages(await this.getInputChat(), [this.id], {\r\n                revoke,\r\n            });\r\n        }\r\n    }\r\n    async pin(params) {\r\n        if (this._client) {\r\n            const entity = await this.getInputChat();\r\n            if (entity === undefined) {\r\n                throw Error(\"Failed to pin message due to cannot get input chat.\");\r\n            }\r\n            return this._client.pinMessage(entity, this.id, params);\r\n        }\r\n    }\r\n    async unpin(params) {\r\n        if (this._client) {\r\n            const entity = await this.getInputChat();\r\n            if (entity === undefined) {\r\n                throw Error(\"Failed to unpin message due to cannot get input chat.\");\r\n            }\r\n            return this._client.unpinMessage(entity, this.id, params);\r\n        }\r\n    }\r\n    async downloadMedia(params) {\r\n        // small hack for patched method\r\n        if (this._client)\r\n            return this._client.downloadMedia(this, params || {});\r\n    }\r\n    async markAsRead() {\r\n        if (this._client) {\r\n            const entity = await this.getInputChat();\r\n            if (entity === undefined) {\r\n                throw Error(`Failed to mark message id ${this.id} as read due to cannot get input chat.`);\r\n            }\r\n            return this._client.markAsRead(entity, this.id);\r\n        }\r\n    }\r\n    async click({ i, j, text, filter, data, sharePhone, shareGeo, password, }) {\r\n        if (!this.client) {\r\n            return;\r\n        }\r\n        if (data) {\r\n            const chat = await this.getInputChat();\r\n            if (!chat) {\r\n                return;\r\n            }\r\n            const button = new api_1.Api.KeyboardButtonCallback({\r\n                text: \"\",\r\n                data: data,\r\n            });\r\n            return await new messageButton_1.MessageButton(this.client, button, chat, undefined, this.id).click({\r\n                sharePhone: sharePhone,\r\n                shareGeo: shareGeo,\r\n                password: password,\r\n            });\r\n        }\r\n        if (this.poll) {\r\n            function findPoll(answers) {\r\n                if (i != undefined) {\r\n                    if (Array.isArray(i)) {\r\n                        const corrects = [];\r\n                        for (let x = 0; x < i.length; x++) {\r\n                            corrects.push(answers[x].option);\r\n                        }\r\n                        return corrects;\r\n                    }\r\n                    return [answers[i].option];\r\n                }\r\n                if (text != undefined) {\r\n                    if (typeof text == \"function\") {\r\n                        for (const answer of answers) {\r\n                            if (text(answer.text)) {\r\n                                return [answer.option];\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (const answer of answers) {\r\n                            if (answer.text == text) {\r\n                                return [answer.option];\r\n                            }\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n                if (filter != undefined) {\r\n                    for (const answer of answers) {\r\n                        if (filter(answer)) {\r\n                            return [answer.option];\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n            const options = findPoll(this.poll.poll.answers) || [];\r\n            return await this.client.invoke(new api_1.Api.messages.SendVote({\r\n                peer: this.inputChat,\r\n                msgId: this.id,\r\n                options: options,\r\n            }));\r\n        }\r\n        if (!(await this.getButtons())) {\r\n            return; // Accessing the property sets this._buttons[_flat]\r\n        }\r\n        function findButton(self) {\r\n            if (!self._buttonsFlat || !self._buttons) {\r\n                return;\r\n            }\r\n            if (Array.isArray(i)) {\r\n                i = i[0];\r\n            }\r\n            if (text != undefined) {\r\n                if (typeof text == \"function\") {\r\n                    for (const button of self._buttonsFlat) {\r\n                        if (text(button.text)) {\r\n                            return button;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    for (const button of self._buttonsFlat) {\r\n                        if (button.text == text) {\r\n                            return button;\r\n                        }\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            if (filter != undefined) {\r\n                for (const button of self._buttonsFlat) {\r\n                    if (filter(button)) {\r\n                        return button;\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            if (i == undefined) {\r\n                i = 0;\r\n            }\r\n            if (j == undefined) {\r\n                return self._buttonsFlat[i];\r\n            }\r\n            else {\r\n                return self._buttons[i][j];\r\n            }\r\n        }\r\n        const button = findButton(this);\r\n        if (button) {\r\n            return await button.click({\r\n                sharePhone: sharePhone,\r\n                shareGeo: shareGeo,\r\n                password: password,\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Helper methods to set the buttons given the input sender and chat.\r\n     */\r\n    _setButtons(chat, bot) {\r\n        if (this.client &&\r\n            (this.replyMarkup instanceof api_1.Api.ReplyInlineMarkup ||\r\n                this.replyMarkup instanceof api_1.Api.ReplyKeyboardMarkup)) {\r\n            this._buttons = [];\r\n            this._buttonsFlat = [];\r\n            for (const row of this.replyMarkup.rows) {\r\n                const tmp = [];\r\n                for (const button of row.buttons) {\r\n                    const btn = new messageButton_1.MessageButton(this.client, button, chat, bot, this.id);\r\n                    tmp.push(btn);\r\n                    this._buttonsFlat.push(btn);\r\n                }\r\n                this._buttons.push(tmp);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     *Returns the input peer of the bot that's needed for the reply markup.\r\n\r\n     This is necessary for `KeyboardButtonSwitchInline` since we need\r\n     to know what bot we want to start. Raises ``Error`` if the bot\r\n     cannot be found but is needed. Returns `None` if it's not needed.\r\n     */\r\n    _neededMarkupBot() {\r\n        if (!this.client || this.replyMarkup == undefined) {\r\n            return;\r\n        }\r\n        if (!(this.replyMarkup instanceof api_1.Api.ReplyInlineMarkup ||\r\n            this.replyMarkup instanceof api_1.Api.ReplyKeyboardMarkup)) {\r\n            return;\r\n        }\r\n        for (const row of this.replyMarkup.rows) {\r\n            for (const button of row.buttons) {\r\n                if (button instanceof api_1.Api.KeyboardButtonSwitchInline) {\r\n                    if (button.samePeer || !this.viaBotId) {\r\n                        const bot = this._inputSender;\r\n                        if (!bot)\r\n                            throw new Error(\"No input sender\");\r\n                        return bot;\r\n                    }\r\n                    else {\r\n                        const ent = this.client._entityCache.get(this.viaBotId);\r\n                        if (!ent)\r\n                            throw new Error(\"No input sender\");\r\n                        return ent;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // TODO fix this\r\n    _documentByAttribute(kind, condition) {\r\n        const doc = this.document;\r\n        if (doc) {\r\n            for (const attr of doc.attributes) {\r\n                if (attr instanceof kind) {\r\n                    if (condition == undefined ||\r\n                        (typeof condition == \"function\" && condition(attr))) {\r\n                        return doc;\r\n                    }\r\n                    return undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.CustomMessage = CustomMessage;\r\n"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,KAAMC,MAAM,CAACC,MAAM,GAAI,UAASC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAE;EAC5F,IAAIA,EAAE,KAAKC,SAAS,EAAED,EAAE,GAAGD,CAAC;EAC5B,IAAIG,IAAI,GAAGP,MAAM,CAACQ,wBAAwB,CAACL,CAAC,EAAEC,CAAC,CAAC;EAChD,IAAI,CAACG,IAAI,KAAK,KAAK,IAAIA,IAAI,GAAG,CAACJ,CAAC,CAACM,UAAU,GAAGF,IAAI,CAACG,QAAQ,IAAIH,IAAI,CAACI,YAAY,CAAC,EAAE;IACjFJ,IAAI,GAAG;MAAEK,UAAU,EAAE,IAAI;MAAEC,GAAG,EAAE,eAAW;QAAE,OAAOV,CAAC,CAACC,CAAC,CAAC;MAAE;IAAE,CAAC;EAC/D;EACAJ,MAAM,CAACc,cAAc,CAACZ,CAAC,EAAEG,EAAE,EAAEE,IAAI,CAAC;AACtC,CAAC,GAAK,UAASL,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAE;EACxB,IAAIA,EAAE,KAAKC,SAAS,EAAED,EAAE,GAAGD,CAAC;EAC5BF,CAAC,CAACG,EAAE,CAAC,GAAGF,CAAC,CAACC,CAAC,CAAC;AAChB,CAAE,CAAC;AACH,IAAIW,kBAAkB,GAAI,IAAI,IAAI,IAAI,CAACA,kBAAkB,KAAMf,MAAM,CAACC,MAAM,GAAI,UAASC,CAAC,EAAEc,CAAC,EAAE;EAC3FhB,MAAM,CAACc,cAAc,CAACZ,CAAC,EAAE,SAAS,EAAE;IAAEU,UAAU,EAAE,IAAI;IAAEK,KAAK,EAAED;EAAE,CAAC,CAAC;AACvE,CAAC,GAAI,UAASd,CAAC,EAAEc,CAAC,EAAE;EAChBd,CAAC,CAAC,SAAS,CAAC,GAAGc,CAAC;AACpB,CAAC,CAAC;AACF,IAAIE,YAAY,GAAI,IAAI,IAAI,IAAI,CAACA,YAAY,IAAK,UAAUC,GAAG,EAAE;EAC7D,IAAIA,GAAG,IAAIA,GAAG,CAACV,UAAU,EAAE,OAAOU,GAAG;EACrC,IAAIC,MAAM,GAAG,CAAC,CAAC;EACf,IAAID,GAAG,IAAI,IAAI,EAAE,KAAK,IAAIf,CAAC,IAAIe,GAAG,EAAE,IAAIf,CAAC,KAAK,SAAS,IAAIJ,MAAM,CAACqB,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,GAAG,EAAEf,CAAC,CAAC,EAAEL,eAAe,CAACqB,MAAM,EAAED,GAAG,EAAEf,CAAC,CAAC;EACxIW,kBAAkB,CAACK,MAAM,EAAED,GAAG,CAAC;EAC/B,OAAOC,MAAM;AACjB,CAAC;AACDpB,MAAM,CAACc,cAAc,CAACU,OAAO,EAAE,YAAY,EAAE;EAAEP,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DO,OAAO,CAACC,aAAa,GAAG,KAAK,CAAC;AAC9B,IAAMC,cAAc,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAChD,IAAMC,KAAK,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAC/B,IAAME,YAAY,GAAGF,OAAO,CAAC,cAAc,CAAC;AAC5C,IAAMG,KAAK,GAAGZ,YAAY,CAACS,OAAO,CAAC,aAAa,CAAC,CAAC;AAClD,IAAMI,SAAS,GAAGJ,OAAO,CAAC,WAAW,CAAC;AACtC,IAAMK,MAAM,GAAGL,OAAO,CAAC,QAAQ,CAAC;AAChC,IAAMM,SAAS,GAAGN,OAAO,CAAC,eAAe,CAAC;AAC1C,IAAMO,OAAO,GAAGP,OAAO,CAAC,oBAAoB,CAAC;AAC7C,IAAMQ,QAAQ,GAAGR,OAAO,CAAC,yBAAyB,CAAC;AACnD,IAAMS,eAAe,GAAGT,OAAO,CAAC,iBAAiB,CAAC;AAClD,IAAMU,SAAS,GAAGV,OAAO,CAAC,eAAe,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AALA,IAMMF,aAAa;EAAA;EAAA;EACf,uBAAYa,IAAI,EAAE;IAAA;IAAA;IACd;IACA,MAAKC,IAAI,CAACD,IAAI,CAAC;IAAC;EACpB;EAAC;IAAA;IAAA,OACD,iBAA6B;MACzB,OAAO,CAAC,CAAC,EAAEL,SAAS,CAACO,gBAAgB,EAAE,IAAI,CAAC;IAChD;EAAC;IAAA;IAAA,OACD,oBAAkrB;MAAA,IAA3qBC,EAAE,QAAFA,EAAE;QAAA,mBAAEC,MAAM;QAANA,MAAM,4BAAGpC,SAAS;QAAA,iBAAEqC,IAAI;QAAJA,IAAI,0BAAGrC,SAAS;QAAA,gBAAEsC,GAAG;QAAHA,GAAG,yBAAGtC,SAAS;QAAA,sBAAEuC,SAAS;QAATA,SAAS,+BAAGvC,SAAS;QAAA,wBAAEwC,WAAW;QAAXA,WAAW,iCAAGxC,SAAS;QAAA,mBAAEyC,MAAM;QAANA,MAAM,4BAAGzC,SAAS;QAAA,iBAAE0C,IAAI;QAAJA,IAAI,0BAAG1C,SAAS;QAAA,mBAAE2C,MAAM;QAANA,MAAM,4BAAG3C,SAAS;QAAA,oBAAE4C,OAAO;QAAPA,OAAO,6BAAG5C,SAAS;QAAA,oBAAE6C,OAAO;QAAPA,OAAO,6BAAG7C,SAAS;QAAA,oBAAE8C,OAAO;QAAPA,OAAO,6BAAG9C,SAAS;QAAA,qBAAE+C,QAAQ;QAARA,QAAQ,8BAAG/C,SAAS;QAAA,kBAAEgD,KAAK;QAALA,KAAK,2BAAGhD,SAAS;QAAA,wBAAEiD,WAAW;QAAXA,WAAW,iCAAGjD,SAAS;QAAA,qBAAEkD,QAAQ;QAARA,QAAQ,8BAAGlD,SAAS;QAAA,kBAAEmD,KAAK;QAALA,KAAK,2BAAGnD,SAAS;QAAA,qBAAEoD,QAAQ;QAARA,QAAQ,8BAAGpD,SAAS;QAAA,uBAAEqD,UAAU;QAAVA,UAAU,gCAAGrD,SAAS;QAAA,sBAAEsD,SAAS;QAATA,SAAS,+BAAGtD,SAAS;QAAA,0BAAEuD,aAAa;QAAbA,aAAa,mCAAGvD,SAAS;QAAA,mBAAEwD,MAAM;QAANA,MAAM,4BAAGxD,SAAS;QAAA,qBAAEyD,QAAQ;QAARA,QAAQ,8BAAGzD,SAAS;QAAA,mBAAE0D,MAAM;QAANA,MAAM,4BAAG1D,SAAS;QAAA,6BAAE2D,iBAAiB;QAAjBA,iBAAiB,sCAAG3D,SAAS;QAAA,qBAAE4D,QAAQ;QAARA,QAAQ,8BAAG5D,SAAS;QAAA,oBAAE6D,OAAO;QAAPA,OAAO,6BAAG7D,SAAS;QAAA,mBAAE8D,MAAM;QAANA,MAAM,4BAAG9D,SAAS;QAAA,sBAAE+D,SAAS;QAATA,SAAS,+BAAG/D,SAAS;QAAA,uBAAEgE,UAAU;QAAVA,UAAU,gCAAGhE,SAAS;QAAA,sBAAEiE,SAAS;QAATA,SAAS,+BAAGjE,SAAS;QAAA,sBAAEkE,SAAS;QAATA,SAAS,+BAAG,IAAIC,GAAG,EAAE;MACzqB,IAAI,CAAChC,EAAE,EACH,MAAM,IAAIiC,KAAK,CAAC,wCAAwC,CAAC;MAC7D,IAAIC,QAAQ,GAAGrE,SAAS;MACxB,IAAI2C,MAAM,EAAE;QACR0B,QAAQ,GAAG7C,KAAK,CAAC8C,SAAS,CAAC3B,MAAM,CAAC;MACtC,CAAC,MACI,IAAIP,MAAM,EAAE;QACb,IAAIM,IAAI,IAAK,CAACJ,GAAG,IAAIF,MAAM,YAAYd,KAAK,CAACiD,GAAG,CAACC,QAAS,EAAE;UACxDH,QAAQ,GAAG7C,KAAK,CAAC8C,SAAS,CAAClC,MAAM,CAAC;QACtC;MACJ;MACA;MACA,IAAI,CAAC8B,SAAS,GAAGA,SAAS;MAC1B,IAAI,CAAC5B,GAAG,GAAGA,GAAG;MACd,IAAI,CAACC,SAAS,GAAGA,SAAS;MAC1B,IAAI,CAACC,WAAW,GAAGA,WAAW;MAC9B,IAAI,CAACC,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACC,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACA,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACa,aAAa,GAAGA,aAAa;MAClC,IAAI,CAACC,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAACQ,SAAS,GAAGA,SAAS;MAC1B,IAAI,CAAC9B,EAAE,GAAGA,EAAE;MACZ,IAAI,CAACQ,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACP,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACU,OAAO,GAAGA,OAAO;MACtB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAACH,OAAO,GAAGA,OAAO;MACtB,IAAI,CAACP,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACQ,OAAO,GAAGA,OAAO;MACtB,IAAI,CAACG,KAAK,GAAGA,KAAK,YAAY1B,KAAK,CAACiD,GAAG,CAACE,iBAAiB,GAAGzB,KAAK,GAAGhD,SAAS;MAC7E,IAAI,CAACiD,WAAW,GAAGA,WAAW;MAC9B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAACC,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACS,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAACC,OAAO,GAAGA,OAAO;MACtB,IAAI,CAACT,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAACM,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACL,UAAU,GAAGA,UAAU;MAC5B,IAAI,CAACC,SAAS,GAAGA,SAAS;MAC1B,IAAI,CAACK,iBAAiB,GAAGA,iBAAiB;MAC1C,IAAI,CAACG,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACE,UAAU,GAAGA,UAAU;MAC5B,IAAI,CAACD,SAAS,GAAGA,SAAS;MAC1B,IAAI,CAACW,OAAO,GAAG1E,SAAS;MACxB,IAAI,CAAC2E,KAAK,GAAG3E,SAAS;MACtB,IAAI,CAAC4E,KAAK,GAAG5E,SAAS;MACtB,IAAI,CAAC6E,aAAa,GAAG7E,SAAS;MAC9B,IAAI,CAAC8E,QAAQ,GAAG9E,SAAS;MACzB,IAAI,CAAC+E,YAAY,GAAG/E,SAAS;MAC7B,IAAI,CAACgF,aAAa,GAAG,CAAC;MACtB,IAAI,CAACC,OAAO,GAAGjF,SAAS;MACxB,IAAI,CAACkF,YAAY,GAAGlF,SAAS;MAC7B,IAAI,CAACmF,eAAe,GAAGnF,SAAS;MAChC;MACAuB,YAAY,CAAC6D,UAAU,CAACC,aAAa,CAAC,IAAI,EAAE;QAAEC,QAAQ,EAAElD,MAAM;QAAEmD,SAAS,EAAE7C;MAAK,CAAC,CAAC;MAClFtB,cAAc,CAACoE,YAAY,CAACC,eAAe,CAAC,IAAI,EAAE;QAC9CpB,QAAQ,EAAEA,QAAQ,GAAG,CAAC,CAAC,EAAE1C,SAAS,CAAC+D,YAAY,EAAErB,QAAQ,CAAC,GAAGrE;MACjE,CAAC,CAAC;MACF,IAAI,CAAC2F,QAAQ,GAAG3F,SAAS;IAC7B;EAAC;IAAA;IAAA,OACD,qBAAY4F,MAAM,EAAE1C,QAAQ,EAAE2C,SAAS,EAAE;MACrC,IAAI,CAACnB,OAAO,GAAGkB,MAAM;MACrB,IAAME,KAAK,GAAGF,MAAM,CAACG,YAAY;MACjC,IAAI,IAAI,CAAC1B,QAAQ,EAAE;QAAA,4BACqB7C,KAAK,CAACwE,cAAc,CAAC,IAAI,CAAC3B,QAAQ,CAAC4B,QAAQ,EAAE,EAAE/C,QAAQ,EAAE4C,KAAK,CAAC;QAAA;QAAlG,IAAI,CAACI,OAAO;QAAE,IAAI,CAACC,YAAY;MACpC;MACA,IAAI,IAAI,CAACC,MAAM,EAAE;QAAA,6BACmB5E,KAAK,CAACwE,cAAc,CAAC,IAAI,CAACI,MAAM,CAACH,QAAQ,EAAE,EAAE/C,QAAQ,EAAE4C,KAAK,CAAC;QAAA;QAA5F,IAAI,CAACO,KAAK;QAAE,IAAI,CAACC,UAAU;MAChC;MACA,IAAIT,SAAS,EAAE;QACX;QACA,IAAI,CAACS,UAAU,GAAGT,SAAS;MAC/B;MACA,IAAI,IAAI,CAAC9C,QAAQ,EAAE;QAAA,6BACqBvB,KAAK,CAACwE,cAAc,CAAC,IAAI,CAACjD,QAAQ,CAACkD,QAAQ,EAAE,EAAE/C,QAAQ,EAAE4C,KAAK,CAAC;QAAA;QAAlG,IAAI,CAACb,OAAO;QAAE,IAAI,CAACC,YAAY;MACpC;MACA,IAAI,IAAI,CAACpC,OAAO,EAAE;QACd,IAAI,CAAC6C,QAAQ,GAAG,IAAIlE,SAAS,CAAC8E,OAAO,CAAC,IAAI,CAAC7B,OAAO,EAAE,IAAI,CAAC5B,OAAO,EAAEI,QAAQ,CAAC;MAC/E;MACA,IAAI,IAAI,CAACY,MAAM,EAAE;QACb,IAAI,IAAI,CAACA,MAAM,YAAYxC,KAAK,CAACiD,GAAG,CAACiC,wBAAwB,IACzD,IAAI,CAAC1C,MAAM,YAAYxC,KAAK,CAACiD,GAAG,CAACkC,uBAAuB,EAAE;UAC1D,IAAI,CAACtB,eAAe,GAAG,IAAI,CAACrB,MAAM,CAAC4C,KAAK,CAACC,GAAG,CAAC,UAACC,CAAC;YAAA,OAAK1D,QAAQ,CAAC3C,GAAG,CAACqG,CAAC,CAACX,QAAQ,EAAE,CAAC;UAAA,EAAC;QACnF,CAAC,MACI,IAAI,IAAI,CAACnC,MAAM,YAAYxC,KAAK,CAACiD,GAAG,CAACsC,2BAA2B,EAAE;UACnE,IAAI,CAAC1B,eAAe,GAAG,CACnBjC,QAAQ,CAAC3C,GAAG,CAAC,IAAI,CAACuD,MAAM,CAACgD,MAAM,CAACb,QAAQ,EAAE,CAAC,CAC9C;QACL,CAAC,MACI,IAAI,IAAI,CAACnC,MAAM,YAAYxC,KAAK,CAACiD,GAAG,CAACwC,6BAA6B,EAAE;UACrE,IAAI,CAAC5B,eAAe,GAAG,CACnBjC,QAAQ,CAAC3C,GAAG,CAACiB,KAAK,CAAC8C,SAAS,CAAC,IAAIhD,KAAK,CAACiD,GAAG,CAACyC,WAAW,CAAC;YACnDC,SAAS,EAAE,IAAI,CAACnD,MAAM,CAACoD;UAC3B,CAAC,CAAC,CAAC,CAAC,CACP;QACL,CAAC,MACI,IAAI,IAAI,CAACpD,MAAM,YAAYxC,KAAK,CAACiD,GAAG,CAAC4C,+BAA+B,EAAE;UACvE,IAAI,CAAChC,eAAe,GAAG,CACnBjC,QAAQ,CAAC3C,GAAG,CAACiB,KAAK,CAAC8C,SAAS,CAAC,IAAIhD,KAAK,CAACiD,GAAG,CAAC6C,QAAQ,CAAC;YAAEhB,MAAM,EAAE,IAAI,CAACtC,MAAM,CAACsC;UAAO,CAAC,CAAC,CAAC,CAAC,CACxF;QACL;MACJ;IACJ;EAAC;IAAA;IAAA,KACD,eAAa;MACT,OAAO,IAAI,CAAC1B,OAAO;IACvB;EAAC;IAAA;IAAA,KACD,eAAW;MACP,IAAI,IAAI,CAACC,KAAK,KAAK3E,SAAS,IAAI,IAAI,CAAC0E,OAAO,EAAE;QAC1C,IAAI,CAAC,IAAI,CAACA,OAAO,CAAC2C,SAAS,EAAE;UACzB,IAAI,CAAC1C,KAAK,GAAG,IAAI,CAAC9B,OAAO;QAC7B,CAAC,MACI;UACD,IAAI,CAAC8B,KAAK,GAAG,IAAI,CAACD,OAAO,CAAC2C,SAAS,CAACC,OAAO,CAAC,IAAI,CAACzE,OAAO,IAAI,EAAE,EAAE,IAAI,CAACK,QAAQ,IAAI,EAAE,CAAC;QACxF;MACJ;MACA,OAAO,IAAI,CAACyB,KAAK,IAAI,EAAE;IAC3B;EAAC;IAAA;IAAA,KACD,aAAShE,KAAK,EAAE;MACZ,IAAI,CAACgE,KAAK,GAAGhE,KAAK;MAClB,IAAI,IAAI,CAAC+D,OAAO,IAAI,IAAI,CAACA,OAAO,CAAC2C,SAAS,EAAE;QAAA,4BACR,IAAI,CAAC3C,OAAO,CAAC2C,SAAS,CAACE,KAAK,CAAC5G,KAAK,CAAC;QAAA;QAAlE,IAAI,CAACkC,OAAO;QAAE,IAAI,CAACK,QAAQ;MAChC,CAAC,MACI;QACD,IAAI,CAACL,OAAO,GAAGlC,KAAK;QACpB,IAAI,CAACuC,QAAQ,GAAG,EAAE;MACtB;IACJ;EAAC;IAAA;IAAA,KACD,eAAc;MACV,OAAO,IAAI,CAACL,OAAO,IAAI,EAAE;IAC7B;IACA;AACJ;AACA;EAFI;IAAA;IAAA,KAGA,aAAYlC,KAAK,EAAE;MACf,IAAI,CAACkC,OAAO,GAAGlC,KAAK;MACpB,IAAI,CAACuC,QAAQ,GAAG,EAAE;MAClB,IAAI,CAACyB,KAAK,GAAG,EAAE;IACnB;EAAC;IAAA;IAAA,KACD,eAAc;MACV,OAAO,CAAC,CAAC,IAAI,CAAC/B,OAAO;IACzB;EAAC;IAAA;IAAA,KACD,eAAc;MACV,OAAO,IAAI,CAAC+C,QAAQ;IACxB;EAAC;IAAA;IAAA;MAAA,iFACD;QAAA;UAAA;YAAA;cAAA;cAAA,OACU,IAAI,CAAC6B,cAAc,EAAE;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CAC9B;MAAA;QAAA;MAAA;MAAA;IAAA;IACD;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA;MAAA,iFAKA;QAAA;QAAA;UAAA;YAAA;cAAA,IACS,IAAI,CAAC9C,OAAO;gBAAA;gBAAA;cAAA;cAAA;YAAA;cAEb+C,GAAG,GAAGzH,SAAS;cAAA;cAAA,KAEF,IAAI,CAAC0H,SAAS;gBAAA;gBAAA;cAAA;cAAA;cAAA,OAAS,IAAI,CAACC,YAAY,EAAE;YAAA;cAAA;cAAA;cAAA;YAAA;cAAA,eAAG3H,SAAS;YAAA;cAA7D4H,IAAI;cAAA;cAAA,OACO,IAAI,CAAClD,OAAO,CAACmD,WAAW,CAACD,IAAI,EAAE;gBAAEE,GAAG,EAAE,IAAI,CAAC3F;cAAG,CAAC,CAAC;YAAA;cAA7D4F,IAAI;cACR,IAAIA,IAAI,EAAE;gBACNN,GAAG,GAAGM,IAAI,CAAC,CAAC,CAAC;cACjB;cAAC;cAAA;YAAA;cAAA;cAAA;cAGD,IAAI,CAACrD,OAAO,CAACsD,IAAI,CAACC,KAAK,CAAC,wDAAwD,GAC5E,IAAI,CAAC9F,EAAE,CAAC;cACZ,IAAI,IAAI,CAACuC,OAAO,CAACsD,IAAI,CAACE,OAAO,CAACrG,QAAQ,CAACsG,QAAQ,CAACC,KAAK,CAAC,EAAE;gBACpDC,OAAO,CAACJ,KAAK,cAAG;cACpB;YAAC;cAAA,MAEDR,GAAG,IAAIzH,SAAS;gBAAA;gBAAA;cAAA;cAAA;YAAA;cAEpB,IAAI,CAACkG,OAAO,GAAGuB,GAAG,CAACvB,OAAO;cAC1B,IAAI,CAACC,YAAY,GAAGsB,GAAG,CAACtB,YAAY;cACpC,IAAI,CAACE,KAAK,GAAGoB,GAAG,CAACpB,KAAK;cACtB,IAAI,CAACC,UAAU,GAAGmB,GAAG,CAACnB,UAAU;cAChC,IAAI,CAACrB,OAAO,GAAGwC,GAAG,CAACxC,OAAO;cAC1B,IAAI,CAACC,YAAY,GAAGuC,GAAG,CAACvC,YAAY;cACpC,IAAI,CAACS,QAAQ,GAAG8B,GAAG,CAAC9B,QAAQ;cAC5B,IAAI,CAACR,eAAe,GAAGsC,GAAG,CAACtC,eAAe;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA,CAC9C;MAAA;QAAA;MAAA;MAAA;IAAA;IACD;AACJ;AACA;AACA;EAHI;IAAA;IAAA,KAIA,eAAc;MACV,IAAI,CAAC,IAAI,CAACL,QAAQ,IAAI,IAAI,CAAC7B,WAAW,EAAE;QACpC,IAAI,CAAC,IAAI,CAAC4C,SAAS,EAAE;UACjB;QACJ;QACA,IAAI;UACA,IAAMyC,GAAG,GAAG,IAAI,CAACC,gBAAgB,EAAE;UACnC,IAAI,CAACC,WAAW,CAAC,IAAI,CAAC3C,SAAS,EAAEyC,GAAG,CAAC;QACzC,CAAC,CACD,OAAOG,CAAC,EAAE;UACN;QACJ;MACJ;MACA,OAAO,IAAI,CAAC3D,QAAQ;IACxB;IACA;AACJ;AACA;EAFI;IAAA;IAAA;MAAA,6EAGA;QAAA;QAAA;UAAA;YAAA;cAAA,MACQ,CAAC,IAAI,CAAC4D,OAAO,IAAI,IAAI,CAACzF,WAAW;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACd,IAAI,CAAC0E,YAAY,EAAE;YAAA;cAAhCC,IAAI;cAAA,IACLA,IAAI;gBAAA;gBAAA;cAAA;cAAA;YAAA;cAAA;cAILU,GAAG,GAAG,IAAI,CAACC,gBAAgB,EAAE;cAAC;cAAA;YAAA;cAAA;cAAA;cAAA;cAAA,OAGxB,IAAI,CAACf,cAAc,EAAE;YAAA;cAC3Bc,GAAG,GAAG,IAAI,CAACC,gBAAgB,EAAE;YAAC;cAElC,IAAI,CAACC,WAAW,CAACZ,IAAI,EAAEU,GAAG,CAAC;YAAC;cAAA,kCAEzB,IAAI,CAACxD,QAAQ;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CACvB;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA,KACD,eAAkB;MACd,IAAI,CAAC,IAAI,CAACE,aAAa,EAAE;QACrB,IAAI,IAAI,CAAC/B,WAAW,YAAY3B,KAAK,CAACiD,GAAG,CAACoE,iBAAiB,IACvD,IAAI,CAAC1F,WAAW,YAAY3B,KAAK,CAACiD,GAAG,CAACqE,mBAAmB,EAAE;UAC3D,IAAI,CAAC5D,aAAa,GAAG,IAAI,CAAC/B,WAAW,CAAC4F,IAAI,CACrClC,GAAG,CAAC,UAACmC,CAAC;YAAA,OAAKA,CAAC,CAACJ,OAAO,CAACK,MAAM;UAAA,EAAC,CAC5BC,MAAM,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;YACxB,OAAOD,CAAC,GAAGC,CAAC;UAChB,CAAC,EAAE,CAAC,CAAC;QACT,CAAC,MACI;UACD,IAAI,CAAClE,aAAa,GAAG,CAAC;QAC1B;MACJ;MACA,OAAO,IAAI,CAACA,aAAa;IAC7B;EAAC;IAAA;IAAA,KACD,eAAW;MACP,IAAI,CAAC,IAAI,CAACJ,KAAK,EAAE;QACb,IAAM5B,KAAK,GAAG,IAAI,CAACmG,KAAK,IAAI,IAAI,CAACC,QAAQ;QACzC,IAAIpG,KAAK,EAAE;UACP,IAAI,CAAC4B,KAAK,GAAG,IAAIlD,MAAM,CAAC2H,IAAI,CAACrG,KAAK,CAAC;QACvC;MACJ;MACA,OAAO,IAAI,CAAC4B,KAAK;IACrB;EAAC;IAAA;IAAA,KACD,eAAY;MACR,IAAI,IAAI,CAAC5B,KAAK,YAAY1B,KAAK,CAACiD,GAAG,CAAC+E,iBAAiB,EAAE;QACnD,IAAI,IAAI,CAACtG,KAAK,CAACmG,KAAK,YAAY7H,KAAK,CAACiD,GAAG,CAACgF,KAAK,EAC3C,OAAO,IAAI,CAACvG,KAAK,CAACmG,KAAK;MAC/B,CAAC,MACI,IAAI,IAAI,CAACrF,MAAM,YAAYxC,KAAK,CAACiD,GAAG,CAACiF,0BAA0B,EAAE;QAClE,OAAO,IAAI,CAAC1F,MAAM,CAACqF,KAAK;MAC5B,CAAC,MACI;QACD,OAAO,IAAI,CAACM,UAAU,IAAI,IAAI,CAACA,UAAU,CAACN,KAAK,YAAY7H,KAAK,CAACiD,GAAG,CAACgF,KAAK,GACpE,IAAI,CAACE,UAAU,CAACN,KAAK,GACrBnJ,SAAS;MACnB;MACA,OAAOA,SAAS;IACpB;EAAC;IAAA;IAAA,KACD,eAAe;MACX,IAAI,IAAI,CAACgD,KAAK,YAAY1B,KAAK,CAACiD,GAAG,CAACmF,oBAAoB,EAAE;QACtD,IAAI,IAAI,CAAC1G,KAAK,CAACoG,QAAQ,YAAY9H,KAAK,CAACiD,GAAG,CAACoF,QAAQ,EACjD,OAAO,IAAI,CAAC3G,KAAK,CAACoG,QAAQ;MAClC,CAAC,MACI;QACD,IAAMQ,GAAG,GAAG,IAAI,CAACH,UAAU;QAC3B,OAAOG,GAAG,IAAIA,GAAG,CAACR,QAAQ,YAAY9H,KAAK,CAACiD,GAAG,CAACoF,QAAQ,GAClDC,GAAG,CAACR,QAAQ,GACZpJ,SAAS;MACnB;MACA,OAAOA,SAAS;IACpB;EAAC;IAAA;IAAA,KACD,eAAiB;MACb,IAAI,IAAI,CAACgD,KAAK,YAAY1B,KAAK,CAACiD,GAAG,CAACsF,mBAAmB,EAAE;QACrD,IAAI,IAAI,CAAC7G,KAAK,CAAC8G,OAAO,YAAYxI,KAAK,CAACiD,GAAG,CAACwF,OAAO,EAC/C,OAAO,IAAI,CAAC/G,KAAK,CAAC8G,OAAO;MACjC;IACJ;EAAC;IAAA;IAAA,KACD,eAAY;MACR,OAAO,IAAI,CAACE,oBAAoB,CAAC1I,KAAK,CAACiD,GAAG,CAAC0F,sBAAsB,EAAE,UAACC,IAAI;QAAA,OAAK,CAACA,IAAI,CAACC,KAAK;MAAA,EAAC;IAC7F;EAAC;IAAA;IAAA,KACD,eAAY;MACR,OAAO,IAAI,CAACH,oBAAoB,CAAC1I,KAAK,CAACiD,GAAG,CAAC0F,sBAAsB,EAAE,UAACC,IAAI;QAAA,OAAK,CAAC,CAACA,IAAI,CAACC,KAAK;MAAA,EAAC;IAC9F;EAAC;IAAA;IAAA,KACD,eAAY;MACR,OAAO,IAAI,CAACH,oBAAoB,CAAC1I,KAAK,CAACiD,GAAG,CAAC6F,sBAAsB,CAAC;IACtE;EAAC;IAAA;IAAA,KACD,eAAgB;MACZ,OAAO,IAAI,CAACJ,oBAAoB,CAAC1I,KAAK,CAACiD,GAAG,CAAC6F,sBAAsB,EAAE,UAACF,IAAI;QAAA,OAAK,CAAC,CAACA,IAAI,CAACG,YAAY;MAAA,EAAC;IACrG;EAAC;IAAA;IAAA,KACD,eAAU;MACN,OAAO,IAAI,CAACL,oBAAoB,CAAC1I,KAAK,CAACiD,GAAG,CAAC+F,yBAAyB,CAAC;IACzE;EAAC;IAAA;IAAA,KACD,eAAc;MACV,OAAO,IAAI,CAACN,oBAAoB,CAAC1I,KAAK,CAACiD,GAAG,CAACgG,wBAAwB,CAAC;IACxE;EAAC;IAAA;IAAA,KACD,eAAc;MACV,IAAI,IAAI,CAACvH,KAAK,YAAY1B,KAAK,CAACiD,GAAG,CAACiG,mBAAmB,EAAE;QACrD,OAAO,IAAI,CAACxH,KAAK;MACrB;IACJ;EAAC;IAAA;IAAA,KACD,eAAW;MACP,IAAI,IAAI,CAACA,KAAK,YAAY1B,KAAK,CAACiD,GAAG,CAACkG,gBAAgB,EAAE;QAClD,OAAO,IAAI,CAACzH,KAAK,CAAC0H,IAAI;MAC1B;IACJ;EAAC;IAAA;IAAA,KACD,eAAU;MACN,IAAI,IAAI,CAAC1H,KAAK,YAAY1B,KAAK,CAACiD,GAAG,CAACoG,eAAe,IAC/C,IAAI,CAAC3H,KAAK,YAAY1B,KAAK,CAACiD,GAAG,CAACqG,mBAAmB,IACnD,IAAI,CAAC5H,KAAK,YAAY1B,KAAK,CAACiD,GAAG,CAACsG,iBAAiB,EAAE;QACnD,OAAO,IAAI,CAAC7H,KAAK,CAAC8H,GAAG;MACzB;IACJ;EAAC;IAAA;IAAA,KACD,eAAc;MACV,IAAI,IAAI,CAAC9H,KAAK,YAAY1B,KAAK,CAACiD,GAAG,CAACwG,mBAAmB,EAAE;QACrD,OAAO,IAAI,CAAC/H,KAAK;MACrB;IACJ;EAAC;IAAA;IAAA,KACD,eAAW;MACP,IAAI,IAAI,CAACA,KAAK,YAAY1B,KAAK,CAACiD,GAAG,CAACyG,gBAAgB,EAAE;QAClD,OAAO,IAAI,CAAChI,KAAK;MACrB;IACJ;EAAC;IAAA;IAAA,KACD,eAAY;MACR,IAAI,IAAI,CAACA,KAAK,YAAY1B,KAAK,CAACiD,GAAG,CAACsG,iBAAiB,EAAE;QACnD,OAAO,IAAI,CAAC7H,KAAK;MACrB;IACJ;EAAC;IAAA;IAAA,KACD,eAAW;MACP,IAAI,IAAI,CAACA,KAAK,YAAY1B,KAAK,CAACiD,GAAG,CAAC0G,gBAAgB,EAAE;QAClD,OAAO,IAAI,CAACjI,KAAK;MACrB;IACJ;EAAC;IAAA;IAAA,KACD,eAAqB;MACjB,OAAO,IAAI,CAACmC,eAAe;IAC/B;EAAC;IAAA;IAAA,KACD,eAAa;MACT,OAAO,IAAI,CAACF,OAAO;IACvB;EAAC;IAAA;IAAA,KACD,eAAkB;MACd,OAAO,IAAI,CAACC,YAAY;IAC5B;EAAC;IAAA;IAAA,KACD,eAAmB;MACf,IAAIgG,EAAE;MACN,OAAO,CAACA,EAAE,GAAG,IAAI,CAACtI,OAAO,MAAM,IAAI,IAAIsI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,YAAY;IACnF;EAAC;IAAA;IAAA,KACD,eAAW;MACP,IAAI,IAAI,CAACzG,OAAO,IAAI,CAAC,IAAI,CAACpC,GAAG,IAAI,IAAI,CAAC8I,SAAS,EAAE;QAC7C,OAAO,IAAI9J,KAAK,CAACiD,GAAG,CAACC,QAAQ,CAAC;UAC1BsC,MAAM,EAAE,CAAC,CAAC,EAAElF,OAAO,CAACyJ,OAAO,EAAE,IAAI,CAAC3G,OAAO;QAC7C,CAAC,CAAC;MACN;MACA,OAAO,IAAI,CAACtC,MAAM;IACtB;EAAC;IAAA;IAAA,OACD,yBAAgBkJ,GAAG,EAAE;MACjB,IAAIC,GAAG,GAAG,IAAI,CAACrI,QAAQ;MACvB,IAAI,CAACqI,GAAG,IAAIA,GAAG,CAACxC,MAAM,IAAI,CAAC,EACvB;MACJ,IAAIuC,GAAG,EAAE;QACLC,GAAG,GAAGA,GAAG,CAACC,MAAM,CAAC,UAAC9K,CAAC;UAAA,OAAKA,CAAC,YAAY4K,GAAG;QAAA,EAAC;MAC7C;MACA,IAAMG,KAAK,GAAGjK,KAAK,CAACkK,YAAY,CAAC,IAAI,CAAC7I,OAAO,IAAI,EAAE,EAAE0I,GAAG,CAAC;MACzD,IAAMI,GAAG,GAAG,SAANA,GAAG,CAAI9C,IAAI;QAAA,OAAKA,IAAI,CAAC,CAAC,CAAC,CAAClC,GAAG,CAAC,UAACiF,CAAC,EAAEC,CAAC;UAAA,OAAKhD,IAAI,CAAClC,GAAG,CAAC,UAACmF,GAAG;YAAA,OAAKA,GAAG,CAACD,CAAC,CAAC;UAAA,EAAC;QAAA,EAAC;MAAA;MACtE,OAAOF,GAAG,CAAC,CAACJ,GAAG,EAAEE,KAAK,CAAC,CAAC;IAC5B;EAAC;IAAA;IAAA;MAAA,kFACD;QAAA;UAAA;YAAA;cAAA,MACQ,CAAC,IAAI,CAAC5G,aAAa,IAAI,IAAI,CAACH,OAAO;gBAAA;gBAAA;cAAA;cAAA,IAC9B,IAAI,CAAC9B,OAAO;gBAAA;gBAAA;cAAA;cAAA,kCACN5C,SAAS;YAAA;cAAA,eAGQ,IAAI,CAAC0E,OAAO;cAAA,KAAa,IAAI,CAACgD,SAAS;gBAAA;gBAAA;cAAA;cAAA;cAAA,OAAS,IAAI,CAACC,YAAY,EAAE;YAAA;cAAA;cAAA;cAAA;YAAA;cAAA,eAAG3H,SAAS;YAAA;cAAA;cAAA,eAAE;gBACzG8H,GAAG,EAAE,IAAIxG,KAAK,CAACiD,GAAG,CAACwH,mBAAmB,CAAC;kBAAE5J,EAAE,EAAE,IAAI,CAACA;gBAAG,CAAC;cAC1D,CAAC;cAAA;cAAA,oBAFwC0F,WAAW;YAAA;cAApD,IAAI,CAAChD,aAAa,kBAEd,CAAC;cAAA,IACA,IAAI,CAACA,aAAa;gBAAA;gBAAA;cAAA;cAAA;cAAA,OAKS,IAAI,CAACH,OAAO,CAACmD,WAAW,CAAC,IAAI,CAACH,SAAS,GAAG,IAAI,CAACpB,UAAU,GAAGtG,SAAS,EAAE;gBAC/F8H,GAAG,EAAE,IAAI,CAACqD;cACd,CAAC,CAAC;YAAA;cAFF,IAAI,CAACtG,aAAa,kBAEd,CAAC;YAAA;cAAA,kCAGN,IAAI,CAACA,aAAa;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CAC5B;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,0EACD,kBAAcmH,MAAM;QAAA;UAAA;YAAA;cAAA,KACZ,IAAI,CAACtH,OAAO;gBAAA;gBAAA;cAAA;cAAA,eACL,IAAI,CAACA,OAAO;cAAA;cAAA,OAAoB,IAAI,CAACiD,YAAY,EAAE;YAAA;cAAA;cAAA,eAAGqE,MAAM;cAAA,+CAA/CC,WAAW;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CAEtC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,wEACD,kBAAYD,MAAM;QAAA;UAAA;YAAA;cAAA,KACV,IAAI,CAACtH,OAAO;gBAAA;gBAAA;cAAA;cACZsH,MAAM,CAACpJ,OAAO,GAAG,IAAI,CAACT,EAAE;cAAC,eAClB,IAAI,CAACuC,OAAO;cAAA;cAAA,OAAoB,IAAI,CAACiD,YAAY,EAAE;YAAA;cAAA;cAAA,eAAGqE,MAAM;cAAA,+CAA/CC,WAAW;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CAEtC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,4EACD,kBAAgBC,MAAM;QAAA;QAAA;UAAA;YAAA;cAAA,KACd,IAAI,CAACxH,OAAO;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACG,IAAI,CAACA,OAAO,CAACyH,cAAc,CAACD,MAAM,CAAC;YAAA;cAAlDA,MAAM;cAAA,eAEQ,CAAC,IAAI,CAAC/J,EAAE,CAAC;cAAA;cAAA,OACF,IAAI,CAACwF,YAAY,EAAE;YAAA;cAAA;cAFlCqE,MAAM;gBACRI,QAAQ;gBACRC,QAAQ;cAAA;cAAA,kCAEL,IAAI,CAAC3H,OAAO,CAAC4H,eAAe,CAACJ,MAAM,EAAEF,MAAM,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CAE1D;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,uEACD,kBAAWA,MAAM;QAAA;QAAA;UAAA;YAAA;cACPO,KAAK,GAAGP,MAAM;cAAA,MAChB,IAAI,CAAClJ,OAAO,IAAI,CAAC,IAAI,CAACR,GAAG,IAAI,CAAC,IAAI,CAACoC,OAAO;gBAAA;gBAAA;cAAA;cAAA,kCACnC1E,SAAS;YAAA;cACpB,IAAIuM,KAAK,CAACC,WAAW,IAAIxM,SAAS,EAAE;gBAChCuM,KAAK,CAACC,WAAW,GAAG,CAAC,CAAC,IAAI,CAAC/C,UAAU;cACzC;cACA,IAAI8C,KAAK,CAAC7D,OAAO,IAAI1I,SAAS,EAAE;gBAC5BuM,KAAK,CAAC7D,OAAO,GAAG,IAAI,CAACzF,WAAW;cACpC;cACAsJ,KAAK,CAAC1J,OAAO,GAAG,IAAI,CAACV,EAAE;cAAC,eACjB,IAAI,CAACuC,OAAO;cAAA;cAAA,OAAoB,IAAI,CAACiD,YAAY,EAAE;YAAA;cAAA;cAAA,eAAG4E,KAAK;cAAA,+CAA9CE,WAAW;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CAClC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,0EACD;QAAA;UAAA;UAAA;QAAA;UAAA;YAAA;cAAA,mEAA0B;gBAAEC,MAAM,EAAE;cAAM,CAAC,EAA5BA,MAAM,SAANA,MAAM;cAAA,KACb,IAAI,CAAChI,OAAO;gBAAA;gBAAA;cAAA;cAAA,eACL,IAAI,CAACA,OAAO;cAAA;cAAA,OAAsB,IAAI,CAACiD,YAAY,EAAE;YAAA;cAAA;cAAA,eAAE,CAAC,IAAI,CAACxF,EAAE,CAAC;cAAA,eAAE;gBACrEuK,MAAM,EAANA;cACJ,CAAC;cAAA,+CAFmBC,cAAc;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CAIzC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,sEACD,mBAAUX,MAAM;QAAA;QAAA;UAAA;YAAA;cAAA,KACR,IAAI,CAACtH,OAAO;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACS,IAAI,CAACiD,YAAY,EAAE;YAAA;cAAlCuE,MAAM;cAAA,MACRA,MAAM,KAAKlM,SAAS;gBAAA;gBAAA;cAAA;cAAA,MACdoE,KAAK,CAAC,qDAAqD,CAAC;YAAA;cAAA,mCAE/D,IAAI,CAACM,OAAO,CAACkI,UAAU,CAACV,MAAM,EAAE,IAAI,CAAC/J,EAAE,EAAE6J,MAAM,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CAE9D;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,wEACD,mBAAYA,MAAM;QAAA;QAAA;UAAA;YAAA;cAAA,KACV,IAAI,CAACtH,OAAO;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACS,IAAI,CAACiD,YAAY,EAAE;YAAA;cAAlCuE,MAAM;cAAA,MACRA,MAAM,KAAKlM,SAAS;gBAAA;gBAAA;cAAA;cAAA,MACdoE,KAAK,CAAC,uDAAuD,CAAC;YAAA;cAAA,mCAEjE,IAAI,CAACM,OAAO,CAACmI,YAAY,CAACX,MAAM,EAAE,IAAI,CAAC/J,EAAE,EAAE6J,MAAM,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CAEhE;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,gFACD,mBAAoBA,MAAM;QAAA;UAAA;YAAA;cAAA,KAElB,IAAI,CAACtH,OAAO;gBAAA;gBAAA;cAAA;cAAA,mCACL,IAAI,CAACA,OAAO,CAACoI,aAAa,CAAC,IAAI,EAAEd,MAAM,IAAI,CAAC,CAAC,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CAC5D;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,6EACD;QAAA;QAAA;UAAA;YAAA;cAAA,KACQ,IAAI,CAACtH,OAAO;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACS,IAAI,CAACiD,YAAY,EAAE;YAAA;cAAlCuE,MAAM;cAAA,MACRA,MAAM,KAAKlM,SAAS;gBAAA;gBAAA;cAAA;cAAA,MACdoE,KAAK,qCAA8B,IAAI,CAACjC,EAAE,4CAAyC;YAAA;cAAA,mCAEtF,IAAI,CAACuC,OAAO,CAACqI,UAAU,CAACb,MAAM,EAAE,IAAI,CAAC/J,EAAE,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CAEtD;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,wEACD;QAAA,gGAmEa6K,UAAU;QAAA;UAAA;YAAA;cAAVA,UAAU,wBAACC,IAAI,EAAE;gBACtB,IAAI,CAACA,IAAI,CAAClI,YAAY,IAAI,CAACkI,IAAI,CAACnI,QAAQ,EAAE;kBACtC;gBACJ;gBACA,IAAIoI,KAAK,CAACC,OAAO,CAACvG,CAAC,CAAC,EAAE;kBAClBA,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC;gBACZ;gBACA,IAAIwG,IAAI,IAAIpN,SAAS,EAAE;kBACnB,IAAI,OAAOoN,IAAI,IAAI,UAAU,EAAE;oBAAA,4CACNH,IAAI,CAAClI,YAAY;sBAAA;oBAAA;sBAAtC,uDAAwC;wBAAA,IAA7BsI,QAAM;wBACb,IAAID,IAAI,CAACC,QAAM,CAACD,IAAI,CAAC,EAAE;0BACnB,OAAOC,QAAM;wBACjB;sBACJ;oBAAC;sBAAA;oBAAA;sBAAA;oBAAA;kBACL,CAAC,MACI;oBAAA,4CACoBJ,IAAI,CAAClI,YAAY;sBAAA;oBAAA;sBAAtC,uDAAwC;wBAAA,IAA7BsI,QAAM;wBACb,IAAIA,QAAM,CAACD,IAAI,IAAIA,IAAI,EAAE;0BACrB,OAAOC,QAAM;wBACjB;sBACJ;oBAAC;sBAAA;oBAAA;sBAAA;oBAAA;kBACL;kBACA;gBACJ;gBACA,IAAI7B,MAAM,IAAIxL,SAAS,EAAE;kBAAA,4CACAiN,IAAI,CAAClI,YAAY;oBAAA;kBAAA;oBAAtC,uDAAwC;sBAAA,IAA7BsI,QAAM;sBACb,IAAI7B,MAAM,CAAC6B,QAAM,CAAC,EAAE;wBAChB,OAAOA,QAAM;sBACjB;oBACJ;kBAAC;oBAAA;kBAAA;oBAAA;kBAAA;kBACD;gBACJ;gBACA,IAAIzG,CAAC,IAAI5G,SAAS,EAAE;kBAChB4G,CAAC,GAAG,CAAC;gBACT;gBACA,IAAI0G,CAAC,IAAItN,SAAS,EAAE;kBAChB,OAAOiN,IAAI,CAAClI,YAAY,CAAC6B,CAAC,CAAC;gBAC/B,CAAC,MACI;kBACD,OAAOqG,IAAI,CAACnI,QAAQ,CAAC8B,CAAC,CAAC,CAAC0G,CAAC,CAAC;gBAC9B;cACJ,CAAC;cA5GS1G,CAAC,SAADA,CAAC,EAAE0G,CAAC,SAADA,CAAC,EAAEF,IAAI,SAAJA,IAAI,EAAE5B,MAAM,SAANA,MAAM,EAAE+B,IAAI,SAAJA,IAAI,EAAEC,UAAU,SAAVA,UAAU,EAAEC,QAAQ,SAARA,QAAQ,EAAEC,QAAQ,SAARA,QAAQ;cAAA,IAC7D,IAAI,CAAC9H,MAAM;gBAAA;gBAAA;cAAA;cAAA;YAAA;cAAA,KAGZ2H,IAAI;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACe,IAAI,CAAC5F,YAAY,EAAE;YAAA;cAAhCC,IAAI;cAAA,IACLA,IAAI;gBAAA;gBAAA;cAAA;cAAA;YAAA;cAGHyF,OAAM,GAAG,IAAI/L,KAAK,CAACiD,GAAG,CAACoJ,sBAAsB,CAAC;gBAChDP,IAAI,EAAE,EAAE;gBACRG,IAAI,EAAEA;cACV,CAAC,CAAC;cAAA;cAAA,OACW,IAAIzL,eAAe,CAAC8L,aAAa,CAAC,IAAI,CAAChI,MAAM,EAAEyH,OAAM,EAAEzF,IAAI,EAAE5H,SAAS,EAAE,IAAI,CAACmC,EAAE,CAAC,CAAC0L,KAAK,CAAC;gBAChGL,UAAU,EAAEA,UAAU;gBACtBC,QAAQ,EAAEA,QAAQ;gBAClBC,QAAQ,EAAEA;cACd,CAAC,CAAC;YAAA;cAAA;YAAA;cAAA,KAEF,IAAI,CAACI,IAAI;gBAAA;gBAAA;cAAA;cACAC,QAAQ,GAAjB,SAASA,QAAQ,CAACC,OAAO,EAAE;gBACvB,IAAIpH,CAAC,IAAI5G,SAAS,EAAE;kBAChB,IAAIkN,KAAK,CAACC,OAAO,CAACvG,CAAC,CAAC,EAAE;oBAClB,IAAMqH,QAAQ,GAAG,EAAE;oBACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtH,CAAC,CAACmC,MAAM,EAAEmF,CAAC,EAAE,EAAE;sBAC/BD,QAAQ,CAACE,IAAI,CAACH,OAAO,CAACE,CAAC,CAAC,CAACE,MAAM,CAAC;oBACpC;oBACA,OAAOH,QAAQ;kBACnB;kBACA,OAAO,CAACD,OAAO,CAACpH,CAAC,CAAC,CAACwH,MAAM,CAAC;gBAC9B;gBACA,IAAIhB,IAAI,IAAIpN,SAAS,EAAE;kBACnB,IAAI,OAAOoN,IAAI,IAAI,UAAU,EAAE;oBAAA,2CACNY,OAAO;sBAAA;oBAAA;sBAA5B,oDAA8B;wBAAA,IAAnBK,MAAM;wBACb,IAAIjB,IAAI,CAACiB,MAAM,CAACjB,IAAI,CAAC,EAAE;0BACnB,OAAO,CAACiB,MAAM,CAACD,MAAM,CAAC;wBAC1B;sBACJ;oBAAC;sBAAA;oBAAA;sBAAA;oBAAA;kBACL,CAAC,MACI;oBAAA,4CACoBJ,OAAO;sBAAA;oBAAA;sBAA5B,uDAA8B;wBAAA,IAAnBK,OAAM;wBACb,IAAIA,OAAM,CAACjB,IAAI,IAAIA,IAAI,EAAE;0BACrB,OAAO,CAACiB,OAAM,CAACD,MAAM,CAAC;wBAC1B;sBACJ;oBAAC;sBAAA;oBAAA;sBAAA;oBAAA;kBACL;kBACA;gBACJ;gBACA,IAAI5C,MAAM,IAAIxL,SAAS,EAAE;kBAAA,4CACAgO,OAAO;oBAAA;kBAAA;oBAA5B,uDAA8B;sBAAA,IAAnBK,QAAM;sBACb,IAAI7C,MAAM,CAAC6C,QAAM,CAAC,EAAE;wBAChB,OAAO,CAACA,QAAM,CAACD,MAAM,CAAC;sBAC1B;oBACJ;kBAAC;oBAAA;kBAAA;oBAAA;kBAAA;kBACD;gBACJ;cACJ,CAAC;cACKE,OAAO,GAAGP,QAAQ,CAAC,IAAI,CAACD,IAAI,CAACA,IAAI,CAACE,OAAO,CAAC,IAAI,EAAE;cAAA;cAAA,OACzC,IAAI,CAACpI,MAAM,CAAC2I,MAAM,CAAC,IAAIjN,KAAK,CAACiD,GAAG,CAAC6H,QAAQ,CAACoC,QAAQ,CAAC;gBAC5DC,IAAI,EAAE,IAAI,CAAC5I,SAAS;gBACpB6I,KAAK,EAAE,IAAI,CAACvM,EAAE;gBACdmM,OAAO,EAAEA;cACb,CAAC,CAAC,CAAC;YAAA;cAAA;YAAA;cAAA;cAAA,OAEK,IAAI,CAACK,UAAU,EAAE;YAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;YAAA;cA6CvBtB,MAAM,GAAGL,UAAU,CAAC,IAAI,CAAC;cAAA,KAC3BK,MAAM;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACOA,MAAM,CAACQ,KAAK,CAAC;gBACtBL,UAAU,EAAEA,UAAU;gBACtBC,QAAQ,EAAEA,QAAQ;gBAClBC,QAAQ,EAAEA;cACd,CAAC,CAAC;YAAA;cAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CAET;MAAA;QAAA;MAAA;MAAA;IAAA;IACD;AACJ;AACA;EAFI;IAAA;IAAA,OAGA,qBAAY9F,IAAI,EAAEU,GAAG,EAAE;MACnB,IAAI,IAAI,CAAC1C,MAAM,KACV,IAAI,CAAC3C,WAAW,YAAY3B,KAAK,CAACiD,GAAG,CAACoE,iBAAiB,IACpD,IAAI,CAAC1F,WAAW,YAAY3B,KAAK,CAACiD,GAAG,CAACqE,mBAAmB,CAAC,EAAE;QAChE,IAAI,CAAC9D,QAAQ,GAAG,EAAE;QAClB,IAAI,CAACC,YAAY,GAAG,EAAE;QAAC,4CACL,IAAI,CAAC9B,WAAW,CAAC4F,IAAI;UAAA;QAAA;UAAvC,uDAAyC;YAAA,IAA9BiD,GAAG;YACV,IAAM8C,GAAG,GAAG,EAAE;YAAC,4CACM9C,GAAG,CAACpD,OAAO;cAAA;YAAA;cAAhC,uDAAkC;gBAAA,IAAvB2E,MAAM;gBACb,IAAMwB,GAAG,GAAG,IAAI/M,eAAe,CAAC8L,aAAa,CAAC,IAAI,CAAChI,MAAM,EAAEyH,MAAM,EAAEzF,IAAI,EAAEU,GAAG,EAAE,IAAI,CAACnG,EAAE,CAAC;gBACtFyM,GAAG,CAACT,IAAI,CAACU,GAAG,CAAC;gBACb,IAAI,CAAC9J,YAAY,CAACoJ,IAAI,CAACU,GAAG,CAAC;cAC/B;YAAC;cAAA;YAAA;cAAA;YAAA;YACD,IAAI,CAAC/J,QAAQ,CAACqJ,IAAI,CAACS,GAAG,CAAC;UAC3B;QAAC;UAAA;QAAA;UAAA;QAAA;MACL;IACJ;IACA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA;IAAA,OAOA,4BAAmB;MACf,IAAI,CAAC,IAAI,CAAChJ,MAAM,IAAI,IAAI,CAAC3C,WAAW,IAAIjD,SAAS,EAAE;QAC/C;MACJ;MACA,IAAI,EAAE,IAAI,CAACiD,WAAW,YAAY3B,KAAK,CAACiD,GAAG,CAACoE,iBAAiB,IACzD,IAAI,CAAC1F,WAAW,YAAY3B,KAAK,CAACiD,GAAG,CAACqE,mBAAmB,CAAC,EAAE;QAC5D;MACJ;MAAC,4CACiB,IAAI,CAAC3F,WAAW,CAAC4F,IAAI;QAAA;MAAA;QAAvC,uDAAyC;UAAA,IAA9BiD,GAAG;UAAA,6CACWA,GAAG,CAACpD,OAAO;YAAA;UAAA;YAAhC,0DAAkC;cAAA,IAAvB2E,MAAM;cACb,IAAIA,MAAM,YAAY/L,KAAK,CAACiD,GAAG,CAACuK,0BAA0B,EAAE;gBACxD,IAAIzB,MAAM,CAAC0B,QAAQ,IAAI,CAAC,IAAI,CAAChM,QAAQ,EAAE;kBACnC,IAAMuF,GAAG,GAAG,IAAI,CAACnC,YAAY;kBAC7B,IAAI,CAACmC,GAAG,EACJ,MAAM,IAAIlE,KAAK,CAAC,iBAAiB,CAAC;kBACtC,OAAOkE,GAAG;gBACd,CAAC,MACI;kBACD,IAAMiD,GAAG,GAAG,IAAI,CAAC3F,MAAM,CAACG,YAAY,CAACxF,GAAG,CAAC,IAAI,CAACwC,QAAQ,CAAC;kBACvD,IAAI,CAACwI,GAAG,EACJ,MAAM,IAAInH,KAAK,CAAC,iBAAiB,CAAC;kBACtC,OAAOmH,GAAG;gBACd;cACJ;YACJ;UAAC;YAAA;UAAA;YAAA;UAAA;QACL;MAAC;QAAA;MAAA;QAAA;MAAA;IACL;IACA;EAAA;IAAA;IAAA,OACA,8BAAqByD,IAAI,EAAEC,SAAS,EAAE;MAClC,IAAMC,GAAG,GAAG,IAAI,CAAC9F,QAAQ;MACzB,IAAI8F,GAAG,EAAE;QAAA,6CACcA,GAAG,CAACC,UAAU;UAAA;QAAA;UAAjC,0DAAmC;YAAA,IAAxBjF,IAAI;YACX,IAAIA,IAAI,YAAY8E,IAAI,EAAE;cACtB,IAAIC,SAAS,IAAIjP,SAAS,IACrB,OAAOiP,SAAS,IAAI,UAAU,IAAIA,SAAS,CAAC/E,IAAI,CAAE,EAAE;gBACrD,OAAOgF,GAAG;cACd;cACA,OAAOlP,SAAS;YACpB;UACJ;QAAC;UAAA;QAAA;UAAA;QAAA;MACL;IACJ;EAAC;EAAA;AAAA,EAjpBuBoB,cAAc,CAACoE,YAAY,EAKlDzD,SAAS,CAACqN,OAAO,CAACC,MAAM;AA8oB7BnO,OAAO,CAACC,aAAa,GAAGA,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}