{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Factorizator = void 0;\nvar big_integer_1 = __importDefault(require(\"big-integer\"));\nvar Helpers_1 = require(\"../Helpers\");\nvar Factorizator = /*#__PURE__*/function () {\n  function Factorizator() {\n    _classCallCheck(this, Factorizator);\n  }\n  _createClass(Factorizator, null, [{\n    key: \"gcd\",\n    value:\n    /**\r\n     * Calculates the greatest common divisor\r\n     * @param a {BigInteger}\r\n     * @param b {BigInteger}\r\n     * @returns {BigInteger}\r\n     */\n    function gcd(a, b) {\n      while (b.neq(big_integer_1.default.zero)) {\n        var temp = b;\n        b = a.remainder(b);\n        a = temp;\n      }\n      return a;\n    }\n    /**\r\n     * Factorizes the given number and returns both the divisor and the number divided by the divisor\r\n     * @param pq {BigInteger}\r\n     * @returns {{p: *, q: *}}\r\n     */\n  }, {\n    key: \"factorize\",\n    value: function factorize(pq) {\n      if (pq.remainder(2).equals(big_integer_1.default.zero)) {\n        return {\n          p: (0, big_integer_1.default)(2),\n          q: pq.divide((0, big_integer_1.default)(2))\n        };\n      }\n      var y = big_integer_1.default.randBetween((0, big_integer_1.default)(1), pq.minus(1));\n      var c = big_integer_1.default.randBetween((0, big_integer_1.default)(1), pq.minus(1));\n      var m = big_integer_1.default.randBetween((0, big_integer_1.default)(1), pq.minus(1));\n      var g = big_integer_1.default.one;\n      var r = big_integer_1.default.one;\n      var q = big_integer_1.default.one;\n      var x = big_integer_1.default.zero;\n      var ys = big_integer_1.default.zero;\n      var k;\n      while (g.eq(big_integer_1.default.one)) {\n        x = y;\n        for (var i = 0; (0, big_integer_1.default)(i).lesser(r); i++) {\n          y = (0, Helpers_1.modExp)(y, (0, big_integer_1.default)(2), pq).add(c).remainder(pq);\n        }\n        k = big_integer_1.default.zero;\n        while (k.lesser(r) && g.eq(big_integer_1.default.one)) {\n          ys = y;\n          var condition = big_integer_1.default.min(m, r.minus(k));\n          for (var _i = 0; (0, big_integer_1.default)(_i).lesser(condition); _i++) {\n            y = (0, Helpers_1.modExp)(y, (0, big_integer_1.default)(2), pq).add(c).remainder(pq);\n            q = q.multiply(x.minus(y).abs()).remainder(pq);\n          }\n          g = Factorizator.gcd(q, pq);\n          k = k.add(m);\n        }\n        r = r.multiply(2);\n      }\n      if (g.eq(pq)) {\n        while (true) {\n          ys = (0, Helpers_1.modExp)(ys, (0, big_integer_1.default)(2), pq).add(c).remainder(pq);\n          g = Factorizator.gcd(x.minus(ys).abs(), pq);\n          if (g.greater(1)) {\n            break;\n          }\n        }\n      }\n      var p = g;\n      q = pq.divide(g);\n      return p < q ? {\n        p: p,\n        q: q\n      } : {\n        p: q,\n        q: p\n      };\n    }\n  }]);\n  return Factorizator;\n}();\nexports.Factorizator = Factorizator;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","Factorizator","big_integer_1","require","Helpers_1","a","b","neq","default","zero","temp","remainder","pq","equals","p","q","divide","y","randBetween","minus","c","m","g","one","r","x","ys","k","eq","i","lesser","modExp","add","condition","min","multiply","abs","gcd","greater"],"sources":["C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/telegram/crypto/Factorizator.js"],"sourcesContent":["\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Factorizator = void 0;\r\nconst big_integer_1 = __importDefault(require(\"big-integer\"));\r\nconst Helpers_1 = require(\"../Helpers\");\r\nclass Factorizator {\r\n    /**\r\n     * Calculates the greatest common divisor\r\n     * @param a {BigInteger}\r\n     * @param b {BigInteger}\r\n     * @returns {BigInteger}\r\n     */\r\n    static gcd(a, b) {\r\n        while (b.neq(big_integer_1.default.zero)) {\r\n            const temp = b;\r\n            b = a.remainder(b);\r\n            a = temp;\r\n        }\r\n        return a;\r\n    }\r\n    /**\r\n     * Factorizes the given number and returns both the divisor and the number divided by the divisor\r\n     * @param pq {BigInteger}\r\n     * @returns {{p: *, q: *}}\r\n     */\r\n    static factorize(pq) {\r\n        if (pq.remainder(2).equals(big_integer_1.default.zero)) {\r\n            return { p: (0, big_integer_1.default)(2), q: pq.divide((0, big_integer_1.default)(2)) };\r\n        }\r\n        let y = big_integer_1.default.randBetween((0, big_integer_1.default)(1), pq.minus(1));\r\n        const c = big_integer_1.default.randBetween((0, big_integer_1.default)(1), pq.minus(1));\r\n        const m = big_integer_1.default.randBetween((0, big_integer_1.default)(1), pq.minus(1));\r\n        let g = big_integer_1.default.one;\r\n        let r = big_integer_1.default.one;\r\n        let q = big_integer_1.default.one;\r\n        let x = big_integer_1.default.zero;\r\n        let ys = big_integer_1.default.zero;\r\n        let k;\r\n        while (g.eq(big_integer_1.default.one)) {\r\n            x = y;\r\n            for (let i = 0; (0, big_integer_1.default)(i).lesser(r); i++) {\r\n                y = (0, Helpers_1.modExp)(y, (0, big_integer_1.default)(2), pq).add(c).remainder(pq);\r\n            }\r\n            k = big_integer_1.default.zero;\r\n            while (k.lesser(r) && g.eq(big_integer_1.default.one)) {\r\n                ys = y;\r\n                const condition = big_integer_1.default.min(m, r.minus(k));\r\n                for (let i = 0; (0, big_integer_1.default)(i).lesser(condition); i++) {\r\n                    y = (0, Helpers_1.modExp)(y, (0, big_integer_1.default)(2), pq).add(c).remainder(pq);\r\n                    q = q.multiply(x.minus(y).abs()).remainder(pq);\r\n                }\r\n                g = Factorizator.gcd(q, pq);\r\n                k = k.add(m);\r\n            }\r\n            r = r.multiply(2);\r\n        }\r\n        if (g.eq(pq)) {\r\n            while (true) {\r\n                ys = (0, Helpers_1.modExp)(ys, (0, big_integer_1.default)(2), pq).add(c).remainder(pq);\r\n                g = Factorizator.gcd(x.minus(ys).abs(), pq);\r\n                if (g.greater(1)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const p = g;\r\n        q = pq.divide(g);\r\n        return p < q ? { p: p, q: q } : { p: q, q: p };\r\n    }\r\n}\r\nexports.Factorizator = Factorizator;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}