{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._authFlow = exports.signInBot = exports.signInWithPassword = exports.sendCode = exports.signInUserWithQrCode = exports.signInUser = exports.checkAuthorization = exports.start = void 0;\nvar tl_1 = require(\"../tl\");\nvar utils = __importStar(require(\"../Utils\"));\nvar Helpers_1 = require(\"../Helpers\");\nvar Password_1 = require(\"../Password\");\nvar QR_CODE_TIMEOUT = 30000;\n// region public methods\n/** @hidden */\nfunction start(_x, _x2) {\n  return _start.apply(this, arguments);\n}\nfunction _start() {\n  _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(client, authParams) {\n    var apiCredentials;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (client.connected) {\n            _context.next = 3;\n            break;\n          }\n          _context.next = 3;\n          return client.connect();\n        case 3:\n          _context.next = 5;\n          return client.checkAuthorization();\n        case 5:\n          if (!_context.sent) {\n            _context.next = 7;\n            break;\n          }\n          return _context.abrupt(\"return\");\n        case 7:\n          apiCredentials = {\n            apiId: client.apiId,\n            apiHash: client.apiHash\n          };\n          _context.next = 10;\n          return _authFlow(client, apiCredentials, authParams);\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _start.apply(this, arguments);\n}\nexports.start = start;\n/** @hidden */\nfunction checkAuthorization(_x3) {\n  return _checkAuthorization.apply(this, arguments);\n}\nfunction _checkAuthorization() {\n  _checkAuthorization = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(client) {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return client.invoke(new tl_1.Api.updates.GetState());\n        case 3:\n          return _context2.abrupt(\"return\", true);\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          return _context2.abrupt(\"return\", false);\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[0, 6]]);\n  }));\n  return _checkAuthorization.apply(this, arguments);\n}\nexports.checkAuthorization = checkAuthorization;\n/** @hidden */\nfunction signInUser(_x4, _x5, _x6) {\n  return _signInUser.apply(this, arguments);\n}\nfunction _signInUser() {\n  _signInUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(client, apiCredentials, authParams) {\n    var phoneNumber, phoneCodeHash, isCodeViaApp, sendCodeResult, shouldWeStop, phoneCode, isRegistrationRequired, termsOfService, result, _shouldWeStop, lastName, firstName, _result, _yield$client$invoke, user, _shouldWeStop2;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          isCodeViaApp = false;\n        case 1:\n          if (!1) {\n            _context3.next = 39;\n            break;\n          }\n          _context3.prev = 2;\n          if (!(typeof authParams.phoneNumber === \"function\")) {\n            _context3.next = 17;\n            break;\n          }\n          _context3.prev = 4;\n          _context3.next = 7;\n          return authParams.phoneNumber();\n        case 7:\n          phoneNumber = _context3.sent;\n          _context3.next = 15;\n          break;\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](4);\n          if (!(_context3.t0.errorMessage === \"RESTART_AUTH_WITH_QR\")) {\n            _context3.next = 14;\n            break;\n          }\n          return _context3.abrupt(\"return\", client.signInUserWithQrCode(apiCredentials, authParams));\n        case 14:\n          throw _context3.t0;\n        case 15:\n          _context3.next = 18;\n          break;\n        case 17:\n          phoneNumber = authParams.phoneNumber;\n        case 18:\n          _context3.next = 20;\n          return client.sendCode(apiCredentials, phoneNumber, authParams.forceSMS);\n        case 20:\n          sendCodeResult = _context3.sent;\n          phoneCodeHash = sendCodeResult.phoneCodeHash;\n          isCodeViaApp = sendCodeResult.isCodeViaApp;\n          if (!(typeof phoneCodeHash !== \"string\")) {\n            _context3.next = 25;\n            break;\n          }\n          throw new Error(\"Failed to retrieve phone code hash\");\n        case 25:\n          return _context3.abrupt(\"break\", 39);\n        case 28:\n          _context3.prev = 28;\n          _context3.t1 = _context3[\"catch\"](2);\n          if (!(typeof authParams.phoneNumber !== \"function\")) {\n            _context3.next = 32;\n            break;\n          }\n          throw _context3.t1;\n        case 32:\n          _context3.next = 34;\n          return authParams.onError(_context3.t1);\n        case 34:\n          shouldWeStop = _context3.sent;\n          if (!shouldWeStop) {\n            _context3.next = 37;\n            break;\n          }\n          throw new Error(\"AUTH_USER_CANCEL\");\n        case 37:\n          _context3.next = 1;\n          break;\n        case 39:\n          isRegistrationRequired = false;\n        case 40:\n          if (!1) {\n            _context3.next = 77;\n            break;\n          }\n          _context3.prev = 41;\n          _context3.prev = 42;\n          _context3.next = 45;\n          return authParams.phoneCode(isCodeViaApp);\n        case 45:\n          phoneCode = _context3.sent;\n          _context3.next = 52;\n          break;\n        case 48:\n          _context3.prev = 48;\n          _context3.t2 = _context3[\"catch\"](42);\n          if (!(_context3.t2.errorMessage === \"RESTART_AUTH\")) {\n            _context3.next = 52;\n            break;\n          }\n          return _context3.abrupt(\"return\", client.signInUser(apiCredentials, authParams));\n        case 52:\n          if (phoneCode) {\n            _context3.next = 54;\n            break;\n          }\n          throw new Error(\"Code is empty\");\n        case 54:\n          _context3.next = 56;\n          return client.invoke(new tl_1.Api.auth.SignIn({\n            phoneNumber: phoneNumber,\n            phoneCodeHash: phoneCodeHash,\n            phoneCode: phoneCode\n          }));\n        case 56:\n          result = _context3.sent;\n          if (!(result instanceof tl_1.Api.auth.AuthorizationSignUpRequired)) {\n            _context3.next = 61;\n            break;\n          }\n          isRegistrationRequired = true;\n          termsOfService = result.termsOfService;\n          return _context3.abrupt(\"break\", 77);\n        case 61:\n          return _context3.abrupt(\"return\", result.user);\n        case 64:\n          _context3.prev = 64;\n          _context3.t3 = _context3[\"catch\"](41);\n          if (!(_context3.t3.errorMessage === \"SESSION_PASSWORD_NEEDED\")) {\n            _context3.next = 70;\n            break;\n          }\n          return _context3.abrupt(\"return\", client.signInWithPassword(apiCredentials, authParams));\n        case 70:\n          _context3.next = 72;\n          return authParams.onError(_context3.t3);\n        case 72:\n          _shouldWeStop = _context3.sent;\n          if (!_shouldWeStop) {\n            _context3.next = 75;\n            break;\n          }\n          throw new Error(\"AUTH_USER_CANCEL\");\n        case 75:\n          _context3.next = 40;\n          break;\n        case 77:\n          if (!isRegistrationRequired) {\n            _context3.next = 109;\n            break;\n          }\n        case 78:\n          if (!1) {\n            _context3.next = 109;\n            break;\n          }\n          _context3.prev = 79;\n          lastName = void 0;\n          firstName = \"first name\";\n          if (!authParams.firstAndLastNames) {\n            _context3.next = 88;\n            break;\n          }\n          _context3.next = 85;\n          return authParams.firstAndLastNames();\n        case 85:\n          _result = _context3.sent;\n          firstName = _result[0];\n          lastName = _result[1];\n        case 88:\n          if (firstName) {\n            _context3.next = 90;\n            break;\n          }\n          throw new Error(\"First name is required\");\n        case 90:\n          _context3.next = 92;\n          return client.invoke(new tl_1.Api.auth.SignUp({\n            phoneNumber: phoneNumber,\n            phoneCodeHash: phoneCodeHash,\n            firstName: firstName,\n            lastName: lastName\n          }));\n        case 92:\n          _yield$client$invoke = _context3.sent;\n          user = _yield$client$invoke.user;\n          if (!termsOfService) {\n            _context3.next = 97;\n            break;\n          }\n          _context3.next = 97;\n          return client.invoke(new tl_1.Api.help.AcceptTermsOfService({\n            id: termsOfService.id\n          }));\n        case 97:\n          return _context3.abrupt(\"return\", user);\n        case 100:\n          _context3.prev = 100;\n          _context3.t4 = _context3[\"catch\"](79);\n          _context3.next = 104;\n          return authParams.onError(_context3.t4);\n        case 104:\n          _shouldWeStop2 = _context3.sent;\n          if (!_shouldWeStop2) {\n            _context3.next = 107;\n            break;\n          }\n          throw new Error(\"AUTH_USER_CANCEL\");\n        case 107:\n          _context3.next = 78;\n          break;\n        case 109:\n          _context3.next = 111;\n          return authParams.onError(new Error(\"Auth failed\"));\n        case 111:\n          return _context3.abrupt(\"return\", client.signInUser(apiCredentials, authParams));\n        case 112:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[2, 28], [4, 10], [41, 64], [42, 48], [79, 100]]);\n  }));\n  return _signInUser.apply(this, arguments);\n}\nexports.signInUser = signInUser;\n/** @hidden */\nfunction signInUserWithQrCode(_x7, _x8, _x9) {\n  return _signInUserWithQrCode.apply(this, arguments);\n}\nfunction _signInUserWithQrCode() {\n  _signInUserWithQrCode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(client, apiCredentials, authParams) {\n    var isScanningComplete, inputPromise, updatePromise, result2, migratedResult;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          isScanningComplete = false;\n          if (!(authParams.qrCode == undefined)) {\n            _context5.next = 3;\n            break;\n          }\n          throw new Error(\"qrCode callback not defined\");\n        case 3:\n          inputPromise = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n            var result, token, expires;\n            return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n              while (1) switch (_context4.prev = _context4.next) {\n                case 0:\n                  if (!1) {\n                    _context4.next = 15;\n                    break;\n                  }\n                  if (!isScanningComplete) {\n                    _context4.next = 3;\n                    break;\n                  }\n                  return _context4.abrupt(\"break\", 15);\n                case 3:\n                  _context4.next = 5;\n                  return client.invoke(new tl_1.Api.auth.ExportLoginToken({\n                    apiId: Number(apiCredentials.apiId),\n                    apiHash: apiCredentials.apiHash,\n                    exceptIds: []\n                  }));\n                case 5:\n                  result = _context4.sent;\n                  if (result instanceof tl_1.Api.auth.LoginToken) {\n                    _context4.next = 8;\n                    break;\n                  }\n                  throw new Error(\"Unexpected\");\n                case 8:\n                  token = result.token, expires = result.expires;\n                  _context4.next = 11;\n                  return Promise.race([authParams.qrCode({\n                    token: token,\n                    expires: expires\n                  }), (0, Helpers_1.sleep)(QR_CODE_TIMEOUT)]);\n                case 11:\n                  _context4.next = 13;\n                  return (0, Helpers_1.sleep)(QR_CODE_TIMEOUT);\n                case 13:\n                  _context4.next = 0;\n                  break;\n                case 15:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }, _callee4);\n          }))();\n          updatePromise = new Promise(function (resolve) {\n            client.addEventHandler(function (update) {\n              if (update instanceof tl_1.Api.UpdateLoginToken) {\n                resolve(undefined);\n              }\n            });\n          });\n          _context5.prev = 5;\n          _context5.next = 8;\n          return Promise.race([updatePromise, inputPromise]);\n        case 8:\n          _context5.next = 13;\n          break;\n        case 10:\n          _context5.prev = 10;\n          _context5.t0 = _context5[\"catch\"](5);\n          throw _context5.t0;\n        case 13:\n          _context5.prev = 13;\n          isScanningComplete = true;\n          return _context5.finish(13);\n        case 16:\n          _context5.prev = 16;\n          _context5.next = 19;\n          return client.invoke(new tl_1.Api.auth.ExportLoginToken({\n            apiId: Number(apiCredentials.apiId),\n            apiHash: apiCredentials.apiHash,\n            exceptIds: []\n          }));\n        case 19:\n          result2 = _context5.sent;\n          if (!(result2 instanceof tl_1.Api.auth.LoginTokenSuccess && result2.authorization instanceof tl_1.Api.auth.Authorization)) {\n            _context5.next = 24;\n            break;\n          }\n          return _context5.abrupt(\"return\", result2.authorization.user);\n        case 24:\n          if (!(result2 instanceof tl_1.Api.auth.LoginTokenMigrateTo)) {\n            _context5.next = 38;\n            break;\n          }\n          _context5.next = 27;\n          return client._switchDC(result2.dcId);\n        case 27:\n          _context5.next = 29;\n          return client.invoke(new tl_1.Api.auth.ImportLoginToken({\n            token: result2.token\n          }));\n        case 29:\n          migratedResult = _context5.sent;\n          if (!(migratedResult instanceof tl_1.Api.auth.LoginTokenSuccess && migratedResult.authorization instanceof tl_1.Api.auth.Authorization)) {\n            _context5.next = 34;\n            break;\n          }\n          return _context5.abrupt(\"return\", migratedResult.authorization.user);\n        case 34:\n          client._log.error(\"Received unknown result while scanning QR \".concat(result2.className));\n          throw new Error(\"Received unknown result while scanning QR \".concat(result2.className));\n        case 36:\n          _context5.next = 40;\n          break;\n        case 38:\n          client._log.error(\"Received unknown result while scanning QR \".concat(result2.className));\n          throw new Error(\"Received unknown result while scanning QR \".concat(result2.className));\n        case 40:\n          _context5.next = 47;\n          break;\n        case 42:\n          _context5.prev = 42;\n          _context5.t1 = _context5[\"catch\"](16);\n          if (!(_context5.t1.errorMessage === \"SESSION_PASSWORD_NEEDED\")) {\n            _context5.next = 46;\n            break;\n          }\n          return _context5.abrupt(\"return\", client.signInWithPassword(apiCredentials, authParams));\n        case 46:\n          throw _context5.t1;\n        case 47:\n          _context5.next = 49;\n          return authParams.onError(new Error(\"QR auth failed\"));\n        case 49:\n          throw new Error(\"QR auth failed\");\n        case 50:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[5, 10, 13, 16], [16, 42]]);\n  }));\n  return _signInUserWithQrCode.apply(this, arguments);\n}\nexports.signInUserWithQrCode = signInUserWithQrCode;\n/** @hidden */\nfunction sendCode(_x10, _x11, _x12) {\n  return _sendCode.apply(this, arguments);\n}\nfunction _sendCode() {\n  _sendCode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(client, apiCredentials, phoneNumber) {\n    var forceSMS,\n      apiId,\n      apiHash,\n      sendResult,\n      resendResult,\n      _args6 = arguments;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          forceSMS = _args6.length > 3 && _args6[3] !== undefined ? _args6[3] : false;\n          _context6.prev = 1;\n          apiId = apiCredentials.apiId, apiHash = apiCredentials.apiHash;\n          _context6.next = 5;\n          return client.invoke(new tl_1.Api.auth.SendCode({\n            phoneNumber: phoneNumber,\n            apiId: apiId,\n            apiHash: apiHash,\n            settings: new tl_1.Api.CodeSettings({})\n          }));\n        case 5:\n          sendResult = _context6.sent;\n          if (!(!forceSMS || sendResult.type instanceof tl_1.Api.auth.SentCodeTypeSms)) {\n            _context6.next = 8;\n            break;\n          }\n          return _context6.abrupt(\"return\", {\n            phoneCodeHash: sendResult.phoneCodeHash,\n            isCodeViaApp: sendResult.type instanceof tl_1.Api.auth.SentCodeTypeApp\n          });\n        case 8:\n          _context6.next = 10;\n          return client.invoke(new tl_1.Api.auth.ResendCode({\n            phoneNumber: phoneNumber,\n            phoneCodeHash: sendResult.phoneCodeHash\n          }));\n        case 10:\n          resendResult = _context6.sent;\n          return _context6.abrupt(\"return\", {\n            phoneCodeHash: resendResult.phoneCodeHash,\n            isCodeViaApp: resendResult.type instanceof tl_1.Api.auth.SentCodeTypeApp\n          });\n        case 14:\n          _context6.prev = 14;\n          _context6.t0 = _context6[\"catch\"](1);\n          if (!(_context6.t0.errorMessage === \"AUTH_RESTART\")) {\n            _context6.next = 20;\n            break;\n          }\n          return _context6.abrupt(\"return\", client.sendCode(apiCredentials, phoneNumber, forceSMS));\n        case 20:\n          throw _context6.t0;\n        case 21:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6, null, [[1, 14]]);\n  }));\n  return _sendCode.apply(this, arguments);\n}\nexports.sendCode = sendCode;\n/** @hidden */\nfunction signInWithPassword(_x13, _x14, _x15) {\n  return _signInWithPassword.apply(this, arguments);\n}\nfunction _signInWithPassword() {\n  _signInWithPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(client, apiCredentials, authParams) {\n    var emptyPassword, passwordSrpResult, password, passwordSrpCheck, _yield$client$invoke2, user, shouldWeStop;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          emptyPassword = false;\n        case 1:\n          if (!1) {\n            _context7.next = 33;\n            break;\n          }\n          _context7.prev = 2;\n          _context7.next = 5;\n          return client.invoke(new tl_1.Api.account.GetPassword());\n        case 5:\n          passwordSrpResult = _context7.sent;\n          if (authParams.password) {\n            _context7.next = 9;\n            break;\n          }\n          emptyPassword = true;\n          return _context7.abrupt(\"break\", 33);\n        case 9:\n          _context7.next = 11;\n          return authParams.password(passwordSrpResult.hint);\n        case 11:\n          password = _context7.sent;\n          if (password) {\n            _context7.next = 14;\n            break;\n          }\n          throw new Error(\"Password is empty\");\n        case 14:\n          _context7.next = 16;\n          return (0, Password_1.computeCheck)(passwordSrpResult, password);\n        case 16:\n          passwordSrpCheck = _context7.sent;\n          _context7.next = 19;\n          return client.invoke(new tl_1.Api.auth.CheckPassword({\n            password: passwordSrpCheck\n          }));\n        case 19:\n          _yield$client$invoke2 = _context7.sent;\n          user = _yield$client$invoke2.user;\n          return _context7.abrupt(\"return\", user);\n        case 24:\n          _context7.prev = 24;\n          _context7.t0 = _context7[\"catch\"](2);\n          _context7.next = 28;\n          return authParams.onError(_context7.t0);\n        case 28:\n          shouldWeStop = _context7.sent;\n          if (!shouldWeStop) {\n            _context7.next = 31;\n            break;\n          }\n          throw new Error(\"AUTH_USER_CANCEL\");\n        case 31:\n          _context7.next = 1;\n          break;\n        case 33:\n          if (!emptyPassword) {\n            _context7.next = 35;\n            break;\n          }\n          throw new Error(\"Account has 2FA enabled.\");\n        case 35:\n          return _context7.abrupt(\"return\", undefined);\n        case 36:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7, null, [[2, 24]]);\n  }));\n  return _signInWithPassword.apply(this, arguments);\n}\nexports.signInWithPassword = signInWithPassword;\n/** @hidden */\nfunction signInBot(_x16, _x17, _x18) {\n  return _signInBot.apply(this, arguments);\n}\nfunction _signInBot() {\n  _signInBot = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(client, apiCredentials, authParams) {\n    var apiId, apiHash, botAuthToken, token, _yield$client$invoke3, user;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          apiId = apiCredentials.apiId, apiHash = apiCredentials.apiHash;\n          botAuthToken = authParams.botAuthToken;\n          if (botAuthToken) {\n            _context8.next = 4;\n            break;\n          }\n          throw new Error(\"a valid BotToken is required\");\n        case 4:\n          if (!(typeof botAuthToken === \"function\")) {\n            _context8.next = 14;\n            break;\n          }\n        case 5:\n          if (!true) {\n            _context8.next = 14;\n            break;\n          }\n          _context8.next = 8;\n          return botAuthToken();\n        case 8:\n          token = _context8.sent;\n          if (!token) {\n            _context8.next = 12;\n            break;\n          }\n          botAuthToken = token;\n          return _context8.abrupt(\"break\", 14);\n        case 12:\n          _context8.next = 5;\n          break;\n        case 14:\n          _context8.next = 16;\n          return client.invoke(new tl_1.Api.auth.ImportBotAuthorization({\n            apiId: apiId,\n            apiHash: apiHash,\n            botAuthToken: botAuthToken\n          }));\n        case 16:\n          _yield$client$invoke3 = _context8.sent;\n          user = _yield$client$invoke3.user;\n          return _context8.abrupt(\"return\", user);\n        case 19:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8);\n  }));\n  return _signInBot.apply(this, arguments);\n}\nexports.signInBot = signInBot;\n/** @hidden */\nfunction _authFlow(_x19, _x20, _x21) {\n  return _authFlow2.apply(this, arguments);\n}\nfunction _authFlow2() {\n  _authFlow2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(client, apiCredentials, authParams) {\n    var me;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          if (!(\"phoneNumber\" in authParams)) {\n            _context9.next = 6;\n            break;\n          }\n          _context9.next = 3;\n          return client.signInUser(apiCredentials, authParams);\n        case 3:\n          _context9.t0 = _context9.sent;\n          _context9.next = 9;\n          break;\n        case 6:\n          _context9.next = 8;\n          return client.signInBot(apiCredentials, authParams);\n        case 8:\n          _context9.t0 = _context9.sent;\n        case 9:\n          me = _context9.t0;\n          client._log.info(\"Signed in successfully as \" + utils.getDisplayName(me));\n        case 11:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9);\n  }));\n  return _authFlow2.apply(this, arguments);\n}\nexports._authFlow = _authFlow;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","_authFlow","signInBot","signInWithPassword","sendCode","signInUserWithQrCode","signInUser","checkAuthorization","start","tl_1","require","utils","Helpers_1","Password_1","QR_CODE_TIMEOUT","client","authParams","connected","connect","apiCredentials","apiId","apiHash","invoke","Api","updates","GetState","isCodeViaApp","phoneNumber","errorMessage","forceSMS","sendCodeResult","phoneCodeHash","Error","onError","shouldWeStop","isRegistrationRequired","phoneCode","auth","SignIn","AuthorizationSignUpRequired","termsOfService","user","lastName","firstName","firstAndLastNames","SignUp","help","AcceptTermsOfService","id","isScanningComplete","qrCode","inputPromise","ExportLoginToken","Number","exceptIds","LoginToken","token","expires","Promise","race","sleep","updatePromise","resolve","addEventHandler","update","UpdateLoginToken","result2","LoginTokenSuccess","authorization","Authorization","LoginTokenMigrateTo","_switchDC","dcId","ImportLoginToken","migratedResult","_log","error","className","SendCode","settings","CodeSettings","sendResult","type","SentCodeTypeSms","SentCodeTypeApp","ResendCode","resendResult","emptyPassword","account","GetPassword","passwordSrpResult","password","hint","computeCheck","passwordSrpCheck","CheckPassword","botAuthToken","ImportBotAuthorization","me","info","getDisplayName"],"sources":["C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/telegram/client/auth.js"],"sourcesContent":["\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports._authFlow = exports.signInBot = exports.signInWithPassword = exports.sendCode = exports.signInUserWithQrCode = exports.signInUser = exports.checkAuthorization = exports.start = void 0;\r\nconst tl_1 = require(\"../tl\");\r\nconst utils = __importStar(require(\"../Utils\"));\r\nconst Helpers_1 = require(\"../Helpers\");\r\nconst Password_1 = require(\"../Password\");\r\nconst QR_CODE_TIMEOUT = 30000;\r\n// region public methods\r\n/** @hidden */\r\nasync function start(client, authParams) {\r\n    if (!client.connected) {\r\n        await client.connect();\r\n    }\r\n    if (await client.checkAuthorization()) {\r\n        return;\r\n    }\r\n    const apiCredentials = {\r\n        apiId: client.apiId,\r\n        apiHash: client.apiHash,\r\n    };\r\n    await _authFlow(client, apiCredentials, authParams);\r\n}\r\nexports.start = start;\r\n/** @hidden */\r\nasync function checkAuthorization(client) {\r\n    try {\r\n        await client.invoke(new tl_1.Api.updates.GetState());\r\n        return true;\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\nexports.checkAuthorization = checkAuthorization;\r\n/** @hidden */\r\nasync function signInUser(client, apiCredentials, authParams) {\r\n    let phoneNumber;\r\n    let phoneCodeHash;\r\n    let isCodeViaApp = false;\r\n    while (1) {\r\n        try {\r\n            if (typeof authParams.phoneNumber === \"function\") {\r\n                try {\r\n                    phoneNumber = await authParams.phoneNumber();\r\n                }\r\n                catch (err) {\r\n                    if (err.errorMessage === \"RESTART_AUTH_WITH_QR\") {\r\n                        return client.signInUserWithQrCode(apiCredentials, authParams);\r\n                    }\r\n                    throw err;\r\n                }\r\n            }\r\n            else {\r\n                phoneNumber = authParams.phoneNumber;\r\n            }\r\n            const sendCodeResult = await client.sendCode(apiCredentials, phoneNumber, authParams.forceSMS);\r\n            phoneCodeHash = sendCodeResult.phoneCodeHash;\r\n            isCodeViaApp = sendCodeResult.isCodeViaApp;\r\n            if (typeof phoneCodeHash !== \"string\") {\r\n                throw new Error(\"Failed to retrieve phone code hash\");\r\n            }\r\n            break;\r\n        }\r\n        catch (err) {\r\n            if (typeof authParams.phoneNumber !== \"function\") {\r\n                throw err;\r\n            }\r\n            const shouldWeStop = await authParams.onError(err);\r\n            if (shouldWeStop) {\r\n                throw new Error(\"AUTH_USER_CANCEL\");\r\n            }\r\n        }\r\n    }\r\n    let phoneCode;\r\n    let isRegistrationRequired = false;\r\n    let termsOfService;\r\n    while (1) {\r\n        try {\r\n            try {\r\n                phoneCode = await authParams.phoneCode(isCodeViaApp);\r\n            }\r\n            catch (err) {\r\n                // This is the support for changing phone number from the phone code screen.\r\n                if (err.errorMessage === \"RESTART_AUTH\") {\r\n                    return client.signInUser(apiCredentials, authParams);\r\n                }\r\n            }\r\n            if (!phoneCode) {\r\n                throw new Error(\"Code is empty\");\r\n            }\r\n            // May raise PhoneCodeEmptyError, PhoneCodeExpiredError,\r\n            // PhoneCodeHashEmptyError or PhoneCodeInvalidError.\r\n            const result = await client.invoke(new tl_1.Api.auth.SignIn({\r\n                phoneNumber,\r\n                phoneCodeHash,\r\n                phoneCode,\r\n            }));\r\n            if (result instanceof tl_1.Api.auth.AuthorizationSignUpRequired) {\r\n                isRegistrationRequired = true;\r\n                termsOfService = result.termsOfService;\r\n                break;\r\n            }\r\n            return result.user;\r\n        }\r\n        catch (err) {\r\n            if (err.errorMessage === \"SESSION_PASSWORD_NEEDED\") {\r\n                return client.signInWithPassword(apiCredentials, authParams);\r\n            }\r\n            else {\r\n                const shouldWeStop = await authParams.onError(err);\r\n                if (shouldWeStop) {\r\n                    throw new Error(\"AUTH_USER_CANCEL\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (isRegistrationRequired) {\r\n        while (1) {\r\n            try {\r\n                let lastName;\r\n                let firstName = \"first name\";\r\n                if (authParams.firstAndLastNames) {\r\n                    const result = await authParams.firstAndLastNames();\r\n                    firstName = result[0];\r\n                    lastName = result[1];\r\n                }\r\n                if (!firstName) {\r\n                    throw new Error(\"First name is required\");\r\n                }\r\n                const { user } = (await client.invoke(new tl_1.Api.auth.SignUp({\r\n                    phoneNumber,\r\n                    phoneCodeHash,\r\n                    firstName,\r\n                    lastName,\r\n                })));\r\n                if (termsOfService) {\r\n                    // This is a violation of Telegram rules: the user should be presented with and accept TOS.\r\n                    await client.invoke(new tl_1.Api.help.AcceptTermsOfService({\r\n                        id: termsOfService.id,\r\n                    }));\r\n                }\r\n                return user;\r\n            }\r\n            catch (err) {\r\n                const shouldWeStop = await authParams.onError(err);\r\n                if (shouldWeStop) {\r\n                    throw new Error(\"AUTH_USER_CANCEL\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    await authParams.onError(new Error(\"Auth failed\"));\r\n    return client.signInUser(apiCredentials, authParams);\r\n}\r\nexports.signInUser = signInUser;\r\n/** @hidden */\r\nasync function signInUserWithQrCode(client, apiCredentials, authParams) {\r\n    let isScanningComplete = false;\r\n    if (authParams.qrCode == undefined) {\r\n        throw new Error(\"qrCode callback not defined\");\r\n    }\r\n    const inputPromise = (async () => {\r\n        while (1) {\r\n            if (isScanningComplete) {\r\n                break;\r\n            }\r\n            const result = await client.invoke(new tl_1.Api.auth.ExportLoginToken({\r\n                apiId: Number(apiCredentials.apiId),\r\n                apiHash: apiCredentials.apiHash,\r\n                exceptIds: [],\r\n            }));\r\n            if (!(result instanceof tl_1.Api.auth.LoginToken)) {\r\n                throw new Error(\"Unexpected\");\r\n            }\r\n            const { token, expires } = result;\r\n            await Promise.race([\r\n                authParams.qrCode({ token, expires }),\r\n                (0, Helpers_1.sleep)(QR_CODE_TIMEOUT),\r\n            ]);\r\n            await (0, Helpers_1.sleep)(QR_CODE_TIMEOUT);\r\n        }\r\n    })();\r\n    const updatePromise = new Promise((resolve) => {\r\n        client.addEventHandler((update) => {\r\n            if (update instanceof tl_1.Api.UpdateLoginToken) {\r\n                resolve(undefined);\r\n            }\r\n        });\r\n    });\r\n    try {\r\n        await Promise.race([updatePromise, inputPromise]);\r\n    }\r\n    catch (err) {\r\n        throw err;\r\n    }\r\n    finally {\r\n        isScanningComplete = true;\r\n    }\r\n    try {\r\n        const result2 = await client.invoke(new tl_1.Api.auth.ExportLoginToken({\r\n            apiId: Number(apiCredentials.apiId),\r\n            apiHash: apiCredentials.apiHash,\r\n            exceptIds: [],\r\n        }));\r\n        if (result2 instanceof tl_1.Api.auth.LoginTokenSuccess &&\r\n            result2.authorization instanceof tl_1.Api.auth.Authorization) {\r\n            return result2.authorization.user;\r\n        }\r\n        else if (result2 instanceof tl_1.Api.auth.LoginTokenMigrateTo) {\r\n            await client._switchDC(result2.dcId);\r\n            const migratedResult = await client.invoke(new tl_1.Api.auth.ImportLoginToken({\r\n                token: result2.token,\r\n            }));\r\n            if (migratedResult instanceof tl_1.Api.auth.LoginTokenSuccess &&\r\n                migratedResult.authorization instanceof tl_1.Api.auth.Authorization) {\r\n                return migratedResult.authorization.user;\r\n            }\r\n            else {\r\n                client._log.error(`Received unknown result while scanning QR ${result2.className}`);\r\n                throw new Error(`Received unknown result while scanning QR ${result2.className}`);\r\n            }\r\n        }\r\n        else {\r\n            client._log.error(`Received unknown result while scanning QR ${result2.className}`);\r\n            throw new Error(`Received unknown result while scanning QR ${result2.className}`);\r\n        }\r\n    }\r\n    catch (err) {\r\n        if (err.errorMessage === \"SESSION_PASSWORD_NEEDED\") {\r\n            return client.signInWithPassword(apiCredentials, authParams);\r\n        }\r\n        throw err;\r\n    }\r\n    await authParams.onError(new Error(\"QR auth failed\"));\r\n    throw new Error(\"QR auth failed\");\r\n}\r\nexports.signInUserWithQrCode = signInUserWithQrCode;\r\n/** @hidden */\r\nasync function sendCode(client, apiCredentials, phoneNumber, forceSMS = false) {\r\n    try {\r\n        const { apiId, apiHash } = apiCredentials;\r\n        const sendResult = await client.invoke(new tl_1.Api.auth.SendCode({\r\n            phoneNumber,\r\n            apiId,\r\n            apiHash,\r\n            settings: new tl_1.Api.CodeSettings({}),\r\n        }));\r\n        // If we already sent a SMS, do not resend the phoneCode (hash may be empty)\r\n        if (!forceSMS || sendResult.type instanceof tl_1.Api.auth.SentCodeTypeSms) {\r\n            return {\r\n                phoneCodeHash: sendResult.phoneCodeHash,\r\n                isCodeViaApp: sendResult.type instanceof tl_1.Api.auth.SentCodeTypeApp,\r\n            };\r\n        }\r\n        const resendResult = await client.invoke(new tl_1.Api.auth.ResendCode({\r\n            phoneNumber,\r\n            phoneCodeHash: sendResult.phoneCodeHash,\r\n        }));\r\n        return {\r\n            phoneCodeHash: resendResult.phoneCodeHash,\r\n            isCodeViaApp: resendResult.type instanceof tl_1.Api.auth.SentCodeTypeApp,\r\n        };\r\n    }\r\n    catch (err) {\r\n        if (err.errorMessage === \"AUTH_RESTART\") {\r\n            return client.sendCode(apiCredentials, phoneNumber, forceSMS);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nexports.sendCode = sendCode;\r\n/** @hidden */\r\nasync function signInWithPassword(client, apiCredentials, authParams) {\r\n    let emptyPassword = false;\r\n    while (1) {\r\n        try {\r\n            const passwordSrpResult = await client.invoke(new tl_1.Api.account.GetPassword());\r\n            if (!authParams.password) {\r\n                emptyPassword = true;\r\n                break;\r\n            }\r\n            const password = await authParams.password(passwordSrpResult.hint);\r\n            if (!password) {\r\n                throw new Error(\"Password is empty\");\r\n            }\r\n            const passwordSrpCheck = await (0, Password_1.computeCheck)(passwordSrpResult, password);\r\n            const { user } = (await client.invoke(new tl_1.Api.auth.CheckPassword({\r\n                password: passwordSrpCheck,\r\n            })));\r\n            return user;\r\n        }\r\n        catch (err) {\r\n            const shouldWeStop = await authParams.onError(err);\r\n            if (shouldWeStop) {\r\n                throw new Error(\"AUTH_USER_CANCEL\");\r\n            }\r\n        }\r\n    }\r\n    if (emptyPassword) {\r\n        throw new Error(\"Account has 2FA enabled.\");\r\n    }\r\n    return undefined; // Never reached (TypeScript fix)\r\n}\r\nexports.signInWithPassword = signInWithPassword;\r\n/** @hidden */\r\nasync function signInBot(client, apiCredentials, authParams) {\r\n    const { apiId, apiHash } = apiCredentials;\r\n    let { botAuthToken } = authParams;\r\n    if (!botAuthToken) {\r\n        throw new Error(\"a valid BotToken is required\");\r\n    }\r\n    if (typeof botAuthToken === \"function\") {\r\n        let token;\r\n        while (true) {\r\n            token = await botAuthToken();\r\n            if (token) {\r\n                botAuthToken = token;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    const { user } = (await client.invoke(new tl_1.Api.auth.ImportBotAuthorization({\r\n        apiId,\r\n        apiHash,\r\n        botAuthToken,\r\n    })));\r\n    return user;\r\n}\r\nexports.signInBot = signInBot;\r\n/** @hidden */\r\nasync function _authFlow(client, apiCredentials, authParams) {\r\n    const me = \"phoneNumber\" in authParams\r\n        ? await client.signInUser(apiCredentials, authParams)\r\n        : await client.signInBot(apiCredentials, authParams);\r\n    client._log.info(\"Signed in successfully as \" + utils.getDisplayName(me));\r\n}\r\nexports._authFlow = _authFlow;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}