{"ast":null,"code":"\"use strict\";\n\n// Which updates have the following fields?\nvar _createForOfIteratorHelper = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _toConsumableArray = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _classCallCheck = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EntityCache = void 0;\nvar Utils_1 = require(\"./Utils\");\nvar Helpers_1 = require(\"./Helpers\");\nvar tl_1 = require(\"./tl\");\nvar big_integer_1 = __importDefault(require(\"big-integer\"));\nvar EntityCache = /*#__PURE__*/function () {\n  function EntityCache() {\n    _classCallCheck(this, EntityCache);\n    this.cacheMap = new Map();\n  }\n  _createClass(EntityCache, [{\n    key: \"add\",\n    value: function add(entities) {\n      var temp = [];\n      if (!(0, Helpers_1.isArrayLike)(entities)) {\n        if (entities != undefined) {\n          if (typeof entities == \"object\") {\n            if (\"chats\" in entities) {\n              temp.push.apply(temp, _toConsumableArray(entities.chats));\n            }\n            if (\"users\" in entities) {\n              temp.push.apply(temp, _toConsumableArray(entities.users));\n            }\n            if (\"user\" in entities) {\n              temp.push(entities.user);\n            }\n          }\n        }\n        if (temp.length) {\n          entities = temp;\n        } else {\n          return;\n        }\n      }\n      var _iterator = _createForOfIteratorHelper(entities),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var entity = _step.value;\n          try {\n            var pid = (0, Utils_1.getPeerId)(entity);\n            if (!this.cacheMap.has(pid.toString())) {\n              this.cacheMap.set(pid.toString(), (0, Utils_1.getInputPeer)(entity));\n            }\n          } catch (e) {}\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"get\",\n    value: function get(item) {\n      if (item == undefined) {\n        throw new Error(\"No cached entity for the given key\");\n      }\n      item = (0, Helpers_1.returnBigInt)(item);\n      if (item.lesser(big_integer_1.default.zero)) {\n        var res;\n        try {\n          res = this.cacheMap.get((0, Utils_1.getPeerId)(item).toString());\n          if (res) {\n            return res;\n          }\n        } catch (e) {\n          throw new Error(\"Invalid key will not have entity\");\n        }\n      }\n      for (var _i = 0, _arr = [tl_1.Api.PeerUser, tl_1.Api.PeerChat, tl_1.Api.PeerChannel]; _i < _arr.length; _i++) {\n        var cls = _arr[_i];\n        var result = this.cacheMap.get((0, Utils_1.getPeerId)(new cls({\n          userId: item,\n          chatId: item,\n          channelId: item\n        })).toString());\n        if (result) {\n          return result;\n        }\n      }\n      throw new Error(\"No cached entity for the given key\");\n    }\n  }]);\n  return EntityCache;\n}();\nexports.EntityCache = EntityCache;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","EntityCache","Utils_1","require","Helpers_1","tl_1","big_integer_1","cacheMap","Map","entities","temp","isArrayLike","undefined","push","chats","users","user","length","entity","pid","getPeerId","has","toString","set","getInputPeer","e","item","Error","returnBigInt","lesser","default","zero","res","get","Api","PeerUser","PeerChat","PeerChannel","cls","result","userId","chatId","channelId"],"sources":["C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/telegram/entityCache.js"],"sourcesContent":["\"use strict\";\r\n// Which updates have the following fields?\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EntityCache = void 0;\r\nconst Utils_1 = require(\"./Utils\");\r\nconst Helpers_1 = require(\"./Helpers\");\r\nconst tl_1 = require(\"./tl\");\r\nconst big_integer_1 = __importDefault(require(\"big-integer\"));\r\nclass EntityCache {\r\n    constructor() {\r\n        this.cacheMap = new Map();\r\n    }\r\n    add(entities) {\r\n        const temp = [];\r\n        if (!(0, Helpers_1.isArrayLike)(entities)) {\r\n            if (entities != undefined) {\r\n                if (typeof entities == \"object\") {\r\n                    if (\"chats\" in entities) {\r\n                        temp.push(...entities.chats);\r\n                    }\r\n                    if (\"users\" in entities) {\r\n                        temp.push(...entities.users);\r\n                    }\r\n                    if (\"user\" in entities) {\r\n                        temp.push(entities.user);\r\n                    }\r\n                }\r\n            }\r\n            if (temp.length) {\r\n                entities = temp;\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n        }\r\n        for (const entity of entities) {\r\n            try {\r\n                const pid = (0, Utils_1.getPeerId)(entity);\r\n                if (!this.cacheMap.has(pid.toString())) {\r\n                    this.cacheMap.set(pid.toString(), (0, Utils_1.getInputPeer)(entity));\r\n                }\r\n            }\r\n            catch (e) { }\r\n        }\r\n    }\r\n    get(item) {\r\n        if (item == undefined) {\r\n            throw new Error(\"No cached entity for the given key\");\r\n        }\r\n        item = (0, Helpers_1.returnBigInt)(item);\r\n        if (item.lesser(big_integer_1.default.zero)) {\r\n            let res;\r\n            try {\r\n                res = this.cacheMap.get((0, Utils_1.getPeerId)(item).toString());\r\n                if (res) {\r\n                    return res;\r\n                }\r\n            }\r\n            catch (e) {\r\n                throw new Error(\"Invalid key will not have entity\");\r\n            }\r\n        }\r\n        for (const cls of [tl_1.Api.PeerUser, tl_1.Api.PeerChat, tl_1.Api.PeerChannel]) {\r\n            const result = this.cacheMap.get((0, Utils_1.getPeerId)(new cls({\r\n                userId: item,\r\n                chatId: item,\r\n                channelId: item,\r\n            })).toString());\r\n            if (result) {\r\n                return result;\r\n            }\r\n        }\r\n        throw new Error(\"No cached entity for the given key\");\r\n    }\r\n}\r\nexports.EntityCache = EntityCache;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}