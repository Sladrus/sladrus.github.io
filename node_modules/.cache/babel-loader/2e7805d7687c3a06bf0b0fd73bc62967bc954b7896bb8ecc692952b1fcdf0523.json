{"ast":null,"code":"import _slicedToArray from\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{observer}from'mobx-react-lite';import React,{useContext,useEffect,useState}from'react';import{Card,Container,Dropdown,DropdownButton,ListGroup}from'react-bootstrap';import{Link}from'react-router-dom';import{Context}from'..';import DialogModal from'../components/modals/monitoring/DialogModal';import{getRequests}from'../http/chatApi';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MonitoringRequests=observer(function(){var _useContext=useContext(Context),telegramService=_useContext.telegramService;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),openShow=_useState2[0],setOpenShow=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),selectedChat=_useState4[0],setSelectedChat=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),sender=_useState6[0],setSender=_useState6[1];var getTime=function getTime(unix_timestamp){// Create a new JavaScript Date object based on the timestamp\n// multiplied by 1000 so that the argument is in milliseconds, not seconds.\nvar a=new Date(unix_timestamp*1000);var months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];var month=months[a.getMonth()];var date=a.getDate();// Hours part from the timestamp\nvar hours=a.getHours();// Minutes part from the timestamp\nvar minutes='0'+a.getMinutes();// Seconds part from the timestamp\nvar formattedTime=date+' '+month+' '+hours+':'+minutes.substr(-2);return formattedTime;};useEffect(function(){getRequests().then(function(data){telegramService.requests=data;});},[telegramService.requests.length]);return/*#__PURE__*/_jsxs(Container,{className:\"p-4 px-4 d-grid\",children:[/*#__PURE__*/_jsxs(DropdownButton,{className:\"pb-4\",id:\"dropdown-item-button\",title:\"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440\",children:[/*#__PURE__*/_jsx(Dropdown.Item,{as:\"button\",children:\"\\u041F\\u043E \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u0438\"}),\"F\",/*#__PURE__*/_jsx(Dropdown.Item,{as:\"button\",children:\"\\u041F\\u043E \\u0447\\u0430\\u0442\\u0430\\u043C\"}),/*#__PURE__*/_jsx(Dropdown.Item,{as:\"button\",children:\"Something else\"})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:/*#__PURE__*/_jsxs(ListGroup.Item,{className:\"d-flex justify-content-between align-items-center text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"m-1 \",style:{width:'13rem'},children:\"\\u0412\\u0440\\u0435\\u043C\\u044F/\\u0427\\u0430\\u0442\"}),/*#__PURE__*/_jsx(\"div\",{className:\"m-1 \",style:{width:'25rem'},children:\"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\"}),/*#__PURE__*/_jsx(\"div\",{className:\"m-1\",style:{width:'10rem'},children:\"\\u042E\\u0437\\u0435\\u0440\\u043D\\u0435\\u0439\\u043C/\\u0418\\u043C\\u044F\"}),/*#__PURE__*/_jsx(\"div\",{className:\"m-1\",style:{width:'5rem'}})]})}),/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:telegramService.requests.slice().reverse().map(function(request,index){var _request$chat;return/*#__PURE__*/_jsxs(ListGroup.Item,{className:\"d-flex justify-content-between align-items-center text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-start\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-nowrap m-1\",children:getTime(request.date)}),/*#__PURE__*/_jsx(\"div\",{className:\"m-1 text-start\",style:{minWidth:'13rem'},children:(_request$chat=request.chat)===null||_request$chat===void 0?void 0:_request$chat.link})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"m-1\",style:{width:'25rem'},children:request.text})}),/*#__PURE__*/_jsx(\"div\",{className:\"m-1\",style:{width:'10rem'},children:request.username}),/*#__PURE__*/_jsx(\"div\",{className:\"m-1\",style:{width:'5rem'},children:/*#__PURE__*/_jsx(Link,{onClick:function onClick(){var res=telegramService.chats.find(function(chat){return chat._id===request.chat._id;});console.log(res);setSender(res.senders.find(function(obj){return(obj===null||obj===void 0?void 0:obj.senderId)===request.sender;}));setSelectedChat(res);setOpenShow(true);},children:\"\\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C\"})})]},index);})}),/*#__PURE__*/_jsx(DialogModal,{show:openShow,onHide:setOpenShow,senderData:sender,chat:selectedChat})]})]});});export default MonitoringRequests;","map":{"version":3,"names":["observer","React","useContext","useEffect","useState","Card","Container","Dropdown","DropdownButton","ListGroup","Link","Context","DialogModal","getRequests","MonitoringRequests","telegramService","openShow","setOpenShow","selectedChat","setSelectedChat","sender","setSender","getTime","unix_timestamp","a","Date","months","month","getMonth","date","getDate","hours","getHours","minutes","getMinutes","formattedTime","substr","then","data","requests","length","width","slice","reverse","map","request","index","minWidth","chat","link","text","username","res","chats","find","_id","console","log","senders","obj","senderId"],"sources":["C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/src/pages/MonitoringRequests.js"],"sourcesContent":["import { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport {\r\n  Card,\r\n  Container,\r\n  Dropdown,\r\n  DropdownButton,\r\n  ListGroup,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Context } from '..';\r\nimport DialogModal from '../components/modals/monitoring/DialogModal';\r\nimport { getRequests } from '../http/chatApi';\r\n\r\nconst MonitoringRequests = observer(() => {\r\n  const { telegramService } = useContext(Context);\r\n\r\n  const [openShow, setOpenShow] = useState(false);\r\n  const [selectedChat, setSelectedChat] = useState({});\r\n  const [sender, setSender] = useState({});\r\n\r\n  const getTime = (unix_timestamp) => {\r\n    // Create a new JavaScript Date object based on the timestamp\r\n    // multiplied by 1000 so that the argument is in milliseconds, not seconds.\r\n    var a = new Date(unix_timestamp * 1000);\r\n    var months = [\r\n      'Jan',\r\n      'Feb',\r\n      'Mar',\r\n      'Apr',\r\n      'May',\r\n      'Jun',\r\n      'Jul',\r\n      'Aug',\r\n      'Sep',\r\n      'Oct',\r\n      'Nov',\r\n      'Dec',\r\n    ];\r\n    var month = months[a.getMonth()];\r\n    var date = a.getDate();\r\n    // Hours part from the timestamp\r\n    var hours = a.getHours();\r\n    // Minutes part from the timestamp\r\n    var minutes = '0' + a.getMinutes();\r\n    // Seconds part from the timestamp\r\n\r\n    var formattedTime =\r\n      date + ' ' + month + ' ' + hours + ':' + minutes.substr(-2);\r\n    return formattedTime;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRequests().then((data) => {\r\n      telegramService.requests = data;\r\n    });\r\n  }, [telegramService.requests.length]);\r\n\r\n  return (\r\n    <Container className=\"p-4 px-4 d-grid\">\r\n      <DropdownButton className=\"pb-4\" id=\"dropdown-item-button\" title=\"Фильтр\">\r\n        <Dropdown.Item as=\"button\">По времени</Dropdown.Item>F\r\n        <Dropdown.Item as=\"button\">По чатам</Dropdown.Item>\r\n        <Dropdown.Item as=\"button\">Something else</Dropdown.Item>\r\n      </DropdownButton>\r\n      <Card>\r\n        <ListGroup variant=\"flush\">\r\n          <ListGroup.Item className=\"d-flex justify-content-between align-items-center text-center\">\r\n            <div className=\"m-1 \" style={{ width: '13rem' }}>\r\n              Время/Чат\r\n            </div>\r\n            <div className=\"m-1 \" style={{ width: '25rem' }}>\r\n              Сообщение\r\n            </div>\r\n            <div className=\"m-1\" style={{ width: '10rem' }}>\r\n              Юзернейм/Имя\r\n            </div>\r\n            <div className=\"m-1\" style={{ width: '5rem' }}></div>\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n        <ListGroup variant=\"flush\">\r\n          {telegramService.requests\r\n            .slice()\r\n            .reverse()\r\n            .map((request, index) => {\r\n              return (\r\n                <ListGroup.Item\r\n                  key={index}\r\n                  className=\"d-flex justify-content-between align-items-center text-center\"\r\n                >\r\n                  <div className=\"text-start\">\r\n                    <div className=\"text-nowrap m-1\">\r\n                      {getTime(request.date)}\r\n                    </div>\r\n                    <div\r\n                      className=\"m-1 text-start\"\r\n                      style={{ minWidth: '13rem' }}\r\n                    >\r\n                      {request.chat?.link}\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"m-1\" style={{ width: '25rem' }}>\r\n                      {request.text}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"m-1\" style={{ width: '10rem' }}>\r\n                    {request.username}\r\n                  </div>\r\n                  <div className=\"m-1\" style={{ width: '5rem' }}>\r\n                    <Link\r\n                      onClick={() => {\r\n                        const res = telegramService.chats.find(\r\n                          (chat) => chat._id === request.chat._id\r\n                        );\r\n                        console.log(res);\r\n\r\n                        setSender(\r\n                          res.senders.find(\r\n                            (obj) => obj?.senderId === request.sender\r\n                          )\r\n                        );\r\n\r\n                        setSelectedChat(res);\r\n                        setOpenShow(true);\r\n                      }}\r\n                    >\r\n                      Написать\r\n                    </Link>\r\n                  </div>\r\n                </ListGroup.Item>\r\n              );\r\n            })}\r\n        </ListGroup>\r\n        <DialogModal\r\n          show={openShow}\r\n          onHide={setOpenShow}\r\n          senderData={sender}\r\n          chat={selectedChat}\r\n        />\r\n      </Card>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default MonitoringRequests;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}