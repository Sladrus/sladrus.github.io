{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _regeneratorRuntime = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _get = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StoreSession = void 0;\nvar buffer_1 = require(\"buffer/\");\nvar Memory_1 = require(\"./Memory\");\nvar store2_1 = __importDefault(require(\"store2\"));\nvar AuthKey_1 = require(\"../crypto/AuthKey\");\nvar StoreSession = /*#__PURE__*/function (_Memory_1$MemorySessi) {\n  _inherits(StoreSession, _Memory_1$MemorySessi);\n  var _super = _createSuper(StoreSession);\n  function StoreSession(sessionName) {\n    var _this;\n    var divider = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \":\";\n    _classCallCheck(this, StoreSession);\n    _this = _super.call(this);\n    if (typeof localStorage === \"undefined\" || localStorage === null) {\n      var LocalStorage = require(\"./localStorage\").LocalStorage;\n      _this.store = store2_1.default.area(sessionName, new LocalStorage(\"./\" + sessionName));\n    } else {\n      _this.store = store2_1.default.area(sessionName, localStorage);\n    }\n    if (divider == undefined) {\n      divider = \":\";\n    }\n    _this.sessionName = sessionName + divider;\n    return _this;\n  }\n  _createClass(StoreSession, [{\n    key: \"load\",\n    value: function () {\n      var _load = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var authKey, dcId, port, serverAddress;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              authKey = this.store.get(this.sessionName + \"authKey\");\n              if (!(authKey && typeof authKey === \"object\")) {\n                _context.next = 6;\n                break;\n              }\n              this._authKey = new AuthKey_1.AuthKey();\n              if (\"data\" in authKey) {\n                authKey = buffer_1.Buffer.from(authKey.data);\n              }\n              _context.next = 6;\n              return this._authKey.setKey(authKey);\n            case 6:\n              dcId = this.store.get(this.sessionName + \"dcId\");\n              if (dcId) {\n                this._dcId = dcId;\n              }\n              port = this.store.get(this.sessionName + \"port\");\n              if (port) {\n                this._port = port;\n              }\n              serverAddress = this.store.get(this.sessionName + \"serverAddress\");\n              if (serverAddress) {\n                this._serverAddress = serverAddress;\n              }\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function load() {\n        return _load.apply(this, arguments);\n      }\n      return load;\n    }()\n  }, {\n    key: \"setDC\",\n    value: function setDC(dcId, serverAddress, port) {\n      this.store.set(this.sessionName + \"dcId\", dcId);\n      this.store.set(this.sessionName + \"port\", port);\n      this.store.set(this.sessionName + \"serverAddress\", serverAddress);\n      _get(_getPrototypeOf(StoreSession.prototype), \"setDC\", this).call(this, dcId, serverAddress, port);\n    }\n  }, {\n    key: \"authKey\",\n    get: function get() {\n      return this._authKey;\n    },\n    set: function set(value) {\n      this._authKey = value;\n      this.store.set(this.sessionName + \"authKey\", value === null || value === void 0 ? void 0 : value.getKey());\n    }\n  }, {\n    key: \"processEntities\",\n    value: function processEntities(tlo) {\n      var rows = this._entitiesToRows(tlo);\n      if (!rows) {\n        return;\n      }\n      var _iterator = _createForOfIteratorHelper(rows),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var row = _step.value;\n          row.push(new Date().getTime().toString());\n          this.store.set(this.sessionName + row[0], row);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"getEntityRowsById\",\n    value: function getEntityRowsById(id) {\n      var exact = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      return this.store.get(this.sessionName + id.toString());\n    }\n  }]);\n  return StoreSession;\n}(Memory_1.MemorySession);\nexports.StoreSession = StoreSession;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","StoreSession","buffer_1","require","Memory_1","store2_1","AuthKey_1","sessionName","divider","localStorage","LocalStorage","store","default","area","undefined","authKey","get","_authKey","AuthKey","Buffer","from","data","setKey","dcId","_dcId","port","_port","serverAddress","_serverAddress","set","getKey","tlo","rows","_entitiesToRows","row","push","Date","getTime","toString","id","exact","MemorySession"],"sources":["C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/telegram/sessions/StoreSession.js"],"sourcesContent":["\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.StoreSession = void 0;\r\nconst buffer_1 = require(\"buffer/\");\r\nconst Memory_1 = require(\"./Memory\");\r\nconst store2_1 = __importDefault(require(\"store2\"));\r\nconst AuthKey_1 = require(\"../crypto/AuthKey\");\r\nclass StoreSession extends Memory_1.MemorySession {\r\n    constructor(sessionName, divider = \":\") {\r\n        super();\r\n        if (typeof localStorage === \"undefined\" || localStorage === null) {\r\n            const LocalStorage = require(\"./localStorage\").LocalStorage;\r\n            this.store = store2_1.default.area(sessionName, new LocalStorage(\"./\" + sessionName));\r\n        }\r\n        else {\r\n            this.store = store2_1.default.area(sessionName, localStorage);\r\n        }\r\n        if (divider == undefined) {\r\n            divider = \":\";\r\n        }\r\n        this.sessionName = sessionName + divider;\r\n    }\r\n    async load() {\r\n        let authKey = this.store.get(this.sessionName + \"authKey\");\r\n        if (authKey && typeof authKey === \"object\") {\r\n            this._authKey = new AuthKey_1.AuthKey();\r\n            if (\"data\" in authKey) {\r\n                authKey = buffer_1.Buffer.from(authKey.data);\r\n            }\r\n            await this._authKey.setKey(authKey);\r\n        }\r\n        const dcId = this.store.get(this.sessionName + \"dcId\");\r\n        if (dcId) {\r\n            this._dcId = dcId;\r\n        }\r\n        const port = this.store.get(this.sessionName + \"port\");\r\n        if (port) {\r\n            this._port = port;\r\n        }\r\n        const serverAddress = this.store.get(this.sessionName + \"serverAddress\");\r\n        if (serverAddress) {\r\n            this._serverAddress = serverAddress;\r\n        }\r\n    }\r\n    setDC(dcId, serverAddress, port) {\r\n        this.store.set(this.sessionName + \"dcId\", dcId);\r\n        this.store.set(this.sessionName + \"port\", port);\r\n        this.store.set(this.sessionName + \"serverAddress\", serverAddress);\r\n        super.setDC(dcId, serverAddress, port);\r\n    }\r\n    set authKey(value) {\r\n        this._authKey = value;\r\n        this.store.set(this.sessionName + \"authKey\", value === null || value === void 0 ? void 0 : value.getKey());\r\n    }\r\n    get authKey() {\r\n        return this._authKey;\r\n    }\r\n    processEntities(tlo) {\r\n        const rows = this._entitiesToRows(tlo);\r\n        if (!rows) {\r\n            return;\r\n        }\r\n        for (const row of rows) {\r\n            row.push(new Date().getTime().toString());\r\n            this.store.set(this.sessionName + row[0], row);\r\n        }\r\n    }\r\n    getEntityRowsById(id, exact = true) {\r\n        return this.store.get(this.sessionName + id.toString());\r\n    }\r\n}\r\nexports.StoreSession = StoreSession;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}