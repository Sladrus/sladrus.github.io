{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _toConsumableArray = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _regeneratorRuntime = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _get = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar __asyncValues = this && this.__asyncValues || function (o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator],\n    i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i);\n  function verb(n) {\n    i[n] = o[n] && function (v) {\n      return new Promise(function (resolve, reject) {\n        v = o[n](v), settle(resolve, reject, v.done, v.value);\n      });\n    };\n  }\n  function settle(resolve, reject, d, v) {\n    Promise.resolve(v).then(function (v) {\n      resolve({\n        value: v,\n        done: d\n      });\n    }, reject);\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCommentData = exports.markAsRead = exports._pin = exports.unpinMessage = exports.pinMessage = exports.deleteMessages = exports.editMessage = exports.forwardMessages = exports.sendMessage = exports.getMessages = exports.iterMessages = exports._IDsIter = exports._MessagesIter = void 0;\nvar tl_1 = require(\"../tl\");\nvar requestIter_1 = require(\"../requestIter\");\nvar Helpers_1 = require(\"../Helpers\");\nvar Utils_1 = require(\"../Utils\");\nvar __1 = require(\"../\");\nvar messageParse_1 = require(\"./messageParse\");\nvar users_1 = require(\"./users\");\nvar big_integer_1 = __importDefault(require(\"big-integer\"));\nvar uploads_1 = require(\"./uploads\");\nvar _MAX_CHUNK_SIZE = 100;\nvar _MessagesIter = /*#__PURE__*/function (_requestIter_1$Reques, _Symbol$asyncIterator) {\n  _inherits(_MessagesIter, _requestIter_1$Reques);\n  var _super = _createSuper(_MessagesIter);\n  function _MessagesIter() {\n    _classCallCheck(this, _MessagesIter);\n    return _super.apply(this, arguments);\n  }\n  _createClass(_MessagesIter, [{\n    key: \"_init\",\n    value: function () {\n      var _init2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref) {\n        var entity, offsetId, minId, maxId, fromUser, offsetDate, addOffset, filter, search, replyTo, e_1, _a, _b, _c, m, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              entity = _ref.entity, offsetId = _ref.offsetId, minId = _ref.minId, maxId = _ref.maxId, fromUser = _ref.fromUser, offsetDate = _ref.offsetDate, addOffset = _ref.addOffset, filter = _ref.filter, search = _ref.search, replyTo = _ref.replyTo;\n              if (!entity) {\n                _context.next = 7;\n                break;\n              }\n              _context.next = 4;\n              return this.client.getInputEntity(entity);\n            case 4:\n              this.entity = _context.sent;\n              _context.next = 10;\n              break;\n            case 7:\n              this.entity = undefined;\n              if (!this.reverse) {\n                _context.next = 10;\n                break;\n              }\n              throw new Error(\"Cannot reverse global search\");\n            case 10:\n              if (!this.reverse) {\n                _context.next = 18;\n                break;\n              }\n              offsetId = Math.max(offsetId, minId);\n              if (!(offsetId && maxId)) {\n                _context.next = 15;\n                break;\n              }\n              if (!(maxId - offsetId <= 1)) {\n                _context.next = 15;\n                break;\n              }\n              return _context.abrupt(\"return\", false);\n            case 15:\n              if (!maxId) {\n                maxId = Number.MAX_SAFE_INTEGER;\n              }\n              _context.next = 22;\n              break;\n            case 18:\n              offsetId = Math.max(offsetId, maxId);\n              if (!(offsetId && minId)) {\n                _context.next = 22;\n                break;\n              }\n              if (!(offsetId - minId <= 1)) {\n                _context.next = 22;\n                break;\n              }\n              return _context.abrupt(\"return\", false);\n            case 22:\n              if (this.reverse) {\n                if (offsetId) {\n                  offsetId += 1;\n                } else if (!offsetDate) {\n                  offsetId = 1;\n                }\n              }\n              if (!fromUser) {\n                _context.next = 27;\n                break;\n              }\n              _context.next = 26;\n              return this.client.getInputEntity(fromUser);\n            case 26:\n              fromUser = _context.sent;\n            case 27:\n              if (!this.entity && fromUser) {\n                this.entity = new tl_1.Api.InputPeerEmpty();\n              }\n              if (!filter) {\n                filter = new tl_1.Api.InputMessagesFilterEmpty();\n              }\n              if (this.entity) {\n                _context.next = 33;\n                break;\n              }\n              this.request = new tl_1.Api.messages.SearchGlobal({\n                q: search || \"\",\n                filter: filter,\n                minDate: undefined,\n                // TODO fix this smh\n                maxDate: offsetDate,\n                offsetRate: undefined,\n                offsetPeer: new tl_1.Api.InputPeerEmpty(),\n                offsetId: offsetId,\n                limit: 1\n              });\n              _context.next = 68;\n              break;\n            case 33:\n              if (!(replyTo !== undefined)) {\n                _context.next = 37;\n                break;\n              }\n              this.request = new tl_1.Api.messages.GetReplies({\n                peer: this.entity,\n                msgId: replyTo,\n                offsetId: offsetId,\n                offsetDate: offsetDate,\n                addOffset: addOffset,\n                limit: 0,\n                maxId: 0,\n                minId: 0,\n                hash: big_integer_1.default.zero\n              });\n              _context.next = 68;\n              break;\n            case 37:\n              if (!(search !== undefined || !(filter instanceof tl_1.Api.InputMessagesFilterEmpty) || fromUser !== undefined)) {\n                _context.next = 67;\n                break;\n              }\n              this.request = new tl_1.Api.messages.Search({\n                peer: this.entity,\n                q: search || \"\",\n                filter: typeof filter === \"function\" ? new filter() : filter,\n                minDate: undefined,\n                maxDate: offsetDate,\n                offsetId: offsetId,\n                addOffset: addOffset,\n                limit: 0,\n                maxId: 0,\n                minId: 0,\n                hash: big_integer_1.default.zero,\n                fromId: fromUser\n              });\n              if (!(!(filter instanceof tl_1.Api.InputMessagesFilterEmpty) && offsetDate && !search && !offsetId)) {\n                _context.next = 65;\n                break;\n              }\n              _context.prev = 40;\n              _b = __asyncValues(this.client.iterMessages(this.entity, {\n                limit: 1,\n                offsetDate: offsetDate\n              }));\n            case 42:\n              _context.next = 44;\n              return _b.next();\n            case 44:\n              _c = _context.sent;\n              if (_c.done) {\n                _context.next = 50;\n                break;\n              }\n              m = _c.value;\n              this.request.offsetId = m.id + 1;\n            case 48:\n              _context.next = 42;\n              break;\n            case 50:\n              _context.next = 55;\n              break;\n            case 52:\n              _context.prev = 52;\n              _context.t0 = _context[\"catch\"](40);\n              e_1 = {\n                error: _context.t0\n              };\n            case 55:\n              _context.prev = 55;\n              _context.prev = 56;\n              if (!(_c && !_c.done && (_a = _b.return))) {\n                _context.next = 60;\n                break;\n              }\n              _context.next = 60;\n              return _a.call(_b);\n            case 60:\n              _context.prev = 60;\n              if (!e_1) {\n                _context.next = 63;\n                break;\n              }\n              throw e_1.error;\n            case 63:\n              return _context.finish(60);\n            case 64:\n              return _context.finish(55);\n            case 65:\n              _context.next = 68;\n              break;\n            case 67:\n              this.request = new tl_1.Api.messages.GetHistory({\n                peer: this.entity,\n                limit: 1,\n                offsetDate: offsetDate,\n                offsetId: offsetId,\n                minId: 0,\n                maxId: 0,\n                addOffset: addOffset,\n                hash: big_integer_1.default.zero\n              });\n            case 68:\n              if (!(this.limit <= 0)) {\n                _context.next = 74;\n                break;\n              }\n              _context.next = 71;\n              return this.client.invoke(this.request);\n            case 71:\n              result = _context.sent;\n              if (result instanceof tl_1.Api.messages.MessagesNotModified) {\n                this.total = result.count;\n              } else {\n                if (\"count\" in result) {\n                  this.total = result.count;\n                } else {\n                  this.total = result.messages.length;\n                }\n              }\n              return _context.abrupt(\"return\", false);\n            case 74:\n              if (!this.waitTime) {\n                this.waitTime = this.limit > 3000 ? 1 : 0;\n              }\n              if (this.reverse && !(this.request instanceof tl_1.Api.messages.SearchGlobal)) {\n                this.request.addOffset -= _MAX_CHUNK_SIZE;\n              }\n              this.addOffset = addOffset;\n              this.maxId = maxId;\n              this.minId = minId;\n              this.lastId = this.reverse ? 0 : Number.MAX_SAFE_INTEGER;\n            case 80:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[40, 52, 55, 65], [56,, 60, 64]]);\n      }));\n      function _init(_x) {\n        return _init2.apply(this, arguments);\n      }\n      return _init;\n    }()\n  }, {\n    key: \"_loadNextChunk\",\n    value: function () {\n      var _loadNextChunk2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _a, r, entities, _i, _arr, x, messages, _iterator, _step, message;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (this.request) {\n                _context2.next = 2;\n                break;\n              }\n              throw new Error(\"Request not set yet\");\n            case 2:\n              this.request.limit = Math.min(this.left, _MAX_CHUNK_SIZE);\n              if (this.reverse && this.request.limit != _MAX_CHUNK_SIZE) {\n                if (!(this.request instanceof tl_1.Api.messages.SearchGlobal)) {\n                  this.request.addOffset = this.addOffset - this.request.limit;\n                }\n              }\n              _context2.next = 6;\n              return this.client.invoke(this.request);\n            case 6:\n              r = _context2.sent;\n              if (!(r instanceof tl_1.Api.messages.MessagesNotModified)) {\n                _context2.next = 9;\n                break;\n              }\n              return _context2.abrupt(\"return\", true);\n            case 9:\n              if (\"count\" in r) {\n                this.total = r.count;\n              } else {\n                this.total = r.messages.length;\n              }\n              entities = new Map();\n              for (_i = 0, _arr = [].concat(_toConsumableArray(r.users), _toConsumableArray(r.chats)); _i < _arr.length; _i++) {\n                x = _arr[_i];\n                entities.set((0, Utils_1.getPeerId)(x), x);\n              }\n              messages = this.reverse ? r.messages.reverse() : r.messages;\n              _iterator = _createForOfIteratorHelper(messages);\n              _context2.prev = 14;\n              _iterator.s();\n            case 16:\n              if ((_step = _iterator.n()).done) {\n                _context2.next = 26;\n                break;\n              }\n              message = _step.value;\n              if (this._messageInRange(message)) {\n                _context2.next = 20;\n                break;\n              }\n              return _context2.abrupt(\"return\", true);\n            case 20:\n              this.lastId = message.id;\n              try {\n                // if this fails it shouldn't be a big problem\n                message._finishInit(this.client, entities, this.entity);\n              } catch (e) {}\n              message._entities = entities;\n              (_a = this.buffer) === null || _a === void 0 ? void 0 : _a.push(message);\n            case 24:\n              _context2.next = 16;\n              break;\n            case 26:\n              _context2.next = 31;\n              break;\n            case 28:\n              _context2.prev = 28;\n              _context2.t0 = _context2[\"catch\"](14);\n              _iterator.e(_context2.t0);\n            case 31:\n              _context2.prev = 31;\n              _iterator.f();\n              return _context2.finish(31);\n            case 34:\n              if (!(r.messages.length < this.request.limit)) {\n                _context2.next = 36;\n                break;\n              }\n              return _context2.abrupt(\"return\", true);\n            case 36:\n              if (!this.buffer) {\n                _context2.next = 40;\n                break;\n              }\n              this._updateOffset(this.buffer[this.buffer.length - 1], r);\n              _context2.next = 41;\n              break;\n            case 40:\n              return _context2.abrupt(\"return\", true);\n            case 41:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[14, 28, 31, 34]]);\n      }));\n      function _loadNextChunk() {\n        return _loadNextChunk2.apply(this, arguments);\n      }\n      return _loadNextChunk;\n    }()\n  }, {\n    key: \"_messageInRange\",\n    value: function _messageInRange(message) {\n      if (this.entity) {\n        if (this.reverse) {\n          if (message.id <= this.lastId || message.id >= this.maxId) {\n            return false;\n          }\n        } else {\n          if (message.id >= this.lastId || message.id <= this.minId) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n  }, {\n    key: _Symbol$asyncIterator,\n    value: function value() {\n      return _get(_getPrototypeOf(_MessagesIter.prototype), Symbol.asyncIterator, this).call(this);\n    }\n  }, {\n    key: \"_updateOffset\",\n    value: function _updateOffset(lastMessage, response) {\n      if (!this.request) {\n        throw new Error(\"Request not set yet\");\n      }\n      this.request.offsetId = Number(lastMessage.id);\n      if (this.reverse) {\n        this.request.offsetId += 1;\n      }\n      if (this.request instanceof tl_1.Api.messages.Search) {\n        this.request.maxDate = -1;\n      } else {\n        if (!(this.request instanceof tl_1.Api.messages.SearchGlobal)) {\n          this.request.offsetDate = lastMessage.date;\n        }\n      }\n      if (this.request instanceof tl_1.Api.messages.SearchGlobal) {\n        if (lastMessage.inputChat) {\n          this.request.offsetPeer = lastMessage.inputChat;\n        } else {\n          this.request.offsetPeer = new tl_1.Api.InputPeerEmpty();\n        }\n        this.request.offsetRate = response.nextRate;\n      }\n    }\n  }]);\n  return _MessagesIter;\n}(requestIter_1.RequestIter, Symbol.asyncIterator);\nexports._MessagesIter = _MessagesIter;\nvar _IDsIter = /*#__PURE__*/function (_requestIter_1$Reques2, _Symbol$asyncIterator2) {\n  _inherits(_IDsIter, _requestIter_1$Reques2);\n  var _super2 = _createSuper(_IDsIter);\n  function _IDsIter() {\n    _classCallCheck(this, _IDsIter);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(_IDsIter, [{\n    key: \"_init\",\n    value: function () {\n      var _init3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(_ref2) {\n        var entity, ids;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              entity = _ref2.entity, ids = _ref2.ids;\n              this.total = ids.length;\n              this._ids = this.reverse ? ids.reverse() : ids;\n              this._offset = 0;\n              if (!entity) {\n                _context3.next = 10;\n                break;\n              }\n              _context3.next = 7;\n              return this.client.getInputEntity(entity);\n            case 7:\n              _context3.t0 = _context3.sent;\n              _context3.next = 11;\n              break;\n            case 10:\n              _context3.t0 = undefined;\n            case 11:\n              this._entity = _context3.t0;\n              this._ty = this._entity ? (0, Helpers_1._entityType)(this._entity) : undefined;\n              if (!this.waitTime) {\n                this.waitTime = this.limit > 300 ? 10 : 0;\n              }\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function _init(_x2) {\n        return _init3.apply(this, arguments);\n      }\n      return _init;\n    }()\n  }, {\n    key: _Symbol$asyncIterator2,\n    value: function value() {\n      return _get(_getPrototypeOf(_IDsIter.prototype), Symbol.asyncIterator, this).call(this);\n    }\n  }, {\n    key: \"_loadNextChunk\",\n    value: function () {\n      var _loadNextChunk3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _a, _b, _c, ids, fromId, r, _a2, entities, _i2, _arr2, entity, message, _iterator2, _step2, temp;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              ids = this._ids.slice(this._offset, this._offset + _MAX_CHUNK_SIZE);\n              if (ids.length) {\n                _context4.next = 3;\n                break;\n              }\n              return _context4.abrupt(\"return\", false);\n            case 3:\n              this._offset += _MAX_CHUNK_SIZE;\n              if (!(this._ty == Helpers_1._EntityType.CHANNEL)) {\n                _context4.next = 20;\n                break;\n              }\n              _context4.prev = 5;\n              _context4.next = 8;\n              return this.client.invoke(new tl_1.Api.channels.GetMessages({\n                channel: this._entity,\n                id: ids\n              }));\n            case 8:\n              r = _context4.sent;\n              _context4.next = 18;\n              break;\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](5);\n              if (!(_context4.t0.errorMessage == \"MESSAGE_IDS_EMPTY\")) {\n                _context4.next = 17;\n                break;\n              }\n              r = new tl_1.Api.messages.MessagesNotModified({\n                count: ids.length\n              });\n              _context4.next = 18;\n              break;\n            case 17:\n              throw _context4.t0;\n            case 18:\n              _context4.next = 27;\n              break;\n            case 20:\n              _context4.next = 22;\n              return this.client.invoke(new tl_1.Api.messages.GetMessages({\n                id: ids\n              }));\n            case 22:\n              r = _context4.sent;\n              if (!this._entity) {\n                _context4.next = 27;\n                break;\n              }\n              _context4.next = 26;\n              return (0, users_1._getPeer)(this.client, this._entity);\n            case 26:\n              fromId = _context4.sent;\n            case 27:\n              if (!(r instanceof tl_1.Api.messages.MessagesNotModified)) {\n                _context4.next = 30;\n                break;\n              }\n              (_a = this.buffer) === null || _a === void 0 ? void 0 : (_a2 = _a).push.apply(_a2, _toConsumableArray(Array(ids.length)));\n              return _context4.abrupt(\"return\");\n            case 30:\n              entities = new Map();\n              for (_i2 = 0, _arr2 = [].concat(_toConsumableArray(r.users), _toConsumableArray(r.chats)); _i2 < _arr2.length; _i2++) {\n                entity = _arr2[_i2];\n                entities.set(__1.utils.getPeerId(entity), entity);\n              }\n              _iterator2 = _createForOfIteratorHelper(r.messages);\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  message = _step2.value;\n                  if (message instanceof tl_1.Api.MessageEmpty || fromId && __1.utils.getPeerId(message.peerId) != __1.utils.getPeerId(fromId)) {\n                    (_b = this.buffer) === null || _b === void 0 ? void 0 : _b.push(undefined);\n                  } else {\n                    temp = message;\n                    temp._finishInit(this.client, entities, this._entity);\n                    temp._entities = entities;\n                    (_c = this.buffer) === null || _c === void 0 ? void 0 : _c.push(temp);\n                  }\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n            case 34:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[5, 11]]);\n      }));\n      function _loadNextChunk() {\n        return _loadNextChunk3.apply(this, arguments);\n      }\n      return _loadNextChunk;\n    }()\n  }]);\n  return _IDsIter;\n}(requestIter_1.RequestIter, Symbol.asyncIterator);\nexports._IDsIter = _IDsIter;\nvar IterMessagesDefaults = {\n  limit: undefined,\n  offsetDate: undefined,\n  offsetId: 0,\n  maxId: 0,\n  minId: 0,\n  addOffset: 0,\n  search: undefined,\n  filter: undefined,\n  fromUser: undefined,\n  waitTime: undefined,\n  ids: undefined,\n  reverse: false,\n  replyTo: undefined,\n  scheduled: false\n};\n/** @hidden */\nfunction iterMessages(client, entity, options) {\n  var _Object$assign = Object.assign(Object.assign({}, IterMessagesDefaults), options),\n    limit = _Object$assign.limit,\n    offsetDate = _Object$assign.offsetDate,\n    offsetId = _Object$assign.offsetId,\n    maxId = _Object$assign.maxId,\n    minId = _Object$assign.minId,\n    addOffset = _Object$assign.addOffset,\n    search = _Object$assign.search,\n    filter = _Object$assign.filter,\n    fromUser = _Object$assign.fromUser,\n    waitTime = _Object$assign.waitTime,\n    ids = _Object$assign.ids,\n    reverse = _Object$assign.reverse,\n    replyTo = _Object$assign.replyTo;\n  if (ids) {\n    var idsArray;\n    if (!(0, Helpers_1.isArrayLike)(ids)) {\n      idsArray = [ids];\n    } else {\n      idsArray = ids;\n    }\n    return new _IDsIter(client, idsArray.length, {\n      reverse: reverse,\n      waitTime: waitTime\n    }, {\n      entity: entity,\n      ids: idsArray\n    });\n  }\n  return new _MessagesIter(client, limit, {\n    waitTime: waitTime,\n    reverse: reverse\n  }, {\n    entity: entity,\n    offsetId: offsetId,\n    minId: minId,\n    maxId: maxId,\n    fromUser: fromUser,\n    offsetDate: offsetDate,\n    addOffset: addOffset,\n    filter: filter,\n    search: search,\n    replyTo: replyTo\n  });\n}\nexports.iterMessages = iterMessages;\n/** @hidden */\nfunction getMessages(_x3, _x4, _x5) {\n  return _getMessages.apply(this, arguments);\n}\nfunction _getMessages() {\n  _getMessages = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(client, entity, params) {\n    var e_2, _a, it, ids, it_1, it_1_1, message;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          if (Object.keys(params).length == 1 && params.limit === undefined) {\n            if (params.minId === undefined && params.maxId === undefined) {\n              params.limit = undefined;\n            } else {\n              params.limit = 1;\n            }\n          }\n          it = client.iterMessages(entity, params);\n          ids = params.ids;\n          if (!(ids && !(0, Helpers_1.isArrayLike)(ids))) {\n            _context5.next = 30;\n            break;\n          }\n          _context5.prev = 4;\n          it_1 = __asyncValues(it);\n        case 6:\n          _context5.next = 8;\n          return it_1.next();\n        case 8:\n          it_1_1 = _context5.sent;\n          if (it_1_1.done) {\n            _context5.next = 14;\n            break;\n          }\n          message = it_1_1.value;\n          return _context5.abrupt(\"return\", [message]);\n        case 12:\n          _context5.next = 6;\n          break;\n        case 14:\n          _context5.next = 19;\n          break;\n        case 16:\n          _context5.prev = 16;\n          _context5.t0 = _context5[\"catch\"](4);\n          e_2 = {\n            error: _context5.t0\n          };\n        case 19:\n          _context5.prev = 19;\n          _context5.prev = 20;\n          if (!(it_1_1 && !it_1_1.done && (_a = it_1.return))) {\n            _context5.next = 24;\n            break;\n          }\n          _context5.next = 24;\n          return _a.call(it_1);\n        case 24:\n          _context5.prev = 24;\n          if (!e_2) {\n            _context5.next = 27;\n            break;\n          }\n          throw e_2.error;\n        case 27:\n          return _context5.finish(24);\n        case 28:\n          return _context5.finish(19);\n        case 29:\n          return _context5.abrupt(\"return\", []);\n        case 30:\n          _context5.next = 32;\n          return it.collect();\n        case 32:\n          return _context5.abrupt(\"return\", _context5.sent);\n        case 33:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[4, 16, 19, 29], [20,, 24, 28]]);\n  }));\n  return _getMessages.apply(this, arguments);\n}\nexports.getMessages = getMessages;\n// region Message\n/** @hidden */\nfunction sendMessage(_x6, _x7) {\n  return _sendMessage.apply(this, arguments);\n}\nfunction _sendMessage() {\n  _sendMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(client, /** To who will it be sent. */\n  entity) {\n    var _ref6,\n      message,\n      replyTo,\n      attributes,\n      parseMode,\n      formattingEntities,\n      _ref6$linkPreview,\n      linkPreview,\n      file,\n      thumb,\n      forceDocument,\n      clearDraft,\n      buttons,\n      silent,\n      supportStreaming,\n      schedule,\n      noforwards,\n      commentTo,\n      discussionData,\n      markup,\n      request,\n      _yield,\n      _yield2,\n      result,\n      msg,\n      _args6 = arguments;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          _ref6 = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : {}, message = _ref6.message, replyTo = _ref6.replyTo, attributes = _ref6.attributes, parseMode = _ref6.parseMode, formattingEntities = _ref6.formattingEntities, _ref6$linkPreview = _ref6.linkPreview, linkPreview = _ref6$linkPreview === void 0 ? true : _ref6$linkPreview, file = _ref6.file, thumb = _ref6.thumb, forceDocument = _ref6.forceDocument, clearDraft = _ref6.clearDraft, buttons = _ref6.buttons, silent = _ref6.silent, supportStreaming = _ref6.supportStreaming, schedule = _ref6.schedule, noforwards = _ref6.noforwards, commentTo = _ref6.commentTo;\n          if (!file) {\n            _context6.next = 3;\n            break;\n          }\n          return _context6.abrupt(\"return\", client.sendFile(entity, {\n            file: file,\n            caption: message ? typeof message == \"string\" ? message : message.message : \"\",\n            forceDocument: forceDocument,\n            clearDraft: clearDraft,\n            replyTo: replyTo,\n            attributes: attributes,\n            thumb: thumb,\n            supportsStreaming: supportStreaming,\n            parseMode: parseMode,\n            formattingEntities: formattingEntities,\n            silent: silent,\n            scheduleDate: schedule,\n            buttons: buttons,\n            noforwards: noforwards,\n            commentTo: commentTo\n          }));\n        case 3:\n          _context6.next = 5;\n          return client.getInputEntity(entity);\n        case 5:\n          entity = _context6.sent;\n          if (!(commentTo != undefined)) {\n            _context6.next = 12;\n            break;\n          }\n          _context6.next = 9;\n          return getCommentData(client, entity, commentTo);\n        case 9:\n          discussionData = _context6.sent;\n          entity = discussionData.entity;\n          replyTo = discussionData.replyTo;\n        case 12:\n          if (!(message && message instanceof tl_1.Api.Message)) {\n            _context6.next = 21;\n            break;\n          }\n          if (buttons == undefined) {\n            markup = message.replyMarkup;\n          } else {\n            markup = client.buildReplyMarkup(buttons);\n          }\n          if (silent == undefined) {\n            silent = message.silent;\n          }\n          if (!(message.media && !(message.media instanceof tl_1.Api.MessageMediaWebPage))) {\n            _context6.next = 17;\n            break;\n          }\n          return _context6.abrupt(\"return\", client.sendFile(entity, {\n            file: message.media,\n            caption: message.message,\n            silent: silent,\n            replyTo: replyTo,\n            buttons: markup,\n            formattingEntities: message.entities,\n            scheduleDate: schedule\n          }));\n        case 17:\n          request = new tl_1.Api.messages.SendMessage({\n            peer: entity,\n            message: message.message || \"\",\n            silent: silent,\n            replyToMsgId: (0, Utils_1.getMessageId)(replyTo),\n            replyMarkup: markup,\n            entities: message.entities,\n            clearDraft: clearDraft,\n            noWebpage: !(message.media instanceof tl_1.Api.MessageMediaWebPage),\n            scheduleDate: schedule,\n            noforwards: noforwards\n          });\n          message = message.message;\n          _context6.next = 31;\n          break;\n        case 21:\n          if (!(formattingEntities == undefined)) {\n            _context6.next = 28;\n            break;\n          }\n          _context6.next = 24;\n          return (0, messageParse_1._parseMessageText)(client, message || \"\", parseMode);\n        case 24:\n          _yield = _context6.sent;\n          _yield2 = _slicedToArray(_yield, 2);\n          message = _yield2[0];\n          formattingEntities = _yield2[1];\n        case 28:\n          if (message) {\n            _context6.next = 30;\n            break;\n          }\n          throw new Error(\"The message cannot be empty unless a file is provided\");\n        case 30:\n          request = new tl_1.Api.messages.SendMessage({\n            peer: entity,\n            message: message.toString(),\n            entities: formattingEntities,\n            noWebpage: !linkPreview,\n            replyToMsgId: (0, Utils_1.getMessageId)(replyTo),\n            clearDraft: clearDraft,\n            silent: silent,\n            replyMarkup: client.buildReplyMarkup(buttons),\n            scheduleDate: schedule,\n            noforwards: noforwards\n          });\n        case 31:\n          _context6.next = 33;\n          return client.invoke(request);\n        case 33:\n          result = _context6.sent;\n          if (!(result instanceof tl_1.Api.UpdateShortSentMessage)) {\n            _context6.next = 51;\n            break;\n          }\n          _context6.t0 = tl_1.Api.Message;\n          _context6.t1 = result.id;\n          _context6.next = 39;\n          return (0, users_1._getPeer)(client, entity);\n        case 39:\n          _context6.t2 = _context6.sent;\n          _context6.t3 = message;\n          _context6.t4 = result.date;\n          _context6.t5 = result.out;\n          _context6.t6 = result.media;\n          _context6.t7 = result.entities;\n          _context6.t8 = request.replyMarkup;\n          _context6.t9 = result.ttlPeriod;\n          _context6.t10 = {\n            id: _context6.t1,\n            peerId: _context6.t2,\n            message: _context6.t3,\n            date: _context6.t4,\n            out: _context6.t5,\n            media: _context6.t6,\n            entities: _context6.t7,\n            replyMarkup: _context6.t8,\n            ttlPeriod: _context6.t9\n          };\n          msg = new _context6.t0(_context6.t10);\n          msg._finishInit(client, new Map(), entity);\n          return _context6.abrupt(\"return\", msg);\n        case 51:\n          return _context6.abrupt(\"return\", client._getResponseMessage(request, result, entity));\n        case 52:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return _sendMessage.apply(this, arguments);\n}\nexports.sendMessage = sendMessage;\n/** @hidden */\nfunction forwardMessages(_x8, _x9, _x10) {\n  return _forwardMessages.apply(this, arguments);\n}\nfunction _forwardMessages() {\n  _forwardMessages = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(client, entity, _ref3) {\n    var messages, fromPeer, silent, schedule, noforwards, fromPeerId, getKey, sent, _iterator3, _step3, _step3$value, chatId, chunk, chat, numbers, request, result;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          messages = _ref3.messages, fromPeer = _ref3.fromPeer, silent = _ref3.silent, schedule = _ref3.schedule, noforwards = _ref3.noforwards;\n          if (!(0, Helpers_1.isArrayLike)(messages)) {\n            messages = [messages];\n          }\n          _context7.next = 4;\n          return client.getInputEntity(entity);\n        case 4:\n          entity = _context7.sent;\n          if (!fromPeer) {\n            _context7.next = 12;\n            break;\n          }\n          _context7.next = 8;\n          return client.getInputEntity(fromPeer);\n        case 8:\n          fromPeer = _context7.sent;\n          _context7.next = 11;\n          return client.getPeerId(fromPeer);\n        case 11:\n          fromPeerId = _context7.sent;\n        case 12:\n          getKey = function getKey(m) {\n            if (m instanceof tl_1.Api.Message) {\n              return m.chatId;\n            }\n            var msgId = (0, Utils_1.parseID)(m);\n            if (msgId) {\n              if (fromPeerId !== undefined) {\n                return fromPeerId;\n              }\n              throw new Error(\"fromPeer must be given if integer IDs are used\");\n            } else {\n              throw new Error(\"Cannot forward \".concat(m));\n            }\n          };\n          sent = [];\n          _iterator3 = _createForOfIteratorHelper((0, Helpers_1.groupBy)(messages, getKey));\n          _context7.prev = 15;\n          _iterator3.s();\n        case 17:\n          if ((_step3 = _iterator3.n()).done) {\n            _context7.next = 38;\n            break;\n          }\n          _step3$value = _slicedToArray(_step3.value, 2), chatId = _step3$value[0], chunk = _step3$value[1];\n          chat = void 0;\n          numbers = [];\n          if (!(typeof chunk[0] == \"number\")) {\n            _context7.next = 26;\n            break;\n          }\n          chat = fromPeer;\n          numbers = chunk;\n          _context7.next = 30;\n          break;\n        case 26:\n          _context7.next = 28;\n          return chunk[0].getInputChat();\n        case 28:\n          chat = _context7.sent;\n          numbers = chunk.map(function (m) {\n            return m.id;\n          });\n        case 30:\n          chunk.push();\n          request = new tl_1.Api.messages.ForwardMessages({\n            fromPeer: chat,\n            id: numbers,\n            toPeer: entity,\n            silent: silent,\n            scheduleDate: schedule,\n            noforwards: noforwards\n          });\n          _context7.next = 34;\n          return client.invoke(request);\n        case 34:\n          result = _context7.sent;\n          sent.push(client._getResponseMessage(request, result, entity));\n        case 36:\n          _context7.next = 17;\n          break;\n        case 38:\n          _context7.next = 43;\n          break;\n        case 40:\n          _context7.prev = 40;\n          _context7.t0 = _context7[\"catch\"](15);\n          _iterator3.e(_context7.t0);\n        case 43:\n          _context7.prev = 43;\n          _iterator3.f();\n          return _context7.finish(43);\n        case 46:\n          return _context7.abrupt(\"return\", sent);\n        case 47:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7, null, [[15, 40, 43, 46]]);\n  }));\n  return _forwardMessages.apply(this, arguments);\n}\nexports.forwardMessages = forwardMessages;\n/** @hidden */\nfunction editMessage(_x11, _x12, _x13) {\n  return _editMessage.apply(this, arguments);\n}\nfunction _editMessage() {\n  _editMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(client, entity, _ref4) {\n    var message, text, parseMode, formattingEntities, _ref4$linkPreview, linkPreview, file, forceDocument, buttons, schedule, id, markup, entities, inputMedia, _yield3, fileHandle, media, image, _yield4, _yield5, request, result;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          message = _ref4.message, text = _ref4.text, parseMode = _ref4.parseMode, formattingEntities = _ref4.formattingEntities, _ref4$linkPreview = _ref4.linkPreview, linkPreview = _ref4$linkPreview === void 0 ? true : _ref4$linkPreview, file = _ref4.file, forceDocument = _ref4.forceDocument, buttons = _ref4.buttons, schedule = _ref4.schedule;\n          if (!(typeof message === \"number\" && typeof text === \"undefined\" && !file && !schedule)) {\n            _context8.next = 3;\n            break;\n          }\n          throw Error(\"You have to provide either file or text or schedule property.\");\n        case 3:\n          _context8.next = 5;\n          return client.getInputEntity(entity);\n        case 5:\n          entity = _context8.sent;\n          if (!file) {\n            _context8.next = 14;\n            break;\n          }\n          _context8.next = 9;\n          return (0, uploads_1._fileToMedia)(client, {\n            file: file,\n            forceDocument: forceDocument\n          });\n        case 9:\n          _yield3 = _context8.sent;\n          fileHandle = _yield3.fileHandle;\n          media = _yield3.media;\n          image = _yield3.image;\n          inputMedia = media;\n        case 14:\n          if (!(message instanceof tl_1.Api.Message)) {\n            _context8.next = 22;\n            break;\n          }\n          id = (0, Utils_1.getMessageId)(message);\n          text = message.message;\n          entities = message.entities;\n          if (buttons == undefined) {\n            markup = message.replyMarkup;\n          } else {\n            markup = client.buildReplyMarkup(buttons);\n          }\n          if (message.media) {\n            inputMedia = (0, Utils_1.getInputMedia)(message.media, {\n              forceDocument: forceDocument\n            });\n          }\n          _context8.next = 36;\n          break;\n        case 22:\n          if (!(typeof message !== \"number\")) {\n            _context8.next = 24;\n            break;\n          }\n          throw Error(\"editMessageParams.message must be either a number or a Api.Message type\");\n        case 24:\n          id = message;\n          if (!(formattingEntities == undefined)) {\n            _context8.next = 34;\n            break;\n          }\n          _context8.next = 28;\n          return (0, messageParse_1._parseMessageText)(client, text || \"\", parseMode);\n        case 28:\n          _yield4 = _context8.sent;\n          _yield5 = _slicedToArray(_yield4, 2);\n          text = _yield5[0];\n          entities = _yield5[1];\n          _context8.next = 35;\n          break;\n        case 34:\n          entities = formattingEntities;\n        case 35:\n          markup = client.buildReplyMarkup(buttons);\n        case 36:\n          request = new tl_1.Api.messages.EditMessage({\n            peer: entity,\n            id: id,\n            message: text,\n            noWebpage: !linkPreview,\n            entities: entities,\n            media: inputMedia,\n            replyMarkup: markup,\n            scheduleDate: schedule\n          });\n          _context8.next = 39;\n          return client.invoke(request);\n        case 39:\n          result = _context8.sent;\n          return _context8.abrupt(\"return\", client._getResponseMessage(request, result, entity));\n        case 41:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8);\n  }));\n  return _editMessage.apply(this, arguments);\n}\nexports.editMessage = editMessage;\n/** @hidden */\nfunction deleteMessages(_x14, _x15, _x16, _x17) {\n  return _deleteMessages.apply(this, arguments);\n}\nfunction _deleteMessages() {\n  _deleteMessages = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(client, entity, messageIds, _ref5) {\n    var _ref5$revoke, revoke, ty, ids, _iterator4, _step4, messageId, results, _iterator5, _step5, chunk, _iterator6, _step6, _chunk;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          _ref5$revoke = _ref5.revoke, revoke = _ref5$revoke === void 0 ? false : _ref5$revoke;\n          ty = Helpers_1._EntityType.USER;\n          if (!entity) {\n            _context9.next = 7;\n            break;\n          }\n          _context9.next = 5;\n          return client.getInputEntity(entity);\n        case 5:\n          entity = _context9.sent;\n          ty = (0, Helpers_1._entityType)(entity);\n        case 7:\n          ids = [];\n          _iterator4 = _createForOfIteratorHelper(messageIds);\n          _context9.prev = 9;\n          _iterator4.s();\n        case 11:\n          if ((_step4 = _iterator4.n()).done) {\n            _context9.next = 24;\n            break;\n          }\n          messageId = _step4.value;\n          if (!(messageId instanceof tl_1.Api.Message || messageId instanceof tl_1.Api.MessageService || messageId instanceof tl_1.Api.MessageEmpty)) {\n            _context9.next = 17;\n            break;\n          }\n          ids.push(messageId.id);\n          _context9.next = 22;\n          break;\n        case 17:\n          if (!(typeof messageId === \"number\")) {\n            _context9.next = 21;\n            break;\n          }\n          ids.push(messageId);\n          _context9.next = 22;\n          break;\n        case 21:\n          throw new Error(\"Cannot convert \".concat(messageId, \" to an integer\"));\n        case 22:\n          _context9.next = 11;\n          break;\n        case 24:\n          _context9.next = 29;\n          break;\n        case 26:\n          _context9.prev = 26;\n          _context9.t0 = _context9[\"catch\"](9);\n          _iterator4.e(_context9.t0);\n        case 29:\n          _context9.prev = 29;\n          _iterator4.f();\n          return _context9.finish(29);\n        case 32:\n          results = [];\n          if (ty == Helpers_1._EntityType.CHANNEL) {\n            _iterator5 = _createForOfIteratorHelper(__1.utils.chunks(ids));\n            try {\n              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                chunk = _step5.value;\n                results.push(client.invoke(new tl_1.Api.channels.DeleteMessages({\n                  channel: entity,\n                  id: chunk\n                })));\n              }\n            } catch (err) {\n              _iterator5.e(err);\n            } finally {\n              _iterator5.f();\n            }\n          } else {\n            _iterator6 = _createForOfIteratorHelper(__1.utils.chunks(ids));\n            try {\n              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                _chunk = _step6.value;\n                results.push(client.invoke(new tl_1.Api.messages.DeleteMessages({\n                  id: _chunk,\n                  revoke: revoke\n                })));\n              }\n            } catch (err) {\n              _iterator6.e(err);\n            } finally {\n              _iterator6.f();\n            }\n          }\n          return _context9.abrupt(\"return\", Promise.all(results));\n        case 35:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9, null, [[9, 26, 29, 32]]);\n  }));\n  return _deleteMessages.apply(this, arguments);\n}\nexports.deleteMessages = deleteMessages;\n/** @hidden */\nfunction pinMessage(_x18, _x19, _x20, _x21) {\n  return _pinMessage.apply(this, arguments);\n}\nfunction _pinMessage() {\n  _pinMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(client, entity, message, pinMessageParams) {\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return _pin(client, entity, message, false, pinMessageParams === null || pinMessageParams === void 0 ? void 0 : pinMessageParams.notify, pinMessageParams === null || pinMessageParams === void 0 ? void 0 : pinMessageParams.pmOneSide);\n        case 2:\n          return _context10.abrupt(\"return\", _context10.sent);\n        case 3:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10);\n  }));\n  return _pinMessage.apply(this, arguments);\n}\nexports.pinMessage = pinMessage;\n/** @hidden */\nfunction unpinMessage(_x22, _x23, _x24, _x25) {\n  return _unpinMessage.apply(this, arguments);\n}\nfunction _unpinMessage() {\n  _unpinMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(client, entity, message, unpinMessageParams) {\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return _pin(client, entity, message, true, unpinMessageParams === null || unpinMessageParams === void 0 ? void 0 : unpinMessageParams.notify, unpinMessageParams === null || unpinMessageParams === void 0 ? void 0 : unpinMessageParams.pmOneSide);\n        case 2:\n          return _context11.abrupt(\"return\", _context11.sent);\n        case 3:\n        case \"end\":\n          return _context11.stop();\n      }\n    }, _callee11);\n  }));\n  return _unpinMessage.apply(this, arguments);\n}\nexports.unpinMessage = unpinMessage;\n/** @hidden */\nfunction _pin(_x26, _x27, _x28, _x29) {\n  return _pin2.apply(this, arguments);\n}\nfunction _pin2() {\n  _pin2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(client, entity, message, unpin) {\n    var notify,\n      pmOneSide,\n      request,\n      result,\n      _args12 = arguments;\n    return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n      while (1) switch (_context12.prev = _context12.next) {\n        case 0:\n          notify = _args12.length > 4 && _args12[4] !== undefined ? _args12[4] : false;\n          pmOneSide = _args12.length > 5 && _args12[5] !== undefined ? _args12[5] : false;\n          message = __1.utils.getMessageId(message) || 0;\n          if (!(message === 0)) {\n            _context12.next = 7;\n            break;\n          }\n          _context12.next = 6;\n          return client.invoke(new tl_1.Api.messages.UnpinAllMessages({\n            peer: entity\n          }));\n        case 6:\n          return _context12.abrupt(\"return\", _context12.sent);\n        case 7:\n          _context12.next = 9;\n          return client.getInputEntity(entity);\n        case 9:\n          entity = _context12.sent;\n          request = new tl_1.Api.messages.UpdatePinnedMessage({\n            silent: !notify,\n            unpin: unpin,\n            pmOneside: pmOneSide,\n            peer: entity,\n            id: message\n          });\n          _context12.next = 13;\n          return client.invoke(request);\n        case 13:\n          result = _context12.sent;\n          if (!(unpin || !(\"updates\" in result) || \"updates\" in result && !result.updates)) {\n            _context12.next = 16;\n            break;\n          }\n          return _context12.abrupt(\"return\");\n        case 16:\n          return _context12.abrupt(\"return\", client._getResponseMessage(request, result, entity));\n        case 17:\n        case \"end\":\n          return _context12.stop();\n      }\n    }, _callee12);\n  }));\n  return _pin2.apply(this, arguments);\n}\nexports._pin = _pin;\n/** @hidden */\nfunction markAsRead(_x30, _x31, _x32, _x33) {\n  return _markAsRead.apply(this, arguments);\n}\nfunction _markAsRead() {\n  _markAsRead = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(client, entity, message, markAsReadParams) {\n    var maxId, maxIdIsUndefined;\n    return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n      while (1) switch (_context13.prev = _context13.next) {\n        case 0:\n          maxId = (markAsReadParams === null || markAsReadParams === void 0 ? void 0 : markAsReadParams.maxId) || 0;\n          maxIdIsUndefined = (markAsReadParams === null || markAsReadParams === void 0 ? void 0 : markAsReadParams.maxId) === undefined;\n          if (maxIdIsUndefined) {\n            if (message) {\n              if (Array.isArray(message)) {\n                maxId = Math.max.apply(Math, _toConsumableArray(message.map(function (v) {\n                  return __1.utils.getMessageId(v);\n                })));\n              } else {\n                maxId = __1.utils.getMessageId(message);\n              }\n            }\n          }\n          _context13.next = 5;\n          return client.getInputEntity(entity);\n        case 5:\n          entity = _context13.sent;\n          if (!(markAsReadParams && !markAsReadParams.clearMentions)) {\n            _context13.next = 11;\n            break;\n          }\n          _context13.next = 9;\n          return client.invoke(new tl_1.Api.messages.ReadMentions({\n            peer: entity\n          }));\n        case 9:\n          if (!(maxIdIsUndefined && message === undefined)) {\n            _context13.next = 11;\n            break;\n          }\n          return _context13.abrupt(\"return\", true);\n        case 11:\n          if (!((0, Helpers_1._entityType)(entity) === Helpers_1._EntityType.CHANNEL)) {\n            _context13.next = 17;\n            break;\n          }\n          _context13.next = 14;\n          return client.invoke(new tl_1.Api.channels.ReadHistory({\n            channel: entity,\n            maxId: maxId\n          }));\n        case 14:\n          return _context13.abrupt(\"return\", _context13.sent);\n        case 17:\n          _context13.next = 19;\n          return client.invoke(new tl_1.Api.messages.ReadHistory({\n            peer: entity,\n            maxId: maxId\n          }));\n        case 19:\n          return _context13.abrupt(\"return\", true);\n        case 20:\n        case \"end\":\n          return _context13.stop();\n      }\n    }, _callee13);\n  }));\n  return _markAsRead.apply(this, arguments);\n}\nexports.markAsRead = markAsRead;\n/** @hidden */\nfunction getCommentData(_x34, _x35, _x36) {\n  return _getCommentData.apply(this, arguments);\n}\nfunction _getCommentData() {\n  _getCommentData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(client, entity, message) {\n    var result, relevantMessage, chat, _iterator7, _step7, c;\n    return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n      while (1) switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return client.invoke(new tl_1.Api.messages.GetDiscussionMessage({\n            peer: entity,\n            msgId: __1.utils.getMessageId(message)\n          }));\n        case 2:\n          result = _context14.sent;\n          relevantMessage = result.messages[0];\n          _iterator7 = _createForOfIteratorHelper(result.chats);\n          _context14.prev = 5;\n          _iterator7.s();\n        case 7:\n          if ((_step7 = _iterator7.n()).done) {\n            _context14.next = 14;\n            break;\n          }\n          c = _step7.value;\n          if (!(relevantMessage.peerId instanceof tl_1.Api.PeerChannel && c.id.eq(relevantMessage.peerId.channelId))) {\n            _context14.next = 12;\n            break;\n          }\n          chat = c;\n          return _context14.abrupt(\"break\", 14);\n        case 12:\n          _context14.next = 7;\n          break;\n        case 14:\n          _context14.next = 19;\n          break;\n        case 16:\n          _context14.prev = 16;\n          _context14.t0 = _context14[\"catch\"](5);\n          _iterator7.e(_context14.t0);\n        case 19:\n          _context14.prev = 19;\n          _iterator7.f();\n          return _context14.finish(19);\n        case 22:\n          return _context14.abrupt(\"return\", {\n            entity: __1.utils.getInputPeer(chat),\n            replyTo: relevantMessage.id\n          });\n        case 23:\n        case \"end\":\n          return _context14.stop();\n      }\n    }, _callee14, null, [[5, 16, 19, 22]]);\n  }));\n  return _getCommentData.apply(this, arguments);\n}\nexports.getCommentData = getCommentData;\n// TODO do the rest","map":{"version":3,"names":["__asyncValues","o","Symbol","asyncIterator","TypeError","m","i","call","__values","iterator","verb","n","v","Promise","resolve","reject","settle","done","value","d","then","__importDefault","mod","__esModule","Object","defineProperty","exports","getCommentData","markAsRead","_pin","unpinMessage","pinMessage","deleteMessages","editMessage","forwardMessages","sendMessage","getMessages","iterMessages","_IDsIter","_MessagesIter","tl_1","require","requestIter_1","Helpers_1","Utils_1","__1","messageParse_1","users_1","big_integer_1","uploads_1","_MAX_CHUNK_SIZE","entity","offsetId","minId","maxId","fromUser","offsetDate","addOffset","filter","search","replyTo","client","getInputEntity","undefined","reverse","Error","Math","max","Number","MAX_SAFE_INTEGER","Api","InputPeerEmpty","InputMessagesFilterEmpty","request","messages","SearchGlobal","q","minDate","maxDate","offsetRate","offsetPeer","limit","GetReplies","peer","msgId","hash","default","zero","Search","fromId","_b","next","_c","id","e_1","error","_a","return","GetHistory","invoke","result","MessagesNotModified","total","count","length","waitTime","lastId","min","left","r","entities","Map","users","chats","x","set","getPeerId","message","_messageInRange","_finishInit","e","_entities","buffer","push","_updateOffset","lastMessage","response","date","inputChat","nextRate","RequestIter","ids","_ids","_offset","_entity","_ty","_entityType","slice","_EntityType","CHANNEL","channels","GetMessages","channel","errorMessage","_getPeer","Array","utils","MessageEmpty","peerId","temp","IterMessagesDefaults","scheduled","options","assign","idsArray","isArrayLike","params","keys","it","it_1","it_1_1","e_2","collect","attributes","parseMode","formattingEntities","linkPreview","file","thumb","forceDocument","clearDraft","buttons","silent","supportStreaming","schedule","noforwards","commentTo","sendFile","caption","supportsStreaming","scheduleDate","discussionData","Message","markup","replyMarkup","buildReplyMarkup","media","MessageMediaWebPage","SendMessage","replyToMsgId","getMessageId","noWebpage","_parseMessageText","toString","UpdateShortSentMessage","out","ttlPeriod","msg","_getResponseMessage","fromPeer","fromPeerId","getKey","chatId","parseID","sent","groupBy","chunk","chat","numbers","getInputChat","map","ForwardMessages","toPeer","text","_fileToMedia","fileHandle","image","inputMedia","getInputMedia","EditMessage","messageIds","revoke","ty","USER","messageId","MessageService","results","chunks","DeleteMessages","all","pinMessageParams","notify","pmOneSide","unpinMessageParams","unpin","UnpinAllMessages","UpdatePinnedMessage","pmOneside","updates","markAsReadParams","maxIdIsUndefined","isArray","clearMentions","ReadMentions","ReadHistory","GetDiscussionMessage","relevantMessage","c","PeerChannel","eq","channelId","getInputPeer"],"sources":["C:/Users/Yakov/Desktop/projects/node-projects/node-js-key-monitor/sladrus.github.io/node_modules/telegram/client/messages.js"],"sourcesContent":["\"use strict\";\r\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getCommentData = exports.markAsRead = exports._pin = exports.unpinMessage = exports.pinMessage = exports.deleteMessages = exports.editMessage = exports.forwardMessages = exports.sendMessage = exports.getMessages = exports.iterMessages = exports._IDsIter = exports._MessagesIter = void 0;\r\nconst tl_1 = require(\"../tl\");\r\nconst requestIter_1 = require(\"../requestIter\");\r\nconst Helpers_1 = require(\"../Helpers\");\r\nconst Utils_1 = require(\"../Utils\");\r\nconst __1 = require(\"../\");\r\nconst messageParse_1 = require(\"./messageParse\");\r\nconst users_1 = require(\"./users\");\r\nconst big_integer_1 = __importDefault(require(\"big-integer\"));\r\nconst uploads_1 = require(\"./uploads\");\r\nconst _MAX_CHUNK_SIZE = 100;\r\nclass _MessagesIter extends requestIter_1.RequestIter {\r\n    async _init({ entity, offsetId, minId, maxId, fromUser, offsetDate, addOffset, filter, search, replyTo, }) {\r\n        var e_1, _a;\r\n        if (entity) {\r\n            this.entity = await this.client.getInputEntity(entity);\r\n        }\r\n        else {\r\n            this.entity = undefined;\r\n            if (this.reverse) {\r\n                throw new Error(\"Cannot reverse global search\");\r\n            }\r\n        }\r\n        if (this.reverse) {\r\n            offsetId = Math.max(offsetId, minId);\r\n            if (offsetId && maxId) {\r\n                if (maxId - offsetId <= 1) {\r\n                    return false;\r\n                }\r\n            }\r\n            if (!maxId) {\r\n                maxId = Number.MAX_SAFE_INTEGER;\r\n            }\r\n        }\r\n        else {\r\n            offsetId = Math.max(offsetId, maxId);\r\n            if (offsetId && minId) {\r\n                if (offsetId - minId <= 1) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        if (this.reverse) {\r\n            if (offsetId) {\r\n                offsetId += 1;\r\n            }\r\n            else if (!offsetDate) {\r\n                offsetId = 1;\r\n            }\r\n        }\r\n        if (fromUser) {\r\n            fromUser = await this.client.getInputEntity(fromUser);\r\n        }\r\n        if (!this.entity && fromUser) {\r\n            this.entity = new tl_1.Api.InputPeerEmpty();\r\n        }\r\n        if (!filter) {\r\n            filter = new tl_1.Api.InputMessagesFilterEmpty();\r\n        }\r\n        if (!this.entity) {\r\n            this.request = new tl_1.Api.messages.SearchGlobal({\r\n                q: search || \"\",\r\n                filter: filter,\r\n                minDate: undefined,\r\n                // TODO fix this smh\r\n                maxDate: offsetDate,\r\n                offsetRate: undefined,\r\n                offsetPeer: new tl_1.Api.InputPeerEmpty(),\r\n                offsetId: offsetId,\r\n                limit: 1,\r\n            });\r\n        }\r\n        else if (replyTo !== undefined) {\r\n            this.request = new tl_1.Api.messages.GetReplies({\r\n                peer: this.entity,\r\n                msgId: replyTo,\r\n                offsetId: offsetId,\r\n                offsetDate: offsetDate,\r\n                addOffset: addOffset,\r\n                limit: 0,\r\n                maxId: 0,\r\n                minId: 0,\r\n                hash: big_integer_1.default.zero,\r\n            });\r\n        }\r\n        else if (search !== undefined ||\r\n            !(filter instanceof tl_1.Api.InputMessagesFilterEmpty) ||\r\n            fromUser !== undefined) {\r\n            this.request = new tl_1.Api.messages.Search({\r\n                peer: this.entity,\r\n                q: search || \"\",\r\n                filter: typeof filter === \"function\" ? new filter() : filter,\r\n                minDate: undefined,\r\n                maxDate: offsetDate,\r\n                offsetId: offsetId,\r\n                addOffset: addOffset,\r\n                limit: 0,\r\n                maxId: 0,\r\n                minId: 0,\r\n                hash: big_integer_1.default.zero,\r\n                fromId: fromUser,\r\n            });\r\n            if (!(filter instanceof tl_1.Api.InputMessagesFilterEmpty) &&\r\n                offsetDate &&\r\n                !search &&\r\n                !offsetId) {\r\n                try {\r\n                    for (var _b = __asyncValues(this.client.iterMessages(this.entity, {\r\n                        limit: 1,\r\n                        offsetDate: offsetDate,\r\n                    })), _c; _c = await _b.next(), !_c.done;) {\r\n                        const m = _c.value;\r\n                        this.request.offsetId = m.id + 1;\r\n                    }\r\n                }\r\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_c && !_c.done && (_a = _b.return)) await _a.call(_b);\r\n                    }\r\n                    finally { if (e_1) throw e_1.error; }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.request = new tl_1.Api.messages.GetHistory({\r\n                peer: this.entity,\r\n                limit: 1,\r\n                offsetDate: offsetDate,\r\n                offsetId: offsetId,\r\n                minId: 0,\r\n                maxId: 0,\r\n                addOffset: addOffset,\r\n                hash: big_integer_1.default.zero,\r\n            });\r\n        }\r\n        if (this.limit <= 0) {\r\n            const result = await this.client.invoke(this.request);\r\n            if (result instanceof tl_1.Api.messages.MessagesNotModified) {\r\n                this.total = result.count;\r\n            }\r\n            else {\r\n                if (\"count\" in result) {\r\n                    this.total = result.count;\r\n                }\r\n                else {\r\n                    this.total = result.messages.length;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        if (!this.waitTime) {\r\n            this.waitTime = this.limit > 3000 ? 1 : 0;\r\n        }\r\n        if (this.reverse &&\r\n            !(this.request instanceof tl_1.Api.messages.SearchGlobal)) {\r\n            this.request.addOffset -= _MAX_CHUNK_SIZE;\r\n        }\r\n        this.addOffset = addOffset;\r\n        this.maxId = maxId;\r\n        this.minId = minId;\r\n        this.lastId = this.reverse ? 0 : Number.MAX_SAFE_INTEGER;\r\n    }\r\n    async _loadNextChunk() {\r\n        var _a;\r\n        if (!this.request) {\r\n            throw new Error(\"Request not set yet\");\r\n        }\r\n        this.request.limit = Math.min(this.left, _MAX_CHUNK_SIZE);\r\n        if (this.reverse && this.request.limit != _MAX_CHUNK_SIZE) {\r\n            if (!(this.request instanceof tl_1.Api.messages.SearchGlobal)) {\r\n                this.request.addOffset = this.addOffset - this.request.limit;\r\n            }\r\n        }\r\n        const r = await this.client.invoke(this.request);\r\n        if (r instanceof tl_1.Api.messages.MessagesNotModified) {\r\n            return true;\r\n        }\r\n        if (\"count\" in r) {\r\n            this.total = r.count;\r\n        }\r\n        else {\r\n            this.total = r.messages.length;\r\n        }\r\n        const entities = new Map();\r\n        for (const x of [...r.users, ...r.chats]) {\r\n            entities.set((0, Utils_1.getPeerId)(x), x);\r\n        }\r\n        const messages = this.reverse\r\n            ? r.messages.reverse()\r\n            : r.messages;\r\n        for (const message of messages) {\r\n            if (!this._messageInRange(message)) {\r\n                return true;\r\n            }\r\n            this.lastId = message.id;\r\n            try {\r\n                // if this fails it shouldn't be a big problem\r\n                message._finishInit(this.client, entities, this.entity);\r\n            }\r\n            catch (e) { }\r\n            message._entities = entities;\r\n            (_a = this.buffer) === null || _a === void 0 ? void 0 : _a.push(message);\r\n        }\r\n        if (r.messages.length < this.request.limit) {\r\n            return true;\r\n        }\r\n        if (this.buffer) {\r\n            this._updateOffset(this.buffer[this.buffer.length - 1], r);\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _messageInRange(message) {\r\n        if (this.entity) {\r\n            if (this.reverse) {\r\n                if (message.id <= this.lastId || message.id >= this.maxId) {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                if (message.id >= this.lastId || message.id <= this.minId) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    [Symbol.asyncIterator]() {\r\n        return super[Symbol.asyncIterator]();\r\n    }\r\n    _updateOffset(lastMessage, response) {\r\n        if (!this.request) {\r\n            throw new Error(\"Request not set yet\");\r\n        }\r\n        this.request.offsetId = Number(lastMessage.id);\r\n        if (this.reverse) {\r\n            this.request.offsetId += 1;\r\n        }\r\n        if (this.request instanceof tl_1.Api.messages.Search) {\r\n            this.request.maxDate = -1;\r\n        }\r\n        else {\r\n            if (!(this.request instanceof tl_1.Api.messages.SearchGlobal)) {\r\n                this.request.offsetDate = lastMessage.date;\r\n            }\r\n        }\r\n        if (this.request instanceof tl_1.Api.messages.SearchGlobal) {\r\n            if (lastMessage.inputChat) {\r\n                this.request.offsetPeer = lastMessage.inputChat;\r\n            }\r\n            else {\r\n                this.request.offsetPeer = new tl_1.Api.InputPeerEmpty();\r\n            }\r\n            this.request.offsetRate = response.nextRate;\r\n        }\r\n    }\r\n}\r\nexports._MessagesIter = _MessagesIter;\r\nclass _IDsIter extends requestIter_1.RequestIter {\r\n    async _init({ entity, ids }) {\r\n        this.total = ids.length;\r\n        this._ids = this.reverse ? ids.reverse() : ids;\r\n        this._offset = 0;\r\n        this._entity = entity\r\n            ? await this.client.getInputEntity(entity)\r\n            : undefined;\r\n        this._ty = this._entity ? (0, Helpers_1._entityType)(this._entity) : undefined;\r\n        if (!this.waitTime) {\r\n            this.waitTime = this.limit > 300 ? 10 : 0;\r\n        }\r\n    }\r\n    [Symbol.asyncIterator]() {\r\n        return super[Symbol.asyncIterator]();\r\n    }\r\n    async _loadNextChunk() {\r\n        var _a, _b, _c;\r\n        const ids = this._ids.slice(this._offset, this._offset + _MAX_CHUNK_SIZE);\r\n        if (!ids.length) {\r\n            return false;\r\n        }\r\n        this._offset += _MAX_CHUNK_SIZE;\r\n        let fromId;\r\n        let r;\r\n        if (this._ty == Helpers_1._EntityType.CHANNEL) {\r\n            try {\r\n                r = await this.client.invoke(new tl_1.Api.channels.GetMessages({\r\n                    channel: this._entity,\r\n                    id: ids,\r\n                }));\r\n            }\r\n            catch (e) {\r\n                if (e.errorMessage == \"MESSAGE_IDS_EMPTY\") {\r\n                    r = new tl_1.Api.messages.MessagesNotModified({\r\n                        count: ids.length,\r\n                    });\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            r = await this.client.invoke(new tl_1.Api.messages.GetMessages({\r\n                id: ids,\r\n            }));\r\n            if (this._entity) {\r\n                fromId = await (0, users_1._getPeer)(this.client, this._entity);\r\n            }\r\n        }\r\n        if (r instanceof tl_1.Api.messages.MessagesNotModified) {\r\n            (_a = this.buffer) === null || _a === void 0 ? void 0 : _a.push(...Array(ids.length));\r\n            return;\r\n        }\r\n        const entities = new Map();\r\n        for (const entity of [...r.users, ...r.chats]) {\r\n            entities.set(__1.utils.getPeerId(entity), entity);\r\n        }\r\n        let message;\r\n        for (message of r.messages) {\r\n            if (message instanceof tl_1.Api.MessageEmpty ||\r\n                (fromId &&\r\n                    __1.utils.getPeerId(message.peerId) != __1.utils.getPeerId(fromId))) {\r\n                (_b = this.buffer) === null || _b === void 0 ? void 0 : _b.push(undefined);\r\n            }\r\n            else {\r\n                const temp = message;\r\n                temp._finishInit(this.client, entities, this._entity);\r\n                temp._entities = entities;\r\n                (_c = this.buffer) === null || _c === void 0 ? void 0 : _c.push(temp);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports._IDsIter = _IDsIter;\r\nconst IterMessagesDefaults = {\r\n    limit: undefined,\r\n    offsetDate: undefined,\r\n    offsetId: 0,\r\n    maxId: 0,\r\n    minId: 0,\r\n    addOffset: 0,\r\n    search: undefined,\r\n    filter: undefined,\r\n    fromUser: undefined,\r\n    waitTime: undefined,\r\n    ids: undefined,\r\n    reverse: false,\r\n    replyTo: undefined,\r\n    scheduled: false,\r\n};\r\n/** @hidden */\r\nfunction iterMessages(client, entity, options) {\r\n    const { limit, offsetDate, offsetId, maxId, minId, addOffset, search, filter, fromUser, waitTime, ids, reverse, replyTo, } = Object.assign(Object.assign({}, IterMessagesDefaults), options);\r\n    if (ids) {\r\n        let idsArray;\r\n        if (!(0, Helpers_1.isArrayLike)(ids)) {\r\n            idsArray = [ids];\r\n        }\r\n        else {\r\n            idsArray = ids;\r\n        }\r\n        return new _IDsIter(client, idsArray.length, {\r\n            reverse: reverse,\r\n            waitTime: waitTime,\r\n        }, {\r\n            entity: entity,\r\n            ids: idsArray,\r\n        });\r\n    }\r\n    return new _MessagesIter(client, limit, {\r\n        waitTime: waitTime,\r\n        reverse: reverse,\r\n    }, {\r\n        entity: entity,\r\n        offsetId: offsetId,\r\n        minId: minId,\r\n        maxId: maxId,\r\n        fromUser: fromUser,\r\n        offsetDate: offsetDate,\r\n        addOffset: addOffset,\r\n        filter: filter,\r\n        search: search,\r\n        replyTo: replyTo,\r\n    });\r\n}\r\nexports.iterMessages = iterMessages;\r\n/** @hidden */\r\nasync function getMessages(client, entity, params) {\r\n    var e_2, _a;\r\n    if (Object.keys(params).length == 1 && params.limit === undefined) {\r\n        if (params.minId === undefined && params.maxId === undefined) {\r\n            params.limit = undefined;\r\n        }\r\n        else {\r\n            params.limit = 1;\r\n        }\r\n    }\r\n    const it = client.iterMessages(entity, params);\r\n    const ids = params.ids;\r\n    if (ids && !(0, Helpers_1.isArrayLike)(ids)) {\r\n        try {\r\n            for (var it_1 = __asyncValues(it), it_1_1; it_1_1 = await it_1.next(), !it_1_1.done;) {\r\n                const message = it_1_1.value;\r\n                return [message];\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (it_1_1 && !it_1_1.done && (_a = it_1.return)) await _a.call(it_1);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n        return [];\r\n    }\r\n    return (await it.collect());\r\n}\r\nexports.getMessages = getMessages;\r\n// region Message\r\n/** @hidden */\r\nasync function sendMessage(client, \r\n/** To who will it be sent. */\r\nentity, \r\n/**  The message to be sent, or another message object to resend as a copy.<br/>\r\n * The maximum length for a message is 35,000 bytes or 4,096 characters.<br/>\r\n * Longer messages will not be sliced automatically, and you should slice them manually if the text to send is longer than said length. */\r\n{ message, replyTo, attributes, parseMode, formattingEntities, linkPreview = true, file, thumb, forceDocument, clearDraft, buttons, silent, supportStreaming, schedule, noforwards, commentTo, } = {}) {\r\n    if (file) {\r\n        return client.sendFile(entity, {\r\n            file: file,\r\n            caption: message\r\n                ? typeof message == \"string\"\r\n                    ? message\r\n                    : message.message\r\n                : \"\",\r\n            forceDocument: forceDocument,\r\n            clearDraft: clearDraft,\r\n            replyTo: replyTo,\r\n            attributes: attributes,\r\n            thumb: thumb,\r\n            supportsStreaming: supportStreaming,\r\n            parseMode: parseMode,\r\n            formattingEntities: formattingEntities,\r\n            silent: silent,\r\n            scheduleDate: schedule,\r\n            buttons: buttons,\r\n            noforwards: noforwards,\r\n            commentTo: commentTo,\r\n        });\r\n    }\r\n    entity = await client.getInputEntity(entity);\r\n    if (commentTo != undefined) {\r\n        const discussionData = await getCommentData(client, entity, commentTo);\r\n        entity = discussionData.entity;\r\n        replyTo = discussionData.replyTo;\r\n    }\r\n    let markup, request;\r\n    if (message && message instanceof tl_1.Api.Message) {\r\n        if (buttons == undefined) {\r\n            markup = message.replyMarkup;\r\n        }\r\n        else {\r\n            markup = client.buildReplyMarkup(buttons);\r\n        }\r\n        if (silent == undefined) {\r\n            silent = message.silent;\r\n        }\r\n        if (message.media &&\r\n            !(message.media instanceof tl_1.Api.MessageMediaWebPage)) {\r\n            return client.sendFile(entity, {\r\n                file: message.media,\r\n                caption: message.message,\r\n                silent: silent,\r\n                replyTo: replyTo,\r\n                buttons: markup,\r\n                formattingEntities: message.entities,\r\n                scheduleDate: schedule,\r\n            });\r\n        }\r\n        request = new tl_1.Api.messages.SendMessage({\r\n            peer: entity,\r\n            message: message.message || \"\",\r\n            silent: silent,\r\n            replyToMsgId: (0, Utils_1.getMessageId)(replyTo),\r\n            replyMarkup: markup,\r\n            entities: message.entities,\r\n            clearDraft: clearDraft,\r\n            noWebpage: !(message.media instanceof tl_1.Api.MessageMediaWebPage),\r\n            scheduleDate: schedule,\r\n            noforwards: noforwards,\r\n        });\r\n        message = message.message;\r\n    }\r\n    else {\r\n        if (formattingEntities == undefined) {\r\n            [message, formattingEntities] = await (0, messageParse_1._parseMessageText)(client, message || \"\", parseMode);\r\n        }\r\n        if (!message) {\r\n            throw new Error(\"The message cannot be empty unless a file is provided\");\r\n        }\r\n        request = new tl_1.Api.messages.SendMessage({\r\n            peer: entity,\r\n            message: message.toString(),\r\n            entities: formattingEntities,\r\n            noWebpage: !linkPreview,\r\n            replyToMsgId: (0, Utils_1.getMessageId)(replyTo),\r\n            clearDraft: clearDraft,\r\n            silent: silent,\r\n            replyMarkup: client.buildReplyMarkup(buttons),\r\n            scheduleDate: schedule,\r\n            noforwards: noforwards,\r\n        });\r\n    }\r\n    const result = await client.invoke(request);\r\n    if (result instanceof tl_1.Api.UpdateShortSentMessage) {\r\n        const msg = new tl_1.Api.Message({\r\n            id: result.id,\r\n            peerId: await (0, users_1._getPeer)(client, entity),\r\n            message: message,\r\n            date: result.date,\r\n            out: result.out,\r\n            media: result.media,\r\n            entities: result.entities,\r\n            replyMarkup: request.replyMarkup,\r\n            ttlPeriod: result.ttlPeriod,\r\n        });\r\n        msg._finishInit(client, new Map(), entity);\r\n        return msg;\r\n    }\r\n    return client._getResponseMessage(request, result, entity);\r\n}\r\nexports.sendMessage = sendMessage;\r\n/** @hidden */\r\nasync function forwardMessages(client, entity, { messages, fromPeer, silent, schedule, noforwards }) {\r\n    if (!(0, Helpers_1.isArrayLike)(messages)) {\r\n        messages = [messages];\r\n    }\r\n    entity = await client.getInputEntity(entity);\r\n    let fromPeerId;\r\n    if (fromPeer) {\r\n        fromPeer = await client.getInputEntity(fromPeer);\r\n        fromPeerId = await client.getPeerId(fromPeer);\r\n    }\r\n    const getKey = (m) => {\r\n        if (m instanceof tl_1.Api.Message) {\r\n            return m.chatId;\r\n        }\r\n        let msgId = (0, Utils_1.parseID)(m);\r\n        if (msgId) {\r\n            if (fromPeerId !== undefined) {\r\n                return fromPeerId;\r\n            }\r\n            throw new Error(\"fromPeer must be given if integer IDs are used\");\r\n        }\r\n        else {\r\n            throw new Error(`Cannot forward ${m}`);\r\n        }\r\n    };\r\n    const sent = [];\r\n    for (let [chatId, chunk] of (0, Helpers_1.groupBy)(messages, getKey)) {\r\n        let chat;\r\n        let numbers = [];\r\n        if (typeof chunk[0] == \"number\") {\r\n            chat = fromPeer;\r\n            numbers = chunk;\r\n        }\r\n        else {\r\n            chat = await chunk[0].getInputChat();\r\n            numbers = chunk.map((m) => m.id);\r\n        }\r\n        chunk.push();\r\n        const request = new tl_1.Api.messages.ForwardMessages({\r\n            fromPeer: chat,\r\n            id: numbers,\r\n            toPeer: entity,\r\n            silent: silent,\r\n            scheduleDate: schedule,\r\n            noforwards: noforwards,\r\n        });\r\n        const result = await client.invoke(request);\r\n        sent.push(client._getResponseMessage(request, result, entity));\r\n    }\r\n    return sent;\r\n}\r\nexports.forwardMessages = forwardMessages;\r\n/** @hidden */\r\nasync function editMessage(client, entity, { message, text, parseMode, formattingEntities, linkPreview = true, file, forceDocument, buttons, schedule, }) {\r\n    if (typeof message === \"number\" &&\r\n        typeof text === \"undefined\" &&\r\n        !file &&\r\n        !schedule) {\r\n        throw Error(\"You have to provide either file or text or schedule property.\");\r\n    }\r\n    entity = await client.getInputEntity(entity);\r\n    let id;\r\n    let markup;\r\n    let entities;\r\n    let inputMedia;\r\n    if (file) {\r\n        const { fileHandle, media, image } = await (0, uploads_1._fileToMedia)(client, {\r\n            file,\r\n            forceDocument,\r\n        });\r\n        inputMedia = media;\r\n    }\r\n    if (message instanceof tl_1.Api.Message) {\r\n        id = (0, Utils_1.getMessageId)(message);\r\n        text = message.message;\r\n        entities = message.entities;\r\n        if (buttons == undefined) {\r\n            markup = message.replyMarkup;\r\n        }\r\n        else {\r\n            markup = client.buildReplyMarkup(buttons);\r\n        }\r\n        if (message.media) {\r\n            inputMedia = (0, Utils_1.getInputMedia)(message.media, { forceDocument });\r\n        }\r\n    }\r\n    else {\r\n        if (typeof message !== \"number\") {\r\n            throw Error(\"editMessageParams.message must be either a number or a Api.Message type\");\r\n        }\r\n        id = message;\r\n        if (formattingEntities == undefined) {\r\n            [text, entities] = await (0, messageParse_1._parseMessageText)(client, text || \"\", parseMode);\r\n        }\r\n        else {\r\n            entities = formattingEntities;\r\n        }\r\n        markup = client.buildReplyMarkup(buttons);\r\n    }\r\n    const request = new tl_1.Api.messages.EditMessage({\r\n        peer: entity,\r\n        id,\r\n        message: text,\r\n        noWebpage: !linkPreview,\r\n        entities,\r\n        media: inputMedia,\r\n        replyMarkup: markup,\r\n        scheduleDate: schedule,\r\n    });\r\n    const result = await client.invoke(request);\r\n    return client._getResponseMessage(request, result, entity);\r\n}\r\nexports.editMessage = editMessage;\r\n/** @hidden */\r\nasync function deleteMessages(client, entity, messageIds, { revoke = false }) {\r\n    let ty = Helpers_1._EntityType.USER;\r\n    if (entity) {\r\n        entity = await client.getInputEntity(entity);\r\n        ty = (0, Helpers_1._entityType)(entity);\r\n    }\r\n    const ids = [];\r\n    for (const messageId of messageIds) {\r\n        if (messageId instanceof tl_1.Api.Message ||\r\n            messageId instanceof tl_1.Api.MessageService ||\r\n            messageId instanceof tl_1.Api.MessageEmpty) {\r\n            ids.push(messageId.id);\r\n        }\r\n        else if (typeof messageId === \"number\") {\r\n            ids.push(messageId);\r\n        }\r\n        else {\r\n            throw new Error(`Cannot convert ${messageId} to an integer`);\r\n        }\r\n    }\r\n    const results = [];\r\n    if (ty == Helpers_1._EntityType.CHANNEL) {\r\n        for (const chunk of __1.utils.chunks(ids)) {\r\n            results.push(client.invoke(new tl_1.Api.channels.DeleteMessages({\r\n                channel: entity,\r\n                id: chunk,\r\n            })));\r\n        }\r\n    }\r\n    else {\r\n        for (const chunk of __1.utils.chunks(ids)) {\r\n            results.push(client.invoke(new tl_1.Api.messages.DeleteMessages({\r\n                id: chunk,\r\n                revoke: revoke,\r\n            })));\r\n        }\r\n    }\r\n    return Promise.all(results);\r\n}\r\nexports.deleteMessages = deleteMessages;\r\n/** @hidden */\r\nasync function pinMessage(client, entity, message, pinMessageParams) {\r\n    return await _pin(client, entity, message, false, pinMessageParams === null || pinMessageParams === void 0 ? void 0 : pinMessageParams.notify, pinMessageParams === null || pinMessageParams === void 0 ? void 0 : pinMessageParams.pmOneSide);\r\n}\r\nexports.pinMessage = pinMessage;\r\n/** @hidden */\r\nasync function unpinMessage(client, entity, message, unpinMessageParams) {\r\n    return await _pin(client, entity, message, true, unpinMessageParams === null || unpinMessageParams === void 0 ? void 0 : unpinMessageParams.notify, unpinMessageParams === null || unpinMessageParams === void 0 ? void 0 : unpinMessageParams.pmOneSide);\r\n}\r\nexports.unpinMessage = unpinMessage;\r\n/** @hidden */\r\nasync function _pin(client, entity, message, unpin, notify = false, pmOneSide = false) {\r\n    message = __1.utils.getMessageId(message) || 0;\r\n    if (message === 0) {\r\n        return await client.invoke(new tl_1.Api.messages.UnpinAllMessages({\r\n            peer: entity,\r\n        }));\r\n    }\r\n    entity = await client.getInputEntity(entity);\r\n    const request = new tl_1.Api.messages.UpdatePinnedMessage({\r\n        silent: !notify,\r\n        unpin,\r\n        pmOneside: pmOneSide,\r\n        peer: entity,\r\n        id: message,\r\n    });\r\n    const result = await client.invoke(request);\r\n    /**\r\n     * Unpinning does not produce a service message.\r\n     * Pinning a message that was already pinned also produces no service message.\r\n     * Pinning a message in your own chat does not produce a service message,\r\n     * but pinning on a private conversation with someone else does.\r\n     */\r\n    if (unpin ||\r\n        !(\"updates\" in result) ||\r\n        (\"updates\" in result && !result.updates)) {\r\n        return;\r\n    }\r\n    // Pinning a message that doesn't exist would RPC-error earlier\r\n    return client._getResponseMessage(request, result, entity);\r\n}\r\nexports._pin = _pin;\r\n/** @hidden */\r\nasync function markAsRead(client, entity, message, markAsReadParams) {\r\n    let maxId = (markAsReadParams === null || markAsReadParams === void 0 ? void 0 : markAsReadParams.maxId) || 0;\r\n    const maxIdIsUndefined = (markAsReadParams === null || markAsReadParams === void 0 ? void 0 : markAsReadParams.maxId) === undefined;\r\n    if (maxIdIsUndefined) {\r\n        if (message) {\r\n            if (Array.isArray(message)) {\r\n                maxId = Math.max(...message.map((v) => __1.utils.getMessageId(v)));\r\n            }\r\n            else {\r\n                maxId = __1.utils.getMessageId(message);\r\n            }\r\n        }\r\n    }\r\n    entity = await client.getInputEntity(entity);\r\n    if (markAsReadParams && !markAsReadParams.clearMentions) {\r\n        await client.invoke(new tl_1.Api.messages.ReadMentions({ peer: entity }));\r\n        if (maxIdIsUndefined && message === undefined) {\r\n            return true;\r\n        }\r\n    }\r\n    if ((0, Helpers_1._entityType)(entity) === Helpers_1._EntityType.CHANNEL) {\r\n        return await client.invoke(new tl_1.Api.channels.ReadHistory({ channel: entity, maxId }));\r\n    }\r\n    else {\r\n        await client.invoke(new tl_1.Api.messages.ReadHistory({ peer: entity, maxId }));\r\n        return true;\r\n    }\r\n}\r\nexports.markAsRead = markAsRead;\r\n/** @hidden */\r\nasync function getCommentData(client, entity, message) {\r\n    const result = await client.invoke(new tl_1.Api.messages.GetDiscussionMessage({\r\n        peer: entity,\r\n        msgId: __1.utils.getMessageId(message),\r\n    }));\r\n    const relevantMessage = result.messages[0];\r\n    let chat;\r\n    for (const c of result.chats) {\r\n        if (relevantMessage.peerId instanceof tl_1.Api.PeerChannel &&\r\n            c.id.eq(relevantMessage.peerId.channelId)) {\r\n            chat = c;\r\n            break;\r\n        }\r\n    }\r\n    return {\r\n        entity: __1.utils.getInputPeer(chat),\r\n        replyTo: relevantMessage.id,\r\n    };\r\n}\r\nexports.getCommentData = getCommentData;\r\n// TODO do the rest\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}